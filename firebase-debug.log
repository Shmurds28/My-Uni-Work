[debug] [2022-09-28T12:55:58.872Z] ----------------------------------------------------------------------
[debug] [2022-09-28T12:55:58.876Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\user\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js deploy --only functions
[debug] [2022-09-28T12:55:58.877Z] CLI Version:   11.11.0
[debug] [2022-09-28T12:55:58.877Z] Platform:      win32
[debug] [2022-09-28T12:55:58.877Z] Node Version:  v16.17.0
[debug] [2022-09-28T12:55:58.884Z] Time:          Wed Sep 28 2022 14:55:58 GMT+0200 (South Africa Standard Time)
[debug] [2022-09-28T12:55:58.884Z] ----------------------------------------------------------------------
[debug] 
[debug] [2022-09-28T12:55:59.031Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2022-09-28T12:55:59.032Z] > authorizing via signed-in user (myuniwork22@gmail.com)
[debug] [2022-09-28T12:55:59.033Z] [iam] checking project myuniwork-b6880 for permissions ["cloudfunctions.functions.create","cloudfunctions.functions.delete","cloudfunctions.functions.get","cloudfunctions.functions.list","cloudfunctions.functions.update","cloudfunctions.operations.get","firebase.projects.get"]
[debug] [2022-09-28T12:55:59.038Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/myuniwork-b6880:testIamPermissions [none]
[debug] [2022-09-28T12:55:59.039Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/myuniwork-b6880:testIamPermissions x-goog-quota-user=projects/myuniwork-b6880
[debug] [2022-09-28T12:55:59.039Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/myuniwork-b6880:testIamPermissions {"permissions":["cloudfunctions.functions.create","cloudfunctions.functions.delete","cloudfunctions.functions.get","cloudfunctions.functions.list","cloudfunctions.functions.update","cloudfunctions.operations.get","firebase.projects.get"]}
[debug] [2022-09-29T10:29:02.957Z] ----------------------------------------------------------------------
[debug] [2022-09-29T10:29:02.960Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\user\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js ext:install typesense/firestore-typesense-search --local --project=myuniwork-b6880
[debug] [2022-09-29T10:29:02.961Z] CLI Version:   11.11.0
[debug] [2022-09-29T10:29:02.961Z] Platform:      win32
[debug] [2022-09-29T10:29:02.962Z] Node Version:  v16.17.0
[debug] [2022-09-29T10:29:02.964Z] Time:          Thu Sep 29 2022 12:29:02 GMT+0200 (South Africa Standard Time)
[debug] [2022-09-29T10:29:02.964Z] ----------------------------------------------------------------------
[debug] 
[debug] [2022-09-29T10:29:02.971Z] >>> [apiv2][query] GET https://firebase-public.firebaseio.com/cli.json [none]
[debug] [2022-09-29T10:29:03.143Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2022-09-29T10:29:03.144Z] > authorizing via signed-in user (myuniwork22@gmail.com)
[debug] [2022-09-29T10:29:03.145Z] [iam] checking project myuniwork-b6880 for permissions ["firebase.projects.get","firebaseextensions.instances.create"]
[debug] [2022-09-29T10:29:03.147Z] > refreshing access token with scopes: []
[debug] [2022-09-29T10:29:03.148Z] >>> [apiv2][query] POST https://www.googleapis.com/oauth2/v3/token [none]
[debug] [2022-09-29T10:29:03.148Z] >>> [apiv2][body] POST https://www.googleapis.com/oauth2/v3/token [omitted]
[debug] [2022-09-29T10:29:03.661Z] <<< [apiv2][status] POST https://www.googleapis.com/oauth2/v3/token 200
[debug] [2022-09-29T10:29:03.662Z] <<< [apiv2][body] POST https://www.googleapis.com/oauth2/v3/token [omitted]
[debug] [2022-09-29T10:29:03.675Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/myuniwork-b6880:testIamPermissions [none]
[debug] [2022-09-29T10:29:03.676Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/myuniwork-b6880:testIamPermissions x-goog-quota-user=projects/myuniwork-b6880
[debug] [2022-09-29T10:29:03.676Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/myuniwork-b6880:testIamPermissions {"permissions":["firebase.projects.get","firebaseextensions.instances.create"]}
[debug] [2022-09-29T10:29:04.577Z] <<< [apiv2][status] GET https://firebase-public.firebaseio.com/cli.json 200
[debug] [2022-09-29T10:29:04.577Z] <<< [apiv2][body] GET https://firebase-public.firebaseio.com/cli.json {"cloudBuildErrorAfter":1594252800000,"cloudBuildWarnAfter":1590019200000,"defaultNode10After":1594252800000,"minVersion":"3.0.5","node8DeploysDisabledAfter":1613390400000,"node8RuntimeDisabledAfter":1615809600000,"node8WarnAfter":1600128000000}
[debug] [2022-09-29T10:29:05.862Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/myuniwork-b6880:testIamPermissions 200
[debug] [2022-09-29T10:29:05.862Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/myuniwork-b6880:testIamPermissions {"permissions":["firebase.projects.get","firebaseextensions.instances.create"]}
[info] i  extensions: ensuring required API firebaseextensions.googleapis.com is enabled... 
[debug] [2022-09-29T10:29:05.865Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/myuniwork-b6880/services/firebaseextensions.googleapis.com [none]
[debug] [2022-09-29T10:29:05.865Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/myuniwork-b6880/services/firebaseextensions.googleapis.com x-goog-quota-user=projects/myuniwork-b6880
[debug] [2022-09-29T10:29:08.204Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/myuniwork-b6880/services/firebaseextensions.googleapis.com 200
[debug] [2022-09-29T10:29:08.205Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/myuniwork-b6880/services/firebaseextensions.googleapis.com [omitted]
[info] +  extensions: required API firebaseextensions.googleapis.com is enabled 
[debug] [2022-09-29T10:29:08.209Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/myuniwork-b6880 [none]
[debug] [2022-09-29T10:29:08.994Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/myuniwork-b6880 200
[debug] [2022-09-29T10:29:08.994Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/myuniwork-b6880 {"projectId":"myuniwork-b6880","projectNumber":"77703230322","displayName":"MyUniWork","name":"projects/myuniwork-b6880","resources":{"hostingSite":"myuniwork-b6880","storageBucket":"myuniwork-b6880.appspot.com","locationId":"us-central"},"state":"ACTIVE","etag":"1_6c4a7727-6c34-4b63-8e34-f26df67f4039"}
[info] i  extensions: Checking project IAM policy... 
[debug] [2022-09-29T10:29:08.997Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/projects/myuniwork-b6880/instances pageSize=100&pageToken=
[debug] [2022-09-29T10:29:11.473Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/projects/myuniwork-b6880/instances 200
[debug] [2022-09-29T10:29:11.473Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/projects/myuniwork-b6880/instances {"instances":[{"name":"projects/myuniwork-b6880/instances/firestore-algolia-search","createTime":"2022-08-19T17:44:32.866596Z","updateTime":"2022-08-24T18:29:42.680162Z","state":"ACTIVE","config":{"name":"projects/myuniwork-b6880/instances/firestore-algolia-search/configurations/beb95d9d-99aa-4a93-b883-2f4b9f106c42","createTime":"2022-08-24T18:26:18.114395Z","source":{"name":"projects/algolia-b2ebc/sources/6994866c-9d5c-450a-bb72-2370cd58f10e","packageUri":"https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive-90617dWM1BptELLwn.zip?alt=media","hash":"d6aefc6700830d397ec5475dc4d33103e7713784c4885739919b1e796bf3ac32","extensionRoot":"/","spec":{"specVersion":"v1beta","name":"firestore-algolia-search","version":"0.5.13","description":"Enables full text search of your Cloud Firestore data with Algolia.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read."}],"resources":[{"name":"executeIndexOperation","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${PROJECT_ID}/databases/(default)/documents/${COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs10\n","description":"Firestore document-triggered function that creates, updates, or deletes data in Algolia.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Algolia","url":"https://algolia.com"},"contributors":[{"authorName":"Sajid Momin","email":"sajid.momin@algolia.com","url":"https://github.com/smomin"}],"license":"Apache-2.0","sourceUrl":"https://github.com/algolia/firestore-algolia-search/tree/main","params":[{"param":"COLLECTION_PATH","label":"Collection Path","type":"STRING","description":"What is the path to the Cloud Firestore collection where the extension should monitor for changes?\n","required":true,"example":"store","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/collection\".","immutable":true},{"param":"FIELDS","label":"Indexable Fields","type":"STRING","description":"This can be a comma separated list or left blank to index all fields. For performance reasons, [record size is limited](https://www.algolia.com/doc/guides/sending-and-managing-data/prepare-your-data/in-depth/index-and-records-size-and-usage-limitations/#record-size-limits). If you're receiving errors that your records are too large, refer to the [reducing record size documentation](https://www.algolia.com/doc/guides/sending-and-managing-data/prepare-your-data/how-to/reducing-object-size/).\n","example":"name,category,price,sales"},{"param":"FORCE_DATA_SYNC","label":"Force Data Sync","type":"SELECT","description":"The extension uses approaches to mitigate race conditions but it might not be a 100% fool proof.  This setting will make sure the function is using the latest data from Firestore by making another read call before processing and sending to Algolia.  note: This will be a add to your usage of Firestore.","options":[{"value":"no","label":"No"},{"value":"yes","label":"Yes"}],"default":"no"},{"param":"ALGOLIA_INDEX_NAME","label":"Algolia Index Name","type":"STRING","description":"This is the name of the [Algolia index](https://www.algolia.com/doc/faq/basics/what-is-an-index/) where the records will be persisted. Refer to [naming your index](https://www.algolia.com/doc/guides/sending-and-managing-data/send-and-update-your-data/#naming-your-index) for more information.","required":true},{"param":"ALGOLIA_APP_ID","label":"Algolia Application Id","type":"STRING","description":"This is the Algolia application you want to index your data to. You can find your credentials including application ID on your Algolia dashboard, under the [API keys tab](https://www.algolia.com/api-keys).","required":true},{"param":"ALGOLIA_API_KEY","label":"Algolia API Key","type":"SECRET","description":"We recommend [creating a new API key](https://www.algolia.com/doc/guides/security/api-keys/#creating-and-managing-api-keys) with \"addObject\", \"deleteObject\", \"listIndexes\", \"deleteIndex\", \"editSettings\", and \"settings\" permissions. **Do not use the Admin API key**.","required":true},{"param":"TRANSFORM_FUNCTION","label":"Transform Function Name (Experimental)","type":"STRING","description":"Specify a Firebase Cloud Function for any data transformation before saving into Algolia. Refer to [Call functions for your app](https://firebase.google.com/docs/functions/callable)."},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"immutable":true}],"preinstallContent":"Use this extension to index your Cloud Firestore data to Algolia and keep it synced.  The extension is applied and configured on a Firestore [collection](https://firebase.google.com/docs/firestore/data-model#collections).\n\nThis extension listens for changes on the specified collection. If you add a [document](https://firebase.google.com/docs/firestore/data-model#documents), the extension indexes it as a [record in Algolia](https://www.algolia.com/doc/faq/basics/what-is-a-record/). The extension only indexes the fields defined in the extension configuration and uses the [document Id](https://firebase.google.com/docs/firestore/manage-data/add-data#add_a_document) as the Algolia [object Id](https://www.algolia.com/doc/guides/sending-and-managing-data/send-and-update-your-data/#using-unique-object-identifiers).\n\nAnytime you update a document, the extension propagates the update to the corresponding Algolia record. If you delete a document, the extension removes the corresponding Algolia record.\n\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've\n[set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart)\nin your Firebase project.\n\nYou must also have an Algolia account set up before installing this\nextension. You can do so on the [Algolia](https://www.algolia.com/) site.\n\n#### Billing\n\nThis extension uses the following Firebase services which may have associated charges:\n\n- Cloud Firestore\n- Cloud Functions\n\nThis extension also uses the following third-party services:\n\n- Algolia ([pricing information](https://www.algolia.com/pricing))\n\nYou are responsible for any costs associated with your use of these services.\n\n#### Note from Firebase\n\nTo install this extension, your Firebase project must be on the Blaze (pay-as-you-go) plan. You will only be charged for the resources you use. Most Firebase services offer a free tier for low-volume use. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\nYou will be billed a small amount (typically less than $0.10) when you install or reconfigure this extension. See Cloud Functions under [Firebase Pricing](https://firebase.google.com/pricing) for a detailed explanation.\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away:\n\n1.  Go to the [Cloud Firestore tab](https://console.firebase.google.com/project/${param:PROJECT_ID}/database/firestore/data).\n\n1.  If it doesn't exist already, create a collection called `${param:COLLECTION_PATH}`.\n\n1.  Create, update, or delete a document in the `${param:COLLECTION_PATH}` collection.  Go to Algolia's dashboard and verify in Algolia that a record is created, updated, or deleted in the `${param:ALGOLIA_INDEX_NAME}` index for application id `${param:ALGOLIA_APP_ID}`.\n\n### Using the extension\n\nThis extension listens to the Cloud Firestore collection `${param:COLLECTION_PATH}`. If you create, update, or delete a document within that collection, this extension will:\n\n- Indexes the document and send all the fields or configured fields defined in the extension.\n- or, removes the record from Algolia index if the document is deleted.\n\n### _(Optional)_ Import existing documents or Reindex after configuration changes\nThis extension starts monitoring the `${param:COLLECTION_PATH}` collection after a successful installation. Any existing documents created before the extension installation can be back-filled into your Algolia `${param:ALGOLIA_INDEX_NAME}` Index using the import script.  Also, you will need to run the import script if you change the Indexable Fields, Index Name, Application Id, and/or API Key configuration.\n\nThe import script will read all existing documents in the `${param:COLLECTION_PATH}` collection and insert them into the Algolia `${param:ALGOLIA_INDEX_NAME}` index.\n\n##### Important notes\n\n- You must run the import script over the entire collection **_after_** installing the Search with Algolia extension; otherwise you will have missing records in your Algolia `${param:ALGOLIA_INDEX_NAME}` index.\n- `lastmodified` attributed is added to all Algolia records to eliminate race condition issues related from the Cloud Function cold start.\n\n#### Run the script\n\nThe script will use the extension configuration before the import process starts.\n\nRun the import process using `npx`.\n\n1.  Make sure that you've installed the required tools to run the import script:\n    - To access the `npx` command tools, you need to install [Node.js](https://www.nodejs.org/).\n    - If you use `npm` v5.1 or earlier, you need to explicitly install `npx`. Run `npm install --global npx`.\n\n1.  The import script uses Application Default Credentials to communicate with Firebase.\n    Please follow the instructions to [generate a key for your service account](https://firebase.google.com/docs/admin/setup#initialize-sdk).\n\n1.  Execute the below command:\n    - Update the path to the Google Application credentials.\n    - Clear out the `FIELDS` or/and `TRANSFORM_FUNCTION` params if it contains `{ unspecified parameter }` in the command below since it's an invalid value.\n      ```\n      npx firestore-algolia-search\n      ```\n      Below are the questions that will be asked:\n      ```\n      What is the Region? ${param:LOCATION}\n      What is the Project Id? ${param:PROJECT_ID}\n      What is the Algolia App Id? ${param:ALGOLIA_APP_ID}\n      What is the Algolia Api Key? ${param:ALGOLIA_API_KEY}\n      What is the Algolia Index Name? ${param:ALGOLIA_INDEX_NAME}\n      What is the Collection Path? ${param:COLLECTION_PATH}\n      What are the Fields to extract? ${param:FIELDS}\n      What is the Transform Function? ${param:TRANSFORM_FUNCTION}\n      What is the path to the Google Application Credential File? </path/to/service/account/key>\n      ```\n      **NOTE**: Make sure that there is no space inbetween the specified `FIELDS`. E.g. `name,category,views` ✅ | `name, category, views` ❌.\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Search with Algolia\n\n**Author**: Algolia (**[https://www.algolia.com](https://www.algolia.com)**)\n\n**Description**: Enable full text search of your Cloud Firestore data with Algolia.\n\n**Details**: Use this extension to index your Cloud Firestore data to [Algolia](https://www.algolia.com/doc/) and keep it synced.\n\nYou can then [configure your relevance](/doc/guides/getting-started/how-algolia-works/in-depth/implementation-process/#configuring-relevance) using the [Algolia dashboard](https://www.algolia.com/dashboard) or [API clients](/doc/api-client/getting-started/install/javascript/). From there, you can use Algolia's [front-end libraries](/doc/guides/building-search-ui/what-is-instantsearch/js/) to incorporate search components into your Firebase app's UI.\n\n---\n\nWe welcome [bug reports and feature requests](https://github.com/algolia/firestore-algolia-search/issues/new) as well as pull requests in this GitHub repository.\n\n### Firebase CLI\n\n```bash\nfirebase ext:install algolia/firestore-algolia-search --project=<your-project-id>\n```\n\n> Learn more about installing extensions in the Firebase Extensions documentation: [console](https://firebase.google.com/docs/extensions/install-extensions?platform=console), [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n\n---\n\n#### Details\n\nUse this extension to index your Cloud Firestore data to Algolia and keep it synced.  The extension is applied and configured on a Firestore [collection](https://firebase.google.com/docs/firestore/data-model#collections) or [subcollection](https://firebase.google.com/docs/firestore/data-model#subcollections).\n\nThis extension listens for changes on the specified collection. If you add a [document](https://firebase.google.com/docs/firestore/data-model#documents), the extension indexes it as a [record in Algolia](https://www.algolia.com/doc/faq/basics/what-is-a-record/). The extension only indexes the fields defined in the extension configuration and uses the [document Id](https://firebase.google.com/docs/firestore/manage-data/add-data#add_a_document) as the Algolia [object Id](https://www.algolia.com/doc/guides/sending-and-managing-data/send-and-update-your-data/#using-unique-object-identifiers).\n\nAnytime you update a document, the extension propagates the update to the corresponding Algolia record. If you delete a document, the extension removes the corresponding Algolia record.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've set up:\n- [Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n- [Algolia](https://www.algolia.com/) account.\n\n\n#### Billing\n\nThis extension uses the following Firebase services which may have associated charges:\n\n- Cloud Firestore\n- Cloud Functions\n\nThis extension also uses the following third-party services:\n\n- Algolia ([pricing information](https://www.algolia.com/pricing))\n\nYou are responsible for any costs associated with your use of these services.\n\n#### Note from Firebase\n\nTo install this extension, your Firebase project must be on the Blaze (pay-as-you-go) plan. You will only be charged for the resources you use. Most Firebase services offer a free tier for low-volume use. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\nYou will be billed a small amount (typically less than $0.10) when you install or reconfigure this extension. See Cloud Functions under [Firebase Pricing](https://firebase.google.com/pricing) for a detailed explanation.\n\n#### Configuration Parameters\n\nCloud Functions Location: Where do you want to deploy the functions created for this extension?\n  You usually want a location close to your database.\n  For help selecting a location, refer to the\n  [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n- Collection Path: What is the path to the Cloud Firestore collection where the extension should monitor for changes?\n  For subcollection, the syntax is `parent_collection/{parentId}/target_collection`. (please note, there is not depublication process on subcollections).\n\n- Fields: What document fields should be indexed to provide the best search experience? For more information on which fields to index to Algolia, see the [Algolia documentation on records](https://www.algolia.com/doc/guides/sending-and-managing-data/prepare-your-data/#algolia-records).\n  This can be a comma separated list or left blank to index all fields.\n  For performance reasons, [record size is limited](https://www.algolia.com/doc/guides/sending-and-managing-data/prepare-your-data/in-depth/index-and-records-size-and-usage-limitations/#record-size-limits).\n  If you're receiving errors that your records are too large, refer to the [reducing record size documentation](https://www.algolia.com/doc/guides/sending-and-managing-data/prepare-your-data/how-to/reducing-object-size/).\n\n- Force Data Sync: Are you facing data inconsistent issues possibly due to race conditions?\n  This setting will make sure the function is using the latest data from Firestore by making another read call before processing and sending to Algolia.\n\n- Algolia Application ID: What is the Algolia Application Id?\n  This is the Algolia application you want to index your data to.\n  You can find your credentials including application ID on your Algolia dashboard,\n  under the [API keys tab](https://www.algolia.com/api-keys).\n\n- Algolia API Key: What is your Algolia API key?\n  We recommend [creating a new API key](https://www.algolia.com/doc/guides/security/api-keys/#creating-and-managing-api-keys)\n  with \"addObject\", \"deleteObject\", \"listIndexes\", \"deleteIndex\", \"editSettings\", and \"settings\" permissions.\n  **Do not use the Admin API key**.\n\n- Algolia Index Name: What is the Algolia index name?\n  This is the name of the [Algolia index](https://www.algolia.com/doc/faq/basics/what-is-an-index/)\n  where the records will be persisted.\n  Refer to [naming your index](https://www.algolia.com/doc/guides/sending-and-managing-data/send-and-update-your-data/#naming-your-index) for more information.\n\n- Transform Function Name (experimental): What is the Firebase Cloud Function Name?\n  This is the name of the Firestore Cloud Function for transforming the data before transmitting to Algolia for indexing.\n  This function should be deployed to the same Firebase Project and Location as the Firestore/Algolia extension.\n  Refer to [Call functions for your app](https://firebase.google.com/docs/functions/callable).\n  Below is an example of a Transform function used for my testing:\n  ```javascript\n    import * as functions from \"firebase-functions\";\n\n    const doStuffToData = (payload: any) => {\n      return {\n      ...payload,\n      \"hello\": \"world\",\n      };\n    };\n\n    export const helloWorld = functions.https.onCall((payload) => {\n      const transformedData = doStuffToData(payload);\n      return transformedData;\n    });\n  ```\n  **Note**: The Transform Firebase Function should be set up to unauthenticated users at this time.\n\n#### Cloud Functions\n\n- **executeIndexOperation:** Firestore document-triggered function that creates, updates, or deletes data in Algolia.\n","externalServices":[{"name":"Algolia","pricingUri":"https://algolia.com/pricing"}],"displayName":"Search with Algolia"},"fetchTime":"2022-06-20T04:34:46.159260Z","lastOperationName":"projects/algolia-b2ebc/operations/414405a4-fe9c-4651-ac13-54aef50b8d1c","state":"ACTIVE"},"params":{"FIELDS":"moduleName, moduleCode, description, lecturer, semester,prerequisites,credits,compulsory,","FORCE_DATA_SYNC":"no","ALGOLIA_INDEX_NAME":"modules","ALGOLIA_APP_ID":"F1IS3BSDLF","ALGOLIA_API_KEY":"projects/77703230322/secrets/firestore-algolia-search-ALGOLIA_API_KEY-nqx5/versions/1","LOCATION":"us-central1","COLLECTION_PATH":"modules"},"populatedPostinstallContent":"### See it in action\n\nYou can test out this extension right away:\n\n1.  Go to the [Cloud Firestore tab](https://console.firebase.google.com/project/myuniwork-b6880/database/firestore/data).\n\n1.  If it doesn't exist already, create a collection called `modules`.\n\n1.  Create, update, or delete a document in the `modules` collection.  Go to Algolia's dashboard and verify in Algolia that a record is created, updated, or deleted in the `modules` index for application id `F1IS3BSDLF`.\n\n### Using the extension\n\nThis extension listens to the Cloud Firestore collection `modules`. If you create, update, or delete a document within that collection, this extension will:\n\n- Indexes the document and send all the fields or configured fields defined in the extension.\n- or, removes the record from Algolia index if the document is deleted.\n\n### _(Optional)_ Import existing documents or Reindex after configuration changes\nThis extension starts monitoring the `modules` collection after a successful installation. Any existing documents created before the extension installation can be back-filled into your Algolia `modules` Index using the import script.  Also, you will need to run the import script if you change the Indexable Fields, Index Name, Application Id, and/or API Key configuration.\n\nThe import script will read all existing documents in the `modules` collection and insert them into the Algolia `modules` index.\n\n##### Important notes\n\n- You must run the import script over the entire collection **_after_** installing the Search with Algolia extension; otherwise you will have missing records in your Algolia `modules` index.\n- `lastmodified` attributed is added to all Algolia records to eliminate race condition issues related from the Cloud Function cold start.\n\n#### Run the script\n\nThe script will use the extension configuration before the import process starts.\n\nRun the import process using `npx`.\n\n1.  Make sure that you've installed the required tools to run the import script:\n    - To access the `npx` command tools, you need to install [Node.js](https://www.nodejs.org/).\n    - If you use `npm` v5.1 or earlier, you need to explicitly install `npx`. Run `npm install --global npx`.\n\n1.  The import script uses Application Default Credentials to communicate with Firebase.\n    Please follow the instructions to [generate a key for your service account](https://firebase.google.com/docs/admin/setup#initialize-sdk).\n\n1.  Execute the below command:\n    - Update the path to the Google Application credentials.\n    - Clear out the `FIELDS` or/and `TRANSFORM_FUNCTION` params if it contains `{ unspecified parameter }` in the command below since it's an invalid value.\n      ```\n      npx firestore-algolia-search\n      ```\n      Below are the questions that will be asked:\n      ```\n      What is the Region? us-central1\n      What is the Project Id? myuniwork-b6880\n      What is the Algolia App Id? F1IS3BSDLF\n      What is the Algolia Api Key? { unspecified parameter }\n      What is the Algolia Index Name? modules\n      What is the Collection Path? modules\n      What are the Fields to extract? moduleName, moduleCode, description, lecturer, semester,prerequisites,credits,compulsory,\n      What is the Transform Function? { unspecified parameter }\n      What is the path to the Google Application Credential File? </path/to/service/account/key>\n      ```\n      **NOTE**: Make sure that there is no space inbetween the specified `FIELDS`. E.g. `name,category,views` ✅ | `name, category, views` ❌.\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","extensionRef":"algolia/firestore-algolia-search","extensionVersion":"0.5.13"},"lastOperationName":"projects/myuniwork-b6880/operations/791c39ea-2b2f-44af-96f5-018f03d7b7b5","serviceAccountEmail":"ext-firestore-algolia-search@myuniwork-b6880.iam.gserviceaccount.com","lastOperationType":"CONFIGURE","etag":"660b301b0edb074d975fc7a7344c9ac5ef7d45b2e982464572f9575a13a0f59f"}]}
[debug] [2022-09-29T10:29:11.474Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/myuniwork-b6880:getIamPolicy [none]
[debug] [2022-09-29T10:29:13.382Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/myuniwork-b6880:getIamPolicy 200
[debug] [2022-09-29T10:29:13.383Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/myuniwork-b6880:getIamPolicy {"version":1,"etag":"BwXprh3KPpY=","bindings":[{"role":"roles/appengine.serviceAgent","members":["serviceAccount:service-77703230322@gcp-gae-service.iam.gserviceaccount.com"]},{"role":"roles/artifactregistry.serviceAgent","members":["serviceAccount:service-77703230322@gcp-sa-artifactregistry.iam.gserviceaccount.com"]},{"role":"roles/cloudbuild.builds.builder","members":["serviceAccount:77703230322@cloudbuild.gserviceaccount.com"]},{"role":"roles/cloudbuild.serviceAgent","members":["serviceAccount:service-77703230322@gcp-sa-cloudbuild.iam.gserviceaccount.com"]},{"role":"roles/cloudfunctions.admin","members":["serviceAccount:firebase-adminsdk-flg4s@myuniwork-b6880.iam.gserviceaccount.com"]},{"role":"roles/cloudfunctions.serviceAgent","members":["serviceAccount:service-77703230322@gcf-admin-robot.iam.gserviceaccount.com"]},{"role":"roles/containerregistry.ServiceAgent","members":["serviceAccount:service-77703230322@containerregistry.iam.gserviceaccount.com"]},{"role":"roles/datastore.user","members":["serviceAccount:ext-firestore-algolia-search@myuniwork-b6880.iam.gserviceaccount.com"]},{"role":"roles/editor","members":["serviceAccount:77703230322@cloudservices.gserviceaccount.com","serviceAccount:myuniwork-b6880@appspot.gserviceaccount.com"]},{"role":"roles/firebase.managementServiceAgent","members":["serviceAccount:firebase-service-account@firebase-sa-management.iam.gserviceaccount.com"]},{"role":"roles/firebase.sdkAdminServiceAgent","members":["serviceAccount:firebase-adminsdk-flg4s@myuniwork-b6880.iam.gserviceaccount.com"]},{"role":"roles/firebaseauth.admin","members":["serviceAccount:firebase-adminsdk-flg4s@myuniwork-b6880.iam.gserviceaccount.com"]},{"role":"roles/firebasemods.serviceAgent","members":["serviceAccount:service-77703230322@gcp-sa-firebasemods.iam.gserviceaccount.com"]},{"role":"roles/firebaserules.system","members":["serviceAccount:service-77703230322@firebase-rules.iam.gserviceaccount.com"]},{"role":"roles/firebasestorage.serviceAgent","members":["serviceAccount:service-77703230322@gcp-sa-firebasestorage.iam.gserviceaccount.com"]},{"role":"roles/firestore.serviceAgent","members":["serviceAccount:service-77703230322@gcp-sa-firestore.iam.gserviceaccount.com"]},{"role":"roles/iam.serviceAccountTokenCreator","members":["serviceAccount:firebase-adminsdk-flg4s@myuniwork-b6880.iam.gserviceaccount.com"]},{"role":"roles/owner","members":["user:myuniwork22@gmail.com"]},{"role":"roles/pubsub.serviceAgent","members":["serviceAccount:service-77703230322@gcp-sa-pubsub.iam.gserviceaccount.com"]},{"role":"roles/storage.admin","members":["serviceAccount:firebase-adminsdk-flg4s@myuniwork-b6880.iam.gserviceaccount.com"]}]}
[debug] {"version":1,"etag":"BwXprh3KPpY=","bindings":[{"role":"roles/appengine.serviceAgent","members":["serviceAccount:service-77703230322@gcp-gae-service.iam.gserviceaccount.com"]},{"role":"roles/artifactregistry.serviceAgent","members":["serviceAccount:service-77703230322@gcp-sa-artifactregistry.iam.gserviceaccount.com"]},{"role":"roles/cloudbuild.builds.builder","members":["serviceAccount:77703230322@cloudbuild.gserviceaccount.com"]},{"role":"roles/cloudbuild.serviceAgent","members":["serviceAccount:service-77703230322@gcp-sa-cloudbuild.iam.gserviceaccount.com"]},{"role":"roles/cloudfunctions.admin","members":["serviceAccount:firebase-adminsdk-flg4s@myuniwork-b6880.iam.gserviceaccount.com"]},{"role":"roles/cloudfunctions.serviceAgent","members":["serviceAccount:service-77703230322@gcf-admin-robot.iam.gserviceaccount.com"]},{"role":"roles/containerregistry.ServiceAgent","members":["serviceAccount:service-77703230322@containerregistry.iam.gserviceaccount.com"]},{"role":"roles/datastore.user","members":["serviceAccount:ext-firestore-algolia-search@myuniwork-b6880.iam.gserviceaccount.com"]},{"role":"roles/editor","members":["serviceAccount:77703230322@cloudservices.gserviceaccount.com","serviceAccount:myuniwork-b6880@appspot.gserviceaccount.com"]},{"role":"roles/firebase.managementServiceAgent","members":["serviceAccount:firebase-service-account@firebase-sa-management.iam.gserviceaccount.com"]},{"role":"roles/firebase.sdkAdminServiceAgent","members":["serviceAccount:firebase-adminsdk-flg4s@myuniwork-b6880.iam.gserviceaccount.com"]},{"role":"roles/firebaseauth.admin","members":["serviceAccount:firebase-adminsdk-flg4s@myuniwork-b6880.iam.gserviceaccount.com"]},{"role":"roles/firebasemods.serviceAgent","members":["serviceAccount:service-77703230322@gcp-sa-firebasemods.iam.gserviceaccount.com"]},{"role":"roles/firebaserules.system","members":["serviceAccount:service-77703230322@firebase-rules.iam.gserviceaccount.com"]},{"role":"roles/firebasestorage.serviceAgent","members":["serviceAccount:service-77703230322@gcp-sa-firebasestorage.iam.gserviceaccount.com"]},{"role":"roles/firestore.serviceAgent","members":["serviceAccount:service-77703230322@gcp-sa-firestore.iam.gserviceaccount.com"]},{"role":"roles/iam.serviceAccountTokenCreator","members":["serviceAccount:firebase-adminsdk-flg4s@myuniwork-b6880.iam.gserviceaccount.com"]},{"role":"roles/owner","members":["user:myuniwork22@gmail.com"]},{"role":"roles/pubsub.serviceAgent","members":["serviceAccount:service-77703230322@gcp-sa-pubsub.iam.gserviceaccount.com"]},{"role":"roles/storage.admin","members":["serviceAccount:firebase-adminsdk-flg4s@myuniwork-b6880.iam.gserviceaccount.com"]}]}
[info] +  extensions: Project IAM policy OK 
[warn] !  extensions: As of firebase-tools@11.0.0, the `--local` flag is no longer required, as it is the default behavior. 
[debug] [2022-09-29T10:29:13.394Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/publishers/typesense/extensions/firestore-typesense-search/versions filter=&showPrereleases=false&pageSize=100&pageToken=
[debug] [2022-09-29T10:29:15.190Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/publishers/typesense/extensions/firestore-typesense-search/versions 200
[debug] [2022-09-29T10:29:15.191Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/publishers/typesense/extensions/firestore-typesense-search/versions {"extensionVersions":[{"name":"publishers/typesense/extensions/firestore-typesense-search/versions/0.2.0","ref":"typesense/firestore-typesense-search@0.2.0","spec":{"specVersion":"v1beta","name":"firestore-typesense-search","version":"0.2.0","description":"Indexes data from Firestore into Typesense for full-text search","roles":[{"role":"datastore.user","reason":"Required to backfill data from your Firestore collection into Typesense"}],"resources":[{"name":"indexToTypesenseOnFirestoreWrite","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:FIRESTORE_COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 120s\n","description":"A function that indexes data into Typesense when it's triggered by Firestore changes","deletionPolicy":"DELETE"},{"name":"backfillToTypesenseFromFirestore","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/typesense_sync/backfill\nlocation: ${LOCATION}\nmaxInstances: 1\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 540s\n","description":"A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`. The `backfill` key is deleted by the function, once the backfill is complete.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Typesense","url":"https://typesense.org"},"license":"Apache-2.0","sourceUrl":"https://github.com/typesense/firebase-typesense-search-extension","params":[{"param":"FIRESTORE_COLLECTION_PATH","label":"Firestore Collection Path","type":"STRING","description":"The Firestore collection that needs to be indexed into Typesense.","required":true,"example":"path/to/firestore_collection","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/firestore_collection\".","immutable":true},{"param":"FIRESTORE_COLLECTION_FIELDS","label":"Firestore Collection Fields","type":"STRING","description":"A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.","example":"field1,field2,field3"},{"param":"TYPESENSE_HOSTS","label":"Typesense Hosts","type":"STRING","description":"A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames.","required":true,"example":"xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net"},{"param":"TYPESENSE_API_KEY","label":"Typesense API Key","type":"STRING","description":"An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud","required":true},{"param":"TYPESENSE_COLLECTION_NAME","label":"Typesense Collection Name","type":"STRING","description":"Typesense collection name to index data into","required":true},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"}],"default":"us-central1","immutable":true}],"preinstallContent":"Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or a Self-Hosted server).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n#### Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n","postinstallContent":"### Post-installation Notes\n\nNow that you've installed the extension, changes from `${param:FIRESTORE_COLLECTION_PATH}` \nin your Firestore Database will be synced to the Typesense Collection `${param:TYPESENSE_COLLECTION_NAME}`\non `${param:TYPESENSE_HOSTS}`.\n\n### Pre-requisites\n\nAs a reminder in case you haven't already done this, make sure that you have setup a Typesense Collection in one of the\nfollowing ways:\n\n- Through the Typesense Cloud Dashboard or \n- Through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension expects a Typesense Cloud collection to already be created and does not create it for you.\n\n###  Backfilling Data\n\nThis extension only syncs data that was created or changed after it was installed.\nIn order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n1. Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n2. Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background function, which will read data from your Firestore collection and\ncreate equivalent documents in your Typesense collection. \n\n### See the Extension in Action\n\nTry adding or updating a Firestore document in `${param:FIRESTORE_COLLECTION_PATH}` through the Firestore UI.\nYou should see the change reflected in your Typesense collection.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Firestore / Firebase Typesense Search Extension ⚡ 🔍 \n\n[![CircleCI](https://circleci.com/gh/typesense/firestore-typesense-search.svg?style=shield)](https://circleci.com/gh/typesense/firestore-typesense-search)\n\n**Author**: Typesense (**[https://typesense.org](https://typesense.org)**)\n\n**Description**: Indexes data from Firestore into Typesense for full-text search.\n\n**Details**: Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data, with typo tolerance, faceting and more.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n\n## ⚙️ Required Setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or Self-Hosted).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n\n## 🧾 Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing).\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n\n\n## 🎛️ Configuration Parameters\n\nWhen you install this extension, you'll be able to configure the following parameters:\n\n| Parameter | Description |\n|-----------|-------------|\n| Firestore Collection Path | The Firestore collection that needs to be indexed into Typesense. |\n| Firestore Collection Fields | A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields. |\n| Typesense Hosts | A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames. | \n| Typesense API Key | An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud. |\n| Typesense Collection Name | Typesense collection name to index data into. |\n| Cloud Functions location | Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations). |\n\n\n\n## ☁️ Cloud Functions\n\n* **indexToTypesenseOnFirestoreWrite:** A function that indexes data into Typesense when it's triggered by Firestore changes\n\n* **backfillToTypesenseFromFirestore:** A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`. The `backfill` key is deleted by the function, once the backfill is complete.\n\n\n## 🔑 Access Required\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Required to backfill data from your Firestore collection into Typesense)\n\n\n## 🎬 Install this Extension \n\nYou can install this extension either through the Firebase Web console or through the Firebase CLI.\n\n#### Firebase Console\n\n[![Install this extension in your Firebase project](https://www.gstatic.com/mobilesdk/210513_mobilesdk/install-extension.png \"Install this extension in your Firebase project\")][install-link]\n\n[install-link]: https://console.firebase.google.com/project/_/extensions/install?ref=typesense/firestore-typesense-search\n\n#### Firebase CLI\n\n```bash\nfirebase ext:install typesense/firestore-typesense-search --project=[your-project-id]\n```\n\nLearn more about installing extensions in the Firebase Extensions documentation:\n\n- [Console](https://firebase.google.com/docs/extensions/install-extensions?platform=console)\n- [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n","displayName":"Search Firestore with Typesense"},"state":"PUBLISHED","hash":"3ad5a164f5a748221627d700eb2ad7ebd6f40b73e3fff3fd13d0a1879cfbeb57","createTime":"2021-06-12T19:07:14.537434Z"},{"name":"publishers/typesense/extensions/firestore-typesense-search/versions/0.2.1","ref":"typesense/firestore-typesense-search@0.2.1","spec":{"specVersion":"v1beta","name":"firestore-typesense-search","version":"0.2.1","description":"Indexes data from Firestore into Typesense for full-text search","roles":[{"role":"datastore.user","reason":"Required to backfill data from your Firestore collection into Typesense"}],"resources":[{"name":"indexToTypesenseOnFirestoreWrite","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:FIRESTORE_COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 120s\n","description":"A function that indexes data into Typesense when it's triggered by Firestore changes","deletionPolicy":"DELETE"},{"name":"backfillToTypesenseFromFirestore","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/typesense_sync/backfill\nlocation: ${LOCATION}\nmaxInstances: 1\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 540s\n","description":"A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`. The `backfill` key is deleted by the function, once the backfill is complete.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Typesense","url":"https://typesense.org"},"license":"Apache-2.0","sourceUrl":"https://github.com/typesense/firebase-typesense-search-extension","params":[{"param":"FIRESTORE_COLLECTION_PATH","label":"Firestore Collection Path","type":"STRING","description":"The Firestore collection that needs to be indexed into Typesense.","required":true,"example":"path/to/firestore_collection","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/firestore_collection\".","immutable":true},{"param":"FIRESTORE_COLLECTION_FIELDS","label":"Firestore Collection Fields","type":"STRING","description":"A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.","example":"field1,field2,field3"},{"param":"TYPESENSE_HOSTS","label":"Typesense Hosts","type":"STRING","description":"A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames.","required":true,"example":"xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net"},{"param":"TYPESENSE_API_KEY","label":"Typesense API Key","type":"STRING","description":"An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud","required":true},{"param":"TYPESENSE_COLLECTION_NAME","label":"Typesense Collection Name","type":"STRING","description":"Typesense collection name to index data into","required":true},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true}],"preinstallContent":"Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or a Self-Hosted server).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n#### Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n","postinstallContent":"### Post-installation Notes\n\nNow that you've installed the extension, changes from `${param:FIRESTORE_COLLECTION_PATH}` \nin your Firestore Database will be synced to the Typesense Collection `${param:TYPESENSE_COLLECTION_NAME}`\non `${param:TYPESENSE_HOSTS}`.\n\n### Pre-requisites\n\nAs a reminder in case you haven't already done this, make sure that you have setup a Typesense Collection in one of the\nfollowing ways:\n\n- Through the Typesense Cloud Dashboard or \n- Through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension expects a Typesense Cloud collection to already be created and does not create it for you.\n\n###  Backfilling Data\n\nThis extension only syncs data that was created or changed after it was installed.\nIn order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n1. Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n2. Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background function, which will read data from your Firestore collection and\ncreate equivalent documents in your Typesense collection. \n\n### See the Extension in Action\n\nTry adding or updating a Firestore document in `${param:FIRESTORE_COLLECTION_PATH}` through the Firestore UI.\nYou should see the change reflected in your Typesense collection.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Firestore / Firebase Typesense Search Extension ⚡ 🔍 \n\n[![CircleCI](https://circleci.com/gh/typesense/firestore-typesense-search.svg?style=shield)](https://circleci.com/gh/typesense/firestore-typesense-search)\n\n**Author**: Typesense (**[https://typesense.org](https://typesense.org)**)\n\n**Description**: Indexes data from Firestore into Typesense for full-text search.\n\n**Details**: Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data, with typo tolerance, faceting and more.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n## ⚙️ Usage\n\n### 1. Setup Prerequisites\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or Self-Hosted).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\n### 2. Install the Extension \n\nYou can install this extension either through the Firebase Web console or through the Firebase CLI.\n\n##### Firebase Console\n\n[![Install this extension in your Firebase project](https://www.gstatic.com/mobilesdk/210513_mobilesdk/install-extension.png \"Install this extension in your Firebase project\")][install-link]\n\n[install-link]: https://console.firebase.google.com/project/_/extensions/install?ref=typesense/firestore-typesense-search\n\n##### Firebase CLI\n\n```bash\nfirebase ext:install typesense/firestore-typesense-search --project=[your-project-id]\n```\n\nLearn more about installing extensions in the Firebase Extensions documentation:\n\n- [Console](https://firebase.google.com/docs/extensions/install-extensions?platform=console)\n- [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n\n### 3. Backfilling data (optional)\n\nThis extension only syncs data that was created or changed in Firestore, after it was installed. In order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n- Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n- Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background Cloud function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n## 🧾 Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing).\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n\n\n## 🎛️ Configuration Parameters\n\nWhen you install this extension, you'll be able to configure the following parameters:\n\n| Parameter | Description |\n|-----------|-------------|\n| Firestore Collection Path | The Firestore collection that needs to be indexed into Typesense. |\n| Firestore Collection Fields | A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields. |\n| Typesense Hosts | A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames. | \n| Typesense API Key | An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud. |\n| Typesense Collection Name | Typesense collection name to index data into. |\n| Cloud Functions location | Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations). |\n\n\n\n## ☁️ Cloud Functions\n\n* **indexToTypesenseOnFirestoreWrite:** A function that indexes data into Typesense when it's triggered by Firestore changes\n\n* **backfillToTypesenseFromFirestore:** A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`. The `backfill` key is deleted by the function, once the backfill is complete.\n\n\n## 🔑 Access Required\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Required to backfill data from your Firestore collection into Typesense)\n\n## Development Workflow\n\n#### Run Emulator\n\n```shell\nnpm run emulator\nnpm run typesenseServer\n```\n\n- Emulator UI will be accessible at http://localhost:4000.\n- Local Typesense server will be accessible at http://localhost:8108\n\nAdd records in the Firestore UI and they should be created in Typesense.\n\n#### Run Integration Tests\n\n```shell\nnpm run test\n```\n\n#### Generate README\n\nThe Firebase CLI provides the following convenience command to auto-generate a README file containing content\npulled from extension.yaml file and PREINSTALL.md file:\n\n```shell\nfirebase ext:info ./ --markdown > README.md\n```\n\n#### Publish Extension\n\n- Update version number in extension.yaml\n- \n    ```shell\n    firebase ext:dev:publish typesense/firestore-typesense-search\n    ```\n- Create release in Github\n\n## ℹ️ Support\n\nPlease open a Github issue or join our [Slack community](https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg).\n","displayName":"Search Firestore with Typesense"},"state":"PUBLISHED","hash":"59de0cc678c084a394039266a48d1ed18df03e93fac1a21f0258b37920fd1a49","createTime":"2021-06-16T00:41:30.488260Z"},{"name":"publishers/typesense/extensions/firestore-typesense-search/versions/0.2.2","ref":"typesense/firestore-typesense-search@0.2.2","spec":{"specVersion":"v1beta","name":"firestore-typesense-search","version":"0.2.2","description":"Indexes data from Firestore into Typesense for full-text search","roles":[{"role":"datastore.user","reason":"Required to backfill data from your Firestore collection into Typesense"}],"resources":[{"name":"indexToTypesenseOnFirestoreWrite","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:FIRESTORE_COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 120s\n","description":"A function that indexes data into Typesense when it's triggered by Firestore changes","deletionPolicy":"DELETE"},{"name":"backfillToTypesenseFromFirestore","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/typesense_sync/backfill\nlocation: ${LOCATION}\nmaxInstances: 1\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 540s\n","description":"A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`. The `backfill` key is deleted by the function, once the backfill is complete.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Typesense","url":"https://typesense.org"},"license":"Apache-2.0","releaseNotesUrl":"https://github.com/typesense/firestore-typesense-search/releases","sourceUrl":"https://github.com/typesense/firebase-typesense-search-extension","params":[{"param":"FIRESTORE_COLLECTION_PATH","label":"Firestore Collection Path","type":"STRING","description":"The Firestore collection that needs to be indexed into Typesense.","required":true,"example":"path/to/firestore_collection","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/firestore_collection\".","immutable":true},{"param":"FIRESTORE_COLLECTION_FIELDS","label":"Firestore Collection Fields","type":"STRING","description":"A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.","example":"field1,field2,field3"},{"param":"TYPESENSE_HOSTS","label":"Typesense Hosts","type":"STRING","description":"A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames.","required":true,"example":"xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net"},{"param":"TYPESENSE_API_KEY","label":"Typesense API Key","type":"STRING","description":"An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud","required":true},{"param":"TYPESENSE_COLLECTION_NAME","label":"Typesense Collection Name","type":"STRING","description":"Typesense collection name to index data into","required":true},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true}],"preinstallContent":"Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or a Self-Hosted server).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n#### Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n","postinstallContent":"### Post-installation Notes\n\nNow that you've installed the extension, changes from `${param:FIRESTORE_COLLECTION_PATH}` \nin your Firestore Database will be synced to the Typesense Collection `${param:TYPESENSE_COLLECTION_NAME}`\non `${param:TYPESENSE_HOSTS}`.\n\n### Pre-requisites\n\nAs a reminder in case you haven't already done this, make sure that you have setup a Typesense Collection in one of the\nfollowing ways:\n\n- Through the Typesense Cloud Dashboard or \n- Through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension expects a Typesense Cloud collection to already be created and does not create it for you.\n\n###  Backfilling Data\n\nThis extension only syncs data that was created or changed after it was installed.\nIn order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n1. Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n2. Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background function, which will read data from your Firestore collection and\ncreate equivalent documents in your Typesense collection. \n\n### See the Extension in Action\n\nTry adding or updating a Firestore document in `${param:FIRESTORE_COLLECTION_PATH}` through the Firestore UI.\nYou should see the change reflected in your Typesense collection.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Firestore / Firebase Typesense Search Extension ⚡ 🔍 \n\n[![CircleCI](https://circleci.com/gh/typesense/firestore-typesense-search.svg?style=shield)](https://circleci.com/gh/typesense/firestore-typesense-search)\n\nA Firebase extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), \nto be able to do full-text fuzzy search on your Firestore data, with typo tolerance, faceting, filtering, sorting, curation, synonyms, geosearch and more.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n**What is Typesense?**\n\nIf you're new to [Typesense](https://typesense.org), it is an open source search engine that is simple to use, run and scale, with clean APIs and documentation. Think of it as an open source alternative to Algolia and an easier-to-use, batteries-included alternative to ElasticSearch. Get a quick overview from [this guide](https://typesense.org/docs/guide).\n\n\n## ⚙️ Usage\n\n### 1. Setup Prerequisites\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or Self-Hosted).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\n### 2. Install the Extension \n\nYou can install this extension either through the Firebase Web console or through the Firebase CLI.\n\n##### Firebase Console\n\n[![Install this extension in your Firebase project](https://www.gstatic.com/mobilesdk/210513_mobilesdk/install-extension.png \"Install this extension in your Firebase project\")][install-link]\n\n[install-link]: https://console.firebase.google.com/project/_/extensions/install?ref=typesense/firestore-typesense-search\n\n##### Firebase CLI\n\n```bash\nfirebase ext:install typesense/firestore-typesense-search --project=[your-project-id]\n```\n\nLearn more about installing extensions in the Firebase Extensions documentation:\n\n- [Console](https://firebase.google.com/docs/extensions/install-extensions?platform=console)\n- [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n\n### 3. Backfilling data (optional)\n\nThis extension only syncs data that was created or changed in Firestore, after it was installed. In order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n- Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n- Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background Cloud function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n## 🧾 Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing).\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n\n\n## 🎛️ Configuration Parameters\n\nWhen you install this extension, you'll be able to configure the following parameters:\n\n| Parameter | Description |\n|-----------|-------------|\n| Firestore Collection Path | The Firestore collection that needs to be indexed into Typesense. |\n| Firestore Collection Fields | A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields. |\n| Typesense Hosts | A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames. | \n| Typesense API Key | An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud. |\n| Typesense Collection Name | Typesense collection name to index data into. |\n| Cloud Functions location | Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations). |\n\n\n\n## ☁️ Cloud Functions\n\n* **indexToTypesenseOnFirestoreWrite:** A function that indexes data into Typesense when it's triggered by Firestore changes\n\n* **backfillToTypesenseFromFirestore:** A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`. The `backfill` key is deleted by the function, once the backfill is complete.\n\n\n## 🔑 Access Required\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Required to backfill data from your Firestore collection into Typesense)\n\n## Development Workflow\n\n#### Run Emulator\n\n```shell\nnpm run emulator\nnpm run typesenseServer\n```\n\n- Emulator UI will be accessible at http://localhost:4000.\n- Local Typesense server will be accessible at http://localhost:8108\n\nAdd records in the Firestore UI and they should be created in Typesense.\n\n#### Run Integration Tests\n\n```shell\nnpm run test\n```\n\n#### Generate README\n\nThe Firebase CLI provides the following convenience command to auto-generate a README file containing content\npulled from extension.yaml file and PREINSTALL.md file:\n\n```shell\nfirebase ext:info ./ --markdown > README.md\n```\n\n#### Publish Extension\n\n- Update version number in extension.yaml\n- \n    ```shell\n    firebase ext:dev:publish typesense/firestore-typesense-search\n    ```\n- Create release in Github\n\n## ℹ️ Support\n\nPlease open a Github issue or join our [Slack community](https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg).\n","displayName":"Search Firestore with Typesense"},"state":"PUBLISHED","hash":"a1a22eb0ca21d861c6a4d6703561448d9fddcbeb1be34ecd2995c3fed845546d","createTime":"2021-06-30T01:43:25.635372Z"},{"name":"publishers/typesense/extensions/firestore-typesense-search/versions/0.2.3","ref":"typesense/firestore-typesense-search@0.2.3","spec":{"specVersion":"v1beta","name":"firestore-typesense-search","version":"0.2.3","description":"Indexes data from Firestore into Typesense for full-text search","roles":[{"role":"datastore.user","reason":"Required to backfill data from your Firestore collection into Typesense"}],"resources":[{"name":"indexToTypesenseOnFirestoreWrite","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:FIRESTORE_COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 120s\n","description":"A function that indexes data into Typesense when it's triggered by Firestore changes","deletionPolicy":"DELETE"},{"name":"backfillToTypesenseFromFirestore","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/typesense_sync/backfill\nlocation: ${LOCATION}\nmaxInstances: 1\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 540s\n","description":"A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Typesense","url":"https://typesense.org"},"license":"Apache-2.0","releaseNotesUrl":"https://github.com/typesense/firestore-typesense-search/releases","sourceUrl":"https://github.com/typesense/firebase-typesense-search-extension/tree/master","params":[{"param":"FIRESTORE_COLLECTION_PATH","label":"Firestore Collection Path","type":"STRING","description":"The Firestore collection that needs to be indexed into Typesense.","required":true,"example":"path/to/firestore_collection","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/firestore_collection\".","immutable":true},{"param":"FIRESTORE_COLLECTION_FIELDS","label":"Firestore Collection Fields","type":"STRING","description":"A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.","example":"field1,field2,field3"},{"param":"TYPESENSE_HOSTS","label":"Typesense Hosts","type":"STRING","description":"A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames.","required":true,"example":"xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net"},{"param":"TYPESENSE_API_KEY","label":"Typesense API Key","type":"STRING","description":"An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud","required":true},{"param":"TYPESENSE_COLLECTION_NAME","label":"Typesense Collection Name","type":"STRING","description":"Typesense collection name to index data into","required":true},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true}],"preinstallContent":"Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or a Self-Hosted server).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n#### Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n","postinstallContent":"### Post-installation Notes\n\nNow that you've installed the extension, changes from `${param:FIRESTORE_COLLECTION_PATH}` \nin your Firestore Database will be synced to the Typesense Collection `${param:TYPESENSE_COLLECTION_NAME}`\non `${param:TYPESENSE_HOSTS}`.\n\n### Pre-requisites\n\nAs a reminder in case you haven't already done this, make sure that you have setup a Typesense Collection in one of the\nfollowing ways:\n\n- Through the Typesense Cloud Dashboard or \n- Through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension expects a Typesense Cloud collection to already be created and does not create it for you.\n\n###  Backfilling Data\n\nThis extension only syncs data that was created or changed after it was installed.\nIn order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n1. Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n2. Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background function, which will read data from your Firestore collection and\ncreate equivalent documents in your Typesense collection. \n\n### See the Extension in Action\n\nTry adding or updating a Firestore document in `${param:FIRESTORE_COLLECTION_PATH}` through the Firestore UI.\nYou should see the change reflected in your Typesense collection.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Firestore / Firebase Typesense Search Extension ⚡ 🔍 \n\n[![CircleCI](https://circleci.com/gh/typesense/firestore-typesense-search.svg?style=shield)](https://circleci.com/gh/typesense/firestore-typesense-search)\n\nA Firebase extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), \nto be able to do full-text fuzzy search on your Firestore data, with typo tolerance, faceting, filtering, sorting, curation, synonyms, geosearch and more.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n**What is Typesense?**\n\nIf you're new to [Typesense](https://typesense.org), it is an open source search engine that is simple to use, run and scale, with clean APIs and documentation. Think of it as an open source alternative to Algolia and an easier-to-use, batteries-included alternative to ElasticSearch. Get a quick overview from [this guide](https://typesense.org/docs/guide).\n\n\n## ⚙️ Usage\n\n### 1. Setup Prerequisites\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or Self-Hosted).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\n### 2. Install the Extension \n\nYou can install this extension either through the Firebase Web console or through the Firebase CLI.\n\n##### Firebase Console\n\n[![Install this extension in your Firebase project](https://www.gstatic.com/mobilesdk/210513_mobilesdk/install-extension.png \"Install this extension in your Firebase project\")][install-link]\n\n[install-link]: https://console.firebase.google.com/project/_/extensions/install?ref=typesense/firestore-typesense-search\n\n##### Firebase CLI\n\n```bash\nfirebase ext:install typesense/firestore-typesense-search --project=[your-project-id]\n```\n\nLearn more about installing extensions in the Firebase Extensions documentation:\n\n- [Console](https://firebase.google.com/docs/extensions/install-extensions?platform=console)\n- [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n\n### 3. Backfilling data (optional)\n\nThis extension only syncs data that was created or changed in Firestore, after it was installed. In order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n- Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n- Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background Cloud function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n## 🧾 Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing).\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n\n\n## 🎛️ Configuration Parameters\n\nWhen you install this extension, you'll be able to configure the following parameters:\n\n| Parameter | Description |\n|-----------|-------------|\n| Firestore Collection Path | The Firestore collection that needs to be indexed into Typesense. |\n| Firestore Collection Fields | A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields. |\n| Typesense Hosts | A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames. | \n| Typesense API Key | An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud. |\n| Typesense Collection Name | Typesense collection name to index data into. |\n| Cloud Functions location | Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations). |\n\n\n\n## ☁️ Cloud Functions\n\n* **indexToTypesenseOnFirestoreWrite:** A function that indexes data into Typesense when it's triggered by Firestore changes.\n\n* **backfillToTypesenseFromFirestore:** A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.\n\n\n## 🔑 Access Required\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Required to backfill data from your Firestore collection into Typesense)\n\n## Development Workflow\n\n#### Run Emulator\n\n```shell\nnpm run emulator\nnpm run typesenseServer\n```\n\n- Emulator UI will be accessible at http://localhost:4000.\n- Local Typesense server will be accessible at http://localhost:8108\n\nAdd records in the Firestore UI and they should be created in Typesense.\n\n#### Run Integration Tests\n\n```shell\nnpm run test\n```\n\n#### Generate README\n\nThe Firebase CLI provides the following convenience command to auto-generate a README file containing content\npulled from extension.yaml file and PREINSTALL.md file:\n\n```shell\nfirebase ext:info ./ --markdown > README.md\n```\n\n#### Publish Extension\n\n- Update version number in extension.yaml\n- \n    ```shell\n    firebase ext:dev:publish typesense/firestore-typesense-search\n    ```\n- Create release in Github\n\n## ℹ️ Support\n\nPlease open a Github issue or join our [Slack community](https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg).\n","displayName":"Search Firestore with Typesense"},"state":"PUBLISHED","hash":"cd6645cd9298ad49aa005e3b0e982b97500e7bd40a30687952df1b0d3af621d8","createTime":"2021-06-30T02:06:41.661294Z"},{"name":"publishers/typesense/extensions/firestore-typesense-search/versions/0.2.4","ref":"typesense/firestore-typesense-search@0.2.4","spec":{"specVersion":"v1beta","name":"firestore-typesense-search","version":"0.2.4","description":"Indexes data from Firestore into Typesense for full-text search","roles":[{"role":"datastore.user","reason":"Required to backfill data from your Firestore collection into Typesense"}],"resources":[{"name":"indexToTypesenseOnFirestoreWrite","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:FIRESTORE_COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 120s\n","description":"A function that indexes data into Typesense when it's triggered by Firestore changes","deletionPolicy":"DELETE"},{"name":"backfillToTypesenseFromFirestore","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/typesense_sync/backfill\nlocation: ${LOCATION}\nmaxInstances: 1\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 540s\n","description":"A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Typesense","url":"https://typesense.org"},"license":"Apache-2.0","releaseNotesUrl":"https://github.com/typesense/firestore-typesense-search/releases","sourceUrl":"https://github.com/typesense/firebase-typesense-search-extension/tree/master","params":[{"param":"FIRESTORE_COLLECTION_PATH","label":"Firestore Collection Path","type":"STRING","description":"The Firestore collection that needs to be indexed into Typesense.","required":true,"example":"path/to/firestore_collection","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/firestore_collection\".","immutable":true},{"param":"FIRESTORE_COLLECTION_FIELDS","label":"Firestore Collection Fields","type":"STRING","description":"A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.","example":"field1,field2,field3"},{"param":"TYPESENSE_HOSTS","label":"Typesense Hosts","type":"STRING","description":"A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames.","required":true,"example":"xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net"},{"param":"TYPESENSE_API_KEY","label":"Typesense API Key","type":"STRING","description":"An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud","required":true},{"param":"TYPESENSE_COLLECTION_NAME","label":"Typesense Collection Name","type":"STRING","description":"Typesense collection name to index data into","required":true},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true}],"preinstallContent":"Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or a Self-Hosted server).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n#### Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n","postinstallContent":"### Post-installation Notes\n\nNow that you've installed the extension, changes from `${param:FIRESTORE_COLLECTION_PATH}` \nin your Firestore Database will be synced to the Typesense Collection `${param:TYPESENSE_COLLECTION_NAME}`\non `${param:TYPESENSE_HOSTS}`.\n\n### Pre-requisites\n\nAs a reminder in case you haven't already done this, make sure that you have setup a Typesense Collection in one of the\nfollowing ways:\n\n- Through the Typesense Cloud Dashboard or \n- Through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension expects a Typesense Cloud collection to already be created and does not create it for you.\n\n###  Backfilling Data\n\nThis extension only syncs data that was created or changed after it was installed.\nIn order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n1. Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n2. Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background function, which will read data from your Firestore collection and\ncreate equivalent documents in your Typesense collection. \n\n### See the Extension in Action\n\nTry adding or updating a Firestore document in `${param:FIRESTORE_COLLECTION_PATH}` through the Firestore UI.\nYou should see the change reflected in your Typesense collection.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Firestore / Firebase Typesense Search Extension ⚡ 🔍 \n\n[![CircleCI](https://circleci.com/gh/typesense/firestore-typesense-search.svg?style=shield)](https://circleci.com/gh/typesense/firestore-typesense-search)\n\nA Firebase extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), \nto be able to do full-text fuzzy search on your Firestore data, with typo tolerance, faceting, filtering, sorting, curation, synonyms, geosearch and more.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n**What is Typesense?**\n\nIf you're new to [Typesense](https://typesense.org), it is an open source search engine that is simple to use, run and scale, with clean APIs and documentation. Think of it as an open source alternative to Algolia and an easier-to-use, batteries-included alternative to ElasticSearch. Get a quick overview from [this guide](https://typesense.org/docs/guide).\n\n\n## ⚙️ Usage\n\n### 1. Setup Prerequisites\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or Self-Hosted).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\n### 2. Install the Extension \n\nYou can install this extension either through the Firebase Web console or through the Firebase CLI.\n\n##### Firebase Console\n\n[![Install this extension in your Firebase project](https://www.gstatic.com/mobilesdk/210513_mobilesdk/install-extension.png \"Install this extension in your Firebase project\")][install-link]\n\n[install-link]: https://console.firebase.google.com/project/_/extensions/install?ref=typesense/firestore-typesense-search\n\n##### Firebase CLI\n\n```bash\nfirebase ext:install typesense/firestore-typesense-search --project=[your-project-id]\n```\n\nLearn more about installing extensions in the Firebase Extensions documentation:\n\n- [Console](https://firebase.google.com/docs/extensions/install-extensions?platform=console)\n- [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n\n### 3. Backfilling data (optional)\n\nThis extension only syncs data that was created or changed in Firestore, after it was installed. In order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n- Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n- Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background Cloud function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n## 🧾 Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing).\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n\n\n## 🎛️ Configuration Parameters\n\nWhen you install this extension, you'll be able to configure the following parameters:\n\n| Parameter | Description |\n|-----------|-------------|\n| Firestore Collection Path | The Firestore collection that needs to be indexed into Typesense. |\n| Firestore Collection Fields | A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields. |\n| Typesense Hosts | A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames. | \n| Typesense API Key | An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud. |\n| Typesense Collection Name | Typesense collection name to index data into. |\n| Cloud Functions location | Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations). |\n\n\n\n## ☁️ Cloud Functions\n\n* **indexToTypesenseOnFirestoreWrite:** A function that indexes data into Typesense when it's triggered by Firestore changes.\n\n* **backfillToTypesenseFromFirestore:** A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.\n\n\n## 🔑 Access Required\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Required to backfill data from your Firestore collection into Typesense)\n\n## Development Workflow\n\n#### Run Emulator\n\n```shell\nnpm run emulator\nnpm run typesenseServer\n```\n\n- Emulator UI will be accessible at http://localhost:4000.\n- Local Typesense server will be accessible at http://localhost:8108\n\nAdd records in the Firestore UI and they should be created in Typesense.\n\n#### Run Integration Tests\n\n```shell\nnpm run test\n```\n\n#### Generate README\n\nThe Firebase CLI provides the following convenience command to auto-generate a README file containing content\npulled from extension.yaml file and PREINSTALL.md file:\n\n```shell\nfirebase ext:info ./ --markdown > README.md\n```\n\n#### Publish Extension\n\n- Update version number in extension.yaml\n- \n    ```shell\n    firebase ext:dev:publish typesense/firestore-typesense-search\n    ```\n- Create release in Github\n\n## ℹ️ Support\n\nPlease open a Github issue or join our [Slack community](https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg).\n","displayName":"Search Firestore with Typesense"},"state":"PUBLISHED","hash":"adf68c83bed0dabd0b8e0c77f37d18dcf3b066829dc05406521114d881cb7a50","createTime":"2021-07-23T04:51:30.789565Z"},{"name":"publishers/typesense/extensions/firestore-typesense-search/versions/0.2.5","ref":"typesense/firestore-typesense-search@0.2.5","spec":{"specVersion":"v1beta","name":"firestore-typesense-search","version":"0.2.5","description":"Indexes data from Firestore into Typesense for full-text search","roles":[{"role":"datastore.user","reason":"Required to backfill data from your Firestore collection into Typesense"}],"resources":[{"name":"indexToTypesenseOnFirestoreWrite","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:FIRESTORE_COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 120s\n","description":"A function that indexes data into Typesense when it's triggered by Firestore changes","deletionPolicy":"DELETE"},{"name":"backfillToTypesenseFromFirestore","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 2048\neventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/typesense_sync/backfill\nlocation: ${LOCATION}\nmaxInstances: 1\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 540s\n","description":"A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Typesense","url":"https://typesense.org"},"license":"Apache-2.0","releaseNotesUrl":"https://github.com/typesense/firestore-typesense-search/releases","sourceUrl":"https://github.com/typesense/firebase-typesense-search-extension/tree/master","params":[{"param":"FIRESTORE_COLLECTION_PATH","label":"Firestore Collection Path","type":"STRING","description":"The Firestore collection that needs to be indexed into Typesense.","required":true,"example":"path/to/firestore_collection","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/firestore_collection\".","immutable":true},{"param":"FIRESTORE_COLLECTION_FIELDS","label":"Firestore Collection Fields","type":"STRING","description":"A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.","example":"field1,field2,field3"},{"param":"TYPESENSE_HOSTS","label":"Typesense Hosts","type":"STRING","description":"A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames.","required":true,"example":"xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net"},{"param":"TYPESENSE_API_KEY","label":"Typesense API Key","type":"STRING","description":"An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud","required":true},{"param":"TYPESENSE_COLLECTION_NAME","label":"Typesense Collection Name","type":"STRING","description":"Typesense collection name to index data into","required":true},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true}],"preinstallContent":"Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or a Self-Hosted server).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n#### Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n","postinstallContent":"### Post-installation Notes\n\nNow that you've installed the extension, changes from `${param:FIRESTORE_COLLECTION_PATH}` \nin your Firestore Database will be synced to the Typesense Collection `${param:TYPESENSE_COLLECTION_NAME}`\non `${param:TYPESENSE_HOSTS}`.\n\n### Pre-requisites\n\nAs a reminder in case you haven't already done this, make sure that you have setup a Typesense Collection in one of the\nfollowing ways:\n\n- Through the Typesense Cloud Dashboard or \n- Through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension expects a Typesense Cloud collection to already be created and does not create it for you.\n\n###  Backfilling Data\n\nThis extension only syncs data that was created or changed after it was installed.\nIn order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n1. Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n2. Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background function, which will read data from your Firestore collection and\ncreate equivalent documents in your Typesense collection. \n\n### See the Extension in Action\n\nTry adding or updating a Firestore document in `${param:FIRESTORE_COLLECTION_PATH}` through the Firestore UI.\nYou should see the change reflected in your Typesense collection.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Firestore / Firebase Typesense Search Extension ⚡ 🔍 \n\n[![CircleCI](https://circleci.com/gh/typesense/firestore-typesense-search.svg?style=shield)](https://circleci.com/gh/typesense/firestore-typesense-search)\n\nA Firebase extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), \nto be able to do full-text fuzzy search on your Firestore data, with typo tolerance, faceting, filtering, sorting, curation, synonyms, geosearch and more.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n**What is Typesense?**\n\nIf you're new to [Typesense](https://typesense.org), it is an open source search engine that is simple to use, run and scale, with clean APIs and documentation. Think of it as an open source alternative to Algolia and an easier-to-use, batteries-included alternative to ElasticSearch. Get a quick overview from [this guide](https://typesense.org/docs/guide).\n\n\n## ⚙️ Usage\n\n### 1. Setup Prerequisites\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or Self-Hosted).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\n### 2. Install the Extension \n\nYou can install this extension either through the Firebase Web console or through the Firebase CLI.\n\n##### Firebase Console\n\n[![Install this extension in your Firebase project](https://www.gstatic.com/mobilesdk/210513_mobilesdk/install-extension.png \"Install this extension in your Firebase project\")][install-link]\n\n[install-link]: https://console.firebase.google.com/project/_/extensions/install?ref=typesense/firestore-typesense-search\n\n##### Firebase CLI\n\n```bash\nfirebase ext:install typesense/firestore-typesense-search --project=[your-project-id]\n```\n\nLearn more about installing extensions in the Firebase Extensions documentation:\n\n- [Console](https://firebase.google.com/docs/extensions/install-extensions?platform=console)\n- [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n\n### 3. Backfilling data (optional)\n\nThis extension only syncs data that was created or changed in Firestore, after it was installed. In order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n- Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n- Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background Cloud function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n## 🧾 Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing).\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n\n\n## 🎛️ Configuration Parameters\n\nWhen you install this extension, you'll be able to configure the following parameters:\n\n| Parameter | Description |\n|-----------|-------------|\n| Firestore Collection Path | The Firestore collection that needs to be indexed into Typesense. |\n| Firestore Collection Fields | A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields. |\n| Typesense Hosts | A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames. | \n| Typesense API Key | An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud. |\n| Typesense Collection Name | Typesense collection name to index data into. |\n| Cloud Functions location | Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations). |\n\n\n\n## ☁️ Cloud Functions\n\n* **indexToTypesenseOnFirestoreWrite:** A function that indexes data into Typesense when it's triggered by Firestore changes.\n\n* **backfillToTypesenseFromFirestore:** A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.\n\n\n## 🔑 Access Required\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Required to backfill data from your Firestore collection into Typesense)\n\n## Development Workflow\n\n#### Run Emulator\n\n```shell\nnpm run emulator\nnpm run typesenseServer\n```\n\n- Emulator UI will be accessible at http://localhost:4000.\n- Local Typesense server will be accessible at http://localhost:8108\n\nAdd records in the Firestore UI and they should be created in Typesense.\n\n#### Run Integration Tests\n\n```shell\nnpm run test\n```\n\n#### Generate README\n\nThe Firebase CLI provides the following convenience command to auto-generate a README file containing content\npulled from extension.yaml file and PREINSTALL.md file:\n\n```shell\nfirebase ext:info ./ --markdown > README.md\n```\n\n#### Publish Extension\n\n- Update version number in extension.yaml\n- \n    ```shell\n    firebase ext:dev:publish typesense/firestore-typesense-search\n    ```\n- Create release in Github\n\n## ℹ️ Support\n\nPlease open a Github issue or join our [Slack community](https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg).\n","displayName":"Search Firestore with Typesense"},"state":"PUBLISHED","hash":"0461c1547c384aa5d5556062300a166575d21e7836e3d4f2db92db768638c2c1","createTime":"2021-08-03T22:35:08.556490Z"},{"name":"publishers/typesense/extensions/firestore-typesense-search/versions/0.2.6","ref":"typesense/firestore-typesense-search@0.2.6","spec":{"specVersion":"v1beta","name":"firestore-typesense-search","version":"0.2.6","description":"Indexes data from Firestore into Typesense for full-text search","roles":[{"role":"datastore.user","reason":"Required to backfill data from your Firestore collection into Typesense"}],"resources":[{"name":"indexToTypesenseOnFirestoreWrite","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:FIRESTORE_COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 120s\n","description":"A function that indexes data into Typesense when it's triggered by Firestore changes","deletionPolicy":"DELETE"},{"name":"backfillToTypesenseFromFirestore","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 2048\neventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/typesense_sync/backfill\nlocation: ${LOCATION}\nmaxInstances: 1\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 540s\n","description":"A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Typesense","url":"https://typesense.org"},"license":"Apache-2.0","releaseNotesUrl":"https://github.com/typesense/firestore-typesense-search/releases","sourceUrl":"https://github.com/typesense/firebase-typesense-search-extension/tree/master","params":[{"param":"FIRESTORE_COLLECTION_PATH","label":"Firestore Collection Path","type":"STRING","description":"The Firestore collection that needs to be indexed into Typesense.","required":true,"example":"path/to/firestore_collection","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/firestore_collection\".","immutable":true},{"param":"FIRESTORE_COLLECTION_FIELDS","label":"Firestore Collection Fields","type":"STRING","description":"A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.","example":"field1,field2,field3"},{"param":"TYPESENSE_HOSTS","label":"Typesense Hosts","type":"STRING","description":"A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames.","required":true,"example":"xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net"},{"param":"TYPESENSE_API_KEY","label":"Typesense API Key","type":"STRING","description":"An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud","required":true},{"param":"TYPESENSE_COLLECTION_NAME","label":"Typesense Collection Name","type":"STRING","description":"Typesense collection name to index data into","required":true},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true}],"preinstallContent":"Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or a Self-Hosted server).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n#### Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n","postinstallContent":"### Post-installation Notes\n\nNow that you've installed the extension, changes from `${param:FIRESTORE_COLLECTION_PATH}` \nin your Firestore Database will be synced to the Typesense Collection `${param:TYPESENSE_COLLECTION_NAME}`\non `${param:TYPESENSE_HOSTS}`.\n\n### Pre-requisites\n\nAs a reminder in case you haven't already done this, make sure that you have setup a Typesense Collection in one of the\nfollowing ways:\n\n- Through the Typesense Cloud Dashboard or \n- Through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension expects a Typesense Cloud collection to already be created and does not create it for you.\n\n###  Backfilling Data\n\nThis extension only syncs data that was created or changed after it was installed.\nIn order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n1. Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n2. Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background function, which will read data from your Firestore collection and\ncreate equivalent documents in your Typesense collection. \n\n### See the Extension in Action\n\nTry adding or updating a Firestore document in `${param:FIRESTORE_COLLECTION_PATH}` through the Firestore UI.\nYou should see the change reflected in your Typesense collection.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Firestore / Firebase Typesense Search Extension ⚡ 🔍 \n\n[![CircleCI](https://circleci.com/gh/typesense/firestore-typesense-search.svg?style=shield)](https://circleci.com/gh/typesense/firestore-typesense-search)\n\nA Firebase extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), \nto be able to do full-text fuzzy search on your Firestore data, with typo tolerance, faceting, filtering, sorting, curation, synonyms, geosearch and more.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n**What is Typesense?**\n\nIf you're new to [Typesense](https://typesense.org), it is an open source search engine that is simple to use, run and scale, with clean APIs and documentation. Think of it as an open source alternative to Algolia and an easier-to-use, batteries-included alternative to ElasticSearch. Get a quick overview from [this guide](https://typesense.org/docs/guide).\n\n\n## ⚙️ Usage\n\n### 1. Setup Prerequisites\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or Self-Hosted).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\n### 2. Install the Extension \n\nYou can install this extension either through the Firebase Web console or through the Firebase CLI.\n\n##### Firebase Console\n\n[![Install this extension in your Firebase project](https://www.gstatic.com/mobilesdk/210513_mobilesdk/install-extension.png \"Install this extension in your Firebase project\")][install-link]\n\n[install-link]: https://console.firebase.google.com/project/_/extensions/install?ref=typesense/firestore-typesense-search\n\n##### Firebase CLI\n\n```bash\nfirebase ext:install typesense/firestore-typesense-search --project=[your-project-id]\n```\n\nLearn more about installing extensions in the Firebase Extensions documentation:\n\n- [Console](https://firebase.google.com/docs/extensions/install-extensions?platform=console)\n- [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n\n### 3. Backfilling data (optional)\n\nThis extension only syncs data that was created or changed in Firestore, after it was installed. In order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n- Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n- Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background Cloud function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n## 🧾 Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing).\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n\n\n## 🎛️ Configuration Parameters\n\nWhen you install this extension, you'll be able to configure the following parameters:\n\n| Parameter | Description |\n|-----------|-------------|\n| Firestore Collection Path | The Firestore collection that needs to be indexed into Typesense. |\n| Firestore Collection Fields | A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields. |\n| Typesense Hosts | A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames. | \n| Typesense API Key | An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud. |\n| Typesense Collection Name | Typesense collection name to index data into. |\n| Cloud Functions location | Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations). |\n\n\n\n## ☁️ Cloud Functions\n\n* **indexToTypesenseOnFirestoreWrite:** A function that indexes data into Typesense when it's triggered by Firestore changes.\n\n* **backfillToTypesenseFromFirestore:** A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.\n\n\n## 🔑 Access Required\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Required to backfill data from your Firestore collection into Typesense)\n\n## Development Workflow\n\n#### Run Emulator\n\n```shell\nnpm run emulator\nnpm run typesenseServer\n```\n\n- Emulator UI will be accessible at http://localhost:4000.\n- Local Typesense server will be accessible at http://localhost:8108\n\nAdd records in the Firestore UI and they should be created in Typesense.\n\n#### Run Integration Tests\n\n```shell\nnpm run test\n```\n\n#### Generate README\n\nThe Firebase CLI provides the following convenience command to auto-generate a README file containing content\npulled from extension.yaml file and PREINSTALL.md file:\n\n```shell\nfirebase ext:info ./ --markdown > README.md\n```\n\n#### Publish Extension\n\n- Update version number in extension.yaml\n- \n    ```shell\n    firebase ext:dev:publish typesense/firestore-typesense-search\n    ```\n- Create release in Github\n\n## ℹ️ Support\n\nPlease open a Github issue or join our [Slack community](https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg).\n","displayName":"Search Firestore with Typesense"},"state":"PUBLISHED","hash":"03c48299e5310185888c6ac6af854a062041f1b4391cd7bc63821da8929df903","createTime":"2021-12-22T20:19:30.768482Z"},{"name":"publishers/typesense/extensions/firestore-typesense-search/versions/0.2.7","ref":"typesense/firestore-typesense-search@0.2.7","spec":{"specVersion":"v1beta","name":"firestore-typesense-search","version":"0.2.7","description":"Indexes data from Firestore into Typesense for full-text search","roles":[{"role":"datastore.user","reason":"Required to backfill data from your Firestore collection into Typesense"}],"resources":[{"name":"indexToTypesenseOnFirestoreWrite","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:FIRESTORE_COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 120s\n","description":"A function that indexes data into Typesense when it's triggered by Firestore changes","deletionPolicy":"DELETE"},{"name":"backfillToTypesenseFromFirestore","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 2048\neventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/typesense_sync/backfill\nlocation: ${LOCATION}\nmaxInstances: 1\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 540s\n","description":"A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Typesense","url":"https://typesense.org"},"license":"Apache-2.0","releaseNotesUrl":"https://github.com/typesense/firestore-typesense-search/releases","sourceUrl":"https://github.com/typesense/firebase-typesense-search-extension/tree/master","params":[{"param":"FIRESTORE_COLLECTION_PATH","label":"Firestore Collection Path","type":"STRING","description":"The Firestore collection that needs to be indexed into Typesense.","required":true,"example":"path/to/firestore_collection","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/firestore_collection\".","immutable":true},{"param":"FIRESTORE_COLLECTION_FIELDS","label":"Firestore Collection Fields","type":"STRING","description":"A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.","example":"field1,field2,field3"},{"param":"TYPESENSE_HOSTS","label":"Typesense Hosts","type":"STRING","description":"A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames.","required":true,"example":"xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net"},{"param":"TYPESENSE_API_KEY","label":"Typesense API Key","type":"STRING","description":"An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud","required":true},{"param":"TYPESENSE_COLLECTION_NAME","label":"Typesense Collection Name","type":"STRING","description":"Typesense collection name to index data into","required":true},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true}],"preinstallContent":"Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or a Self-Hosted server).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n#### Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n","postinstallContent":"### Post-installation Notes\n\nNow that you've installed the extension, changes from `${param:FIRESTORE_COLLECTION_PATH}` \nin your Firestore Database will be synced to the Typesense Collection `${param:TYPESENSE_COLLECTION_NAME}`\non `${param:TYPESENSE_HOSTS}`.\n\n### Pre-requisites\n\nAs a reminder in case you haven't already done this, make sure that you have setup a Typesense Collection in one of the\nfollowing ways:\n\n- Through the Typesense Cloud Dashboard or \n- Through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension expects a Typesense Cloud collection to already be created and does not create it for you.\n\n###  Backfilling Data\n\nThis extension only syncs data that was created or changed after it was installed.\nIn order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n1. Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n2. Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background function, which will read data from your Firestore collection and\ncreate equivalent documents in your Typesense collection. \n\n### See the Extension in Action\n\nTry adding or updating a Firestore document in `${param:FIRESTORE_COLLECTION_PATH}` through the Firestore UI.\nYou should see the change reflected in your Typesense collection.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Firestore / Firebase Typesense Search Extension ⚡ 🔍 \n\n[![CircleCI](https://circleci.com/gh/typesense/firestore-typesense-search.svg?style=shield)](https://circleci.com/gh/typesense/firestore-typesense-search)\n\nA Firebase extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), \nto be able to do full-text fuzzy search on your Firestore data, with typo tolerance, faceting, filtering, sorting, curation, synonyms, geosearch and more.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n**What is Typesense?**\n\nIf you're new to [Typesense](https://typesense.org), it is an open source search engine that is simple to use, run and scale, with clean APIs and documentation. Think of it as an open source alternative to Algolia and an easier-to-use, batteries-included alternative to ElasticSearch. Get a quick overview from [this guide](https://typesense.org/docs/guide).\n\n\n## ⚙️ Usage\n\n### 1. Setup Prerequisites\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or Self-Hosted).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\n### 2. Install the Extension \n\nYou can install this extension either through the Firebase Web console or through the Firebase CLI.\n\n##### Firebase Console\n\n[![Install this extension in your Firebase project](https://www.gstatic.com/mobilesdk/210513_mobilesdk/install-extension.png \"Install this extension in your Firebase project\")][install-link]\n\n[install-link]: https://console.firebase.google.com/project/_/extensions/install?ref=typesense/firestore-typesense-search\n\n##### Firebase CLI\n\n```bash\nfirebase ext:install typesense/firestore-typesense-search --project=[your-project-id]\n```\n\nLearn more about installing extensions in the Firebase Extensions documentation:\n\n- [Console](https://firebase.google.com/docs/extensions/install-extensions?platform=console)\n- [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n\n##### Syncing Multiple Firestore collections\n\nYou can install this extension multiple times in your Firebase project by clicking on the installation link above multiple times, and use a different Firestore collection path in each installation instance. [Here](https://github.com/typesense/firestore-typesense-search/issues/9#issuecomment-885940705) is a screenshot of how this looks.\n\n### 3. Backfilling data (optional)\n\nThis extension only syncs data that was created or changed in Firestore, after it was installed. In order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n- Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n- Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background Cloud function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n## 🧾 Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing).\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n\n\n## 🎛️ Configuration Parameters\n\nWhen you install this extension, you'll be able to configure the following parameters:\n\n| Parameter | Description |\n|-----------|-------------|\n| Firestore Collection Path | The Firestore collection that needs to be indexed into Typesense. |\n| Firestore Collection Fields | A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields. |\n| Typesense Hosts | A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames. | \n| Typesense API Key | An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud. |\n| Typesense Collection Name | Typesense collection name to index data into. |\n| Cloud Functions location | Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations). |\n\n\n\n## ☁️ Cloud Functions\n\n* **indexToTypesenseOnFirestoreWrite:** A function that indexes data into Typesense when it's triggered by Firestore changes.\n\n* **backfillToTypesenseFromFirestore:** A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.\n\n\n## 🔑 Access Required\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Required to backfill data from your Firestore collection into Typesense)\n\n## Development Workflow\n\n#### Run Emulator\n\n```shell\nnpm run emulator\nnpm run typesenseServer\n```\n\n- Emulator UI will be accessible at http://localhost:4000.\n- Local Typesense server will be accessible at http://localhost:8108\n\nAdd records in the Firestore UI and they should be created in Typesense.\n\n#### Run Integration Tests\n\n```shell\nnpm run test\n```\n\n#### Generate README\n\nThe Firebase CLI provides the following convenience command to auto-generate a README file containing content\npulled from extension.yaml file and PREINSTALL.md file:\n\n```shell\nfirebase ext:info ./ --markdown > README.md\n```\n\n#### Publish Extension\n\n- Update version number in extension.yaml\n- Add entry to CHANGELOG.md\n- \n    ```shell\n    firebase ext:dev:publish typesense/firestore-typesense-search\n    ```\n- Create release in Github\n\n## ℹ️ Support\n\nPlease open a Github issue or join our [Slack community](https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg).\n","displayName":"Search Firestore with Typesense"},"state":"PUBLISHED","hash":"4b63fd102eace63a3107b2399865a1d0f78bfd93747b2aa1d88908e3684ab388","createTime":"2022-02-25T19:47:38.737401Z","releaseNotes":"- Support for Typesense collection names with special characters like `/`\n"},{"name":"publishers/typesense/extensions/firestore-typesense-search/versions/0.2.8","ref":"typesense/firestore-typesense-search@0.2.8","spec":{"specVersion":"v1beta","name":"firestore-typesense-search","version":"0.2.8","description":"Indexes data from Firestore into Typesense for full-text search","roles":[{"role":"datastore.user","reason":"Required to backfill data from your Firestore collection into Typesense"}],"resources":[{"name":"indexToTypesenseOnFirestoreWrite","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:FIRESTORE_COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 120s\n","description":"A function that indexes data into Typesense when it's triggered by Firestore changes","deletionPolicy":"DELETE"},{"name":"backfillToTypesenseFromFirestore","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 2048\neventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/typesense_sync/backfill\nlocation: ${LOCATION}\nmaxInstances: 1\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 540s\n","description":"A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Typesense","url":"https://typesense.org"},"license":"Apache-2.0","releaseNotesUrl":"https://github.com/typesense/firestore-typesense-search/releases","sourceUrl":"https://github.com/typesense/firebase-typesense-search-extension/tree/master","params":[{"param":"FIRESTORE_COLLECTION_PATH","label":"Firestore Collection Path","type":"STRING","description":"The Firestore collection that needs to be indexed into Typesense.","required":true,"default":"typesense","example":"path/to/firestore_collection","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/firestore_collection\".","immutable":true},{"param":"FIRESTORE_COLLECTION_FIELDS","label":"Firestore Collection Fields","type":"STRING","description":"A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.","example":"field1,field2,field3"},{"param":"TYPESENSE_HOSTS","label":"Typesense Hosts","type":"STRING","description":"A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames.","required":true,"example":"xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net"},{"param":"TYPESENSE_API_KEY","label":"Typesense API Key","type":"SECRET","description":"An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud","required":true},{"param":"TYPESENSE_COLLECTION_NAME","label":"Typesense Collection Name","type":"STRING","description":"Typesense collection name to index data into","required":true,"default":"companies"},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true}],"preinstallContent":"Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or a Self-Hosted server).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n#### Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n","postinstallContent":"### Post-installation Notes\n\nNow that you've installed the extension, changes from `${param:FIRESTORE_COLLECTION_PATH}`\nin your Firestore Database will be synced to the Typesense Collection `${param:TYPESENSE_COLLECTION_NAME}`\non `${param:TYPESENSE_HOSTS}`.\n\n### Pre-requisites\n\nAs a reminder in case you haven't already done this, make sure that you have setup a Typesense Collection in one of the following ways:\n\n- Through the Typesense Cloud Dashboard or\n- Through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension expects a Typesense Cloud collection to already be created and does not create it for you.\n\n### Backfilling Data\n\nThis extension only syncs data that was created or changed after it was installed.\nIn order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n1. Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n2. Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n### See the Extension in Action\n\nTry adding or updating a Firestore document in `${param:FIRESTORE_COLLECTION_PATH}` through the Firestore UI.\nYou should see the change reflected in your Typesense collection.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Firestore / Firebase Typesense Search Extension ⚡ 🔍 \n\n[![CircleCI](https://circleci.com/gh/typesense/firestore-typesense-search.svg?style=shield)](https://circleci.com/gh/typesense/firestore-typesense-search)\n\nA Firebase extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), \nto be able to do full-text fuzzy search on your Firestore data, with typo tolerance, faceting, filtering, sorting, curation, synonyms, geosearch and more.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n**What is Typesense?**\n\nIf you're new to [Typesense](https://typesense.org), it is an open source search engine that is simple to use, run and scale, with clean APIs and documentation. Think of it as an open source alternative to Algolia and an easier-to-use, batteries-included alternative to ElasticSearch. Get a quick overview from [this guide](https://typesense.org/docs/guide).\n\n\n## ⚙️ Usage\n\n### 1. Setup Prerequisites\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Set up](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or Self-Hosted).\n3. Set up a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\n### 2. Install the Extension \n\nYou can install this extension either through the Firebase Web console or through the Firebase CLI.\n\n##### Firebase Console\n\n[![Install this extension in your Firebase project](https://www.gstatic.com/mobilesdk/210513_mobilesdk/install-extension.png \"Install this extension in your Firebase project\")][install-link]\n\n[install-link]: https://console.firebase.google.com/project/_/extensions/install?ref=typesense/firestore-typesense-search\n\n##### Firebase CLI\n\n```bash\nfirebase ext:install typesense/firestore-typesense-search --project=[your-project-id]\n```\n\nLearn more about installing extensions in the Firebase Extensions documentation:\n\n- [Console](https://firebase.google.com/docs/extensions/install-extensions?platform=console)\n- [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n\n##### Syncing Multiple Firestore collections\n\nYou can install this extension multiple times in your Firebase project by clicking on the installation link above multiple times, and use a different Firestore collection path in each installation instance. [Here](https://github.com/typesense/firestore-typesense-search/issues/9#issuecomment-885940705) is a screenshot of how this looks.\n\n### 3. Backfilling data (optional)\n\nThis extension only syncs data that was created or changed in Firestore, after it was installed. In order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n- Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n- Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background Cloud function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n## 🧾 Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing).\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n\n\n## 🎛️ Configuration Parameters\n\nWhen you install this extension, you'll be able to configure the following parameters:\n\n| Parameter | Description |\n|-----------|-------------|\n| Firestore Collection Path | The Firestore collection that needs to be indexed into Typesense. |\n| Firestore Collection Fields | A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields. |\n| Typesense Hosts | A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames. | \n| Typesense API Key | An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud. |\n| Typesense Collection Name | Typesense collection name to index data into. |\n| Cloud Functions location | Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations). |\n\n\n\n## ☁️ Cloud Functions\n\n* **indexToTypesenseOnFirestoreWrite:** A function that indexes data into Typesense when it's triggered by Firestore changes.\n\n* **backfillToTypesenseFromFirestore:** A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.\n\n\n## 🔑 Access Required\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Required to backfill data from your Firestore collection into Typesense)\n\n## Development Workflow\n\n#### Run Emulator\n\n```shell\nnpm run emulator\nnpm run typesenseServer\n```\n\n- Emulator UI will be accessible at http://localhost:4000.\n- Local Typesense server will be accessible at http://localhost:8108\n\nAdd records in the Firestore UI and they should be created in Typesense.\n\n#### Run Integration Tests\n\n```shell\nnpm run test\n```\n\n#### Generate README\n\nThe Firebase CLI provides the following convenience command to auto-generate a README file containing content\npulled from extension.yaml file and PREINSTALL.md file:\n\n```shell\nfirebase ext:info ./ --markdown > README.md\n```\n\n#### Publish Extension\n\n- Update version number in extension.yaml\n- Add entry to CHANGELOG.md\n- \n    ```shell\n    firebase ext:dev:publish typesense/firestore-typesense-search\n    ```\n- Create release in Github\n\n## ℹ️ Support\n\nPlease open a Github issue or join our [Slack community](https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg).\n","externalServices":[{"name":"Typesense Cloud","pricingUri":"https://cloud.typesense.org/pricing"},{"name":"Typesense Self Hosted (Free)","pricingUri":"https://typesense.org/downloads"}],"displayName":"Search Firestore with Typesense"},"state":"PUBLISHED","hash":"a8ccc68575ba7005977665b9bdb68e0e012aadceb2579ef589f8f154d1181bb9","createTime":"2022-03-31T19:04:43.712550Z","releaseNotes":"- Add default values to params, add links to external services needed for plugin\n"},{"name":"publishers/typesense/extensions/firestore-typesense-search/versions/0.3.0","ref":"typesense/firestore-typesense-search@0.3.0","spec":{"specVersion":"v1beta","name":"firestore-typesense-search","version":"0.3.0","description":"Indexes data from Firestore into Typesense for full-text search","roles":[{"role":"datastore.user","reason":"Required to backfill data from your Firestore collection into Typesense"}],"resources":[{"name":"indexToTypesenseOnFirestoreWrite","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:FIRESTORE_COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 120s\n","description":"A function that indexes data into Typesense when it's triggered by Firestore changes","deletionPolicy":"DELETE"},{"name":"backfillToTypesenseFromFirestore","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 2048\neventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/typesense_sync/backfill\nlocation: ${LOCATION}\nmaxInstances: 1\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 540s\n","description":"A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Typesense","url":"https://typesense.org"},"license":"Apache-2.0","releaseNotesUrl":"https://github.com/typesense/firestore-typesense-search/releases","sourceUrl":"https://github.com/typesense/firebase-typesense-search-extension/tree/master","params":[{"param":"FIRESTORE_COLLECTION_PATH","label":"Firestore Collection Path","type":"STRING","description":"The Firestore collection that needs to be indexed into Typesense.","required":true,"default":"typesense","example":"path/to/firestore_collection","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/firestore_collection\".","immutable":true},{"param":"FIRESTORE_COLLECTION_FIELDS","label":"Firestore Collection Fields","type":"STRING","description":"A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.","example":"field1,field2,field3"},{"param":"TYPESENSE_HOSTS","label":"Typesense Hosts","type":"STRING","description":"A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames.","required":true,"example":"xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net"},{"param":"TYPESENSE_API_KEY","label":"Typesense API Key","type":"SECRET","description":"An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud","required":true},{"param":"TYPESENSE_COLLECTION_NAME","label":"Typesense Collection Name","type":"STRING","description":"Typesense collection name to index data into","required":true,"default":"companies"},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true}],"preinstallContent":"Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or a Self-Hosted server).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n#### Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n","postinstallContent":"### Post-installation Notes\n\nNow that you've installed the extension, changes from `${param:FIRESTORE_COLLECTION_PATH}`\nin your Firestore Database will be synced to the Typesense Collection `${param:TYPESENSE_COLLECTION_NAME}`\non `${param:TYPESENSE_HOSTS}`.\n\n### Pre-requisites\n\nAs a reminder in case you haven't already done this, make sure that you have setup a Typesense Collection in one of the following ways:\n\n- Through the Typesense Cloud Dashboard or\n- Through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension expects a Typesense Cloud collection to already be created and does not create it for you.\n\n### Backfilling Data\n\nThis extension only syncs data that was created or changed after it was installed.\nIn order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n1. Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n2. Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n### See the Extension in Action\n\nTry adding or updating a Firestore document in `${param:FIRESTORE_COLLECTION_PATH}` through the Firestore UI.\nYou should see the change reflected in your Typesense collection.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Firestore / Firebase Typesense Search Extension ⚡ 🔍 \n\n[![CircleCI](https://circleci.com/gh/typesense/firestore-typesense-search.svg?style=shield)](https://circleci.com/gh/typesense/firestore-typesense-search)\n\nA Firebase extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), \nto be able to do full-text fuzzy search on your Firestore data, with typo tolerance, faceting, filtering, sorting, curation, synonyms, geosearch and more.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n**What is Typesense?**\n\nIf you're new to [Typesense](https://typesense.org), it is an open source search engine that is simple to use, run and scale, with clean APIs and documentation. Think of it as an open source alternative to Algolia and an easier-to-use, batteries-included alternative to ElasticSearch. Get a quick overview from [this guide](https://typesense.org/docs/guide).\n\n\n## ⚙️ Usage\n\n### 1. Setup Prerequisites\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Set up](https://typesense.org/docs/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or Self-Hosted).\n3. Set up a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/latest/api/collections.html#create-a-collection).\n\n### 2. Install the Extension \n\nYou can install this extension either through the Firebase Web console or through the Firebase CLI.\n\n##### Firebase Console\n\n[![Install this extension in your Firebase project](https://www.gstatic.com/mobilesdk/210513_mobilesdk/install-extension.png \"Install this extension in your Firebase project\")][install-link]\n\n[install-link]: https://console.firebase.google.com/project/_/extensions/install?ref=typesense/firestore-typesense-search\n\n##### Firebase CLI\n\n```bash\nfirebase ext:install typesense/firestore-typesense-search@0.2.7 --project=[your-project-id]\n```\n\nLearn more about installing extensions in the Firebase Extensions documentation:\n\n- [Console](https://firebase.google.com/docs/extensions/install-extensions?platform=console)\n- [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n\n##### Syncing Multiple Firestore collections\n\nYou can install this extension multiple times in your Firebase project by clicking on the installation link above multiple times, and use a different Firestore collection path in each installation instance. [Here](https://github.com/typesense/firestore-typesense-search/issues/9#issuecomment-885940705) is a screenshot of how this looks.\n\n### 3. Backfilling data (optional)\n\nThis extension only syncs data that was created or changed in Firestore, after it was installed. In order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n- Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n- Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background Cloud function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n## 🧾 Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing).\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n\n\n## 🎛️ Configuration Parameters\n\nWhen you install this extension, you'll be able to configure the following parameters:\n\n| Parameter | Description |\n|-----------|-------------|\n| Firestore Collection Path | The Firestore collection that needs to be indexed into Typesense. |\n| Firestore Collection Fields | A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields. |\n| Typesense Hosts | A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames. | \n| Typesense API Key | An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud. |\n| Typesense Collection Name | Typesense collection name to index data into. |\n| Cloud Functions location | Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations). |\n\n\n\n## ☁️ Cloud Functions\n\n* **indexToTypesenseOnFirestoreWrite:** A function that indexes data into Typesense when it's triggered by Firestore changes.\n\n* **backfillToTypesenseFromFirestore:** A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.\n\n\n## 🔑 Access Required\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Required to backfill data from your Firestore collection into Typesense)\n\n## Development Workflow\n\n#### Run Emulator\n\n```shell\nnpm run emulator\nnpm run typesenseServer\n```\n\n- Emulator UI will be accessible at http://localhost:4000.\n- Local Typesense server will be accessible at http://localhost:8108\n\nAdd records in the Firestore UI and they should be created in Typesense.\n\n#### Run Integration Tests\n\n```shell\nnpm run test\n```\n\n#### Generate README\n\nThe Firebase CLI provides the following convenience command to auto-generate a README file containing content\npulled from extension.yaml file and PREINSTALL.md file:\n\n```shell\nfirebase ext:info ./ --markdown > README.md\n```\n\n#### Publish Extension\n\n- Update version number in extension.yaml\n- Add entry to CHANGELOG.md\n- \n    ```shell\n    firebase ext:dev:publish typesense/firestore-typesense-search\n    ```\n- Create release in Github\n\n## ℹ️ Support\n\nPlease open a Github issue or join our [Slack community](https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg).\n","externalServices":[{"name":"Typesense Cloud","pricingUri":"https://cloud.typesense.org/pricing"},{"name":"Typesense Self Hosted (Free)","pricingUri":"https://typesense.org/downloads"}],"displayName":"Search Firestore with Typesense"},"state":"PUBLISHED","hash":"54830f068de0230b225c0ff9985311703a710dfd0cc16745c048307d10e44a85","createTime":"2022-04-18T20:57:05.129938Z","releaseNotes":"- Map Firestore Timestamps to int64 values in Typesense\n- Map Firestore GeoPoint values to Typesense geopoint format\n- Flatten nested field values to top-level keys in Typesense\n"},{"name":"publishers/typesense/extensions/firestore-typesense-search/versions/0.4.0","ref":"typesense/firestore-typesense-search@0.4.0","spec":{"specVersion":"v1beta","name":"firestore-typesense-search","version":"0.4.0","description":"Indexes data from Firestore into Typesense for full-text search","roles":[{"role":"datastore.user","reason":"Required to backfill data from your Firestore collection into Typesense"}],"resources":[{"name":"indexToTypesenseOnFirestoreWrite","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:FIRESTORE_COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 120s\n","description":"A function that indexes data into Typesense when it's triggered by Firestore changes","deletionPolicy":"DELETE"},{"name":"backfillToTypesenseFromFirestore","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 2048\neventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/typesense_sync/backfill\nlocation: ${LOCATION}\nmaxInstances: 1\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 540s\n","description":"A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Typesense","url":"https://typesense.org"},"license":"Apache-2.0","releaseNotesUrl":"https://github.com/typesense/firestore-typesense-search/releases","sourceUrl":"https://github.com/typesense/firebase-typesense-search-extension/tree/master","params":[{"param":"FIRESTORE_COLLECTION_PATH","label":"Firestore Collection Path","type":"STRING","description":"The Firestore collection that needs to be indexed into Typesense.","required":true,"default":"path/to/firestore_collection","example":"path/to/firestore_collection","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/firestore_collection\".","immutable":true},{"param":"FIRESTORE_COLLECTION_FIELDS","label":"Firestore Collection Fields","type":"STRING","description":"A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.","example":"field1,field2,field3"},{"param":"TYPESENSE_HOSTS","label":"Typesense Hosts","type":"STRING","description":"A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames.","required":true,"example":"xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net"},{"param":"TYPESENSE_API_KEY","label":"Typesense API Key","type":"SECRET","description":"An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud","required":true},{"param":"TYPESENSE_COLLECTION_NAME","label":"Typesense Collection Name","type":"STRING","description":"Typesense collection name to index data into","required":true,"default":"companies"},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true}],"preinstallContent":"Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or a Self-Hosted server).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n#### Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n","postinstallContent":"### Post-installation Notes\n\nNow that you've installed the extension, changes from `${param:FIRESTORE_COLLECTION_PATH}`\nin your Firestore Database will be synced to the Typesense Collection `${param:TYPESENSE_COLLECTION_NAME}`\non `${param:TYPESENSE_HOSTS}`.\n\n### Pre-requisites\n\nAs a reminder in case you haven't already done this, make sure that you have setup a Typesense Collection in one of the following ways:\n\n- Through the Typesense Cloud Dashboard or\n- Through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension expects a Typesense Cloud collection to already be created and does not create it for you.\n\n### Backfilling Data\n\nThis extension only syncs data that was created or changed after it was installed.\nIn order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n1. Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n2. Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n### See the Extension in Action\n\nTry adding or updating a Firestore document in `${param:FIRESTORE_COLLECTION_PATH}` through the Firestore UI.\nYou should see the change reflected in your Typesense collection.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Firestore / Firebase Typesense Search Extension ⚡ 🔍 \n\n[![CircleCI](https://circleci.com/gh/typesense/firestore-typesense-search.svg?style=shield)](https://circleci.com/gh/typesense/firestore-typesense-search)\n\nA Firebase extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), \nto be able to do full-text fuzzy search on your Firestore data, with typo tolerance, faceting, filtering, sorting, curation, synonyms, geosearch and more.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n**What is Typesense?**\n\nIf you're new to [Typesense](https://typesense.org), it is an open source search engine that is simple to use, run and scale, with clean APIs and documentation. Think of it as an open source alternative to Algolia and an easier-to-use, batteries-included alternative to ElasticSearch. Get a quick overview from [this guide](https://typesense.org/docs/guide).\n\n\n## ⚙️ Usage\n\n### Step 1️⃣ : Setup Prerequisites\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Set up](https://typesense.org/docs/guide/install-typesense.html) a Typesense cluster on [Typesense Cloud](https://cloud.typesense.org) or [Self-Hosted](https://typesense.org/docs/guide/install-typesense.html#option-2-local-machine-self-hosting) (free).\n3. Set up a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/latest/api/collections.html#create-a-collection).\n  \n⚠️ ☝️ #3 above is a commonly missed step. This extension **does not create the Typesense Collection for you**. Instead it syncs data to a Typesense collection you've already created. If you see an HTTP 404 in the extension logs, it's most likely because of missing this step. \n\n### Step 2️⃣ : Install the Extension \n\nYou can install this extension either through the Firebase Web console or through the Firebase CLI.\n\n##### Firebase Console\n\n[![Install this extension in your Firebase project](https://www.gstatic.com/mobilesdk/210513_mobilesdk/install-extension.png \"Install this extension in your Firebase project\")][install-link]\n\n[install-link]: https://console.firebase.google.com/project/_/extensions/install?ref=typesense/firestore-typesense-search\n\n##### Firebase CLI\n\n```bash\nfirebase ext:install typesense/firestore-typesense-search --project=[your-project-id]\n```\n\nLearn more about installing extensions in the Firebase Extensions documentation:\n\n- [Console](https://firebase.google.com/docs/extensions/install-extensions?platform=console)\n- [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n\n##### Syncing Multiple Firestore collections\n\nYou can install this extension multiple times in your Firebase project by clicking on the installation link above multiple times, and use a different Firestore collection path in each installation instance. [Here](https://github.com/typesense/firestore-typesense-search/issues/9#issuecomment-885940705) is a screenshot of how this looks.\n\n### Step 3️⃣ : [Optional] Backfill existing data\n\nThis extension only syncs data that was created or changed in Firestore, after it was installed. In order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n- Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n- Create a new document with the ID `backfill` and contents of `{trigger: true}`\n- [Optional] If you have [multiple instances](#syncing-multiple-firestore-collections) of the extension installed to sync multiple collections, you can specify which particular collections are backfilled by setting the contents of the `backfill` document in the previous step to `{trigger: true, firestore_collections: [\"path/to/firestore_collection_1\", \"path/to/firestore_collection_2\"] }`\n\nThis will trigger the backfill background Cloud function, which will read data from your Firestore collection(s) and create equivalent documents in your Typesense collection.\n\n## 🧾 Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing).\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n\n\n## 🎛️ Configuration Parameters\n\nWhen you install this extension, you'll be able to configure the following parameters:\n\n| Parameter | Description |\n|-----------|-------------|\n| Firestore Collection Path | The Firestore collection that needs to be indexed into Typesense. |\n| Firestore Collection Fields | A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields. |\n| Typesense Hosts | A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames. | \n| Typesense API Key | An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud. |\n| Typesense Collection Name | Typesense collection name to index data into. |\n| Cloud Functions location | Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations). |\n\n\n\n## ☁️ Cloud Functions\n\n* **indexToTypesenseOnFirestoreWrite:** A function that indexes data into Typesense when it's triggered by Firestore changes.\n\n* **backfillToTypesenseFromFirestore:** A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.\n\n\n## 🔑 Access Required\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Required to backfill data from your Firestore collection into Typesense)\n\n## Development Workflow\n\n#### Run Emulator\n\n```shell\nnpm run emulator\nnpm run typesenseServer\n```\n\n- Emulator UI will be accessible at http://localhost:4000.\n- Local Typesense server will be accessible at http://localhost:8108\n\nAdd records in the Firestore UI and they should be created in Typesense.\n\n#### Run Integration Tests\n\n```shell\nnpm run test\n```\n\n#### Generate README\n\nThe Firebase CLI provides the following convenience command to auto-generate a README file containing content\npulled from extension.yaml file and PREINSTALL.md file:\n\n```shell\nfirebase ext:info ./ --markdown > README.md\n```\n\n#### Publish Extension\n\n- Update version number in extension.yaml\n- Add entry to CHANGELOG.md\n- \n    ```shell\n    firebase ext:dev:publish typesense/firestore-typesense-search\n    ```\n- Create release in Github\n\n## ℹ️ Support\n\nPlease open a Github issue or join our [Slack community](https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg).\n","externalServices":[{"name":"Typesense Cloud","pricingUri":"https://cloud.typesense.org/pricing"},{"name":"Typesense Self Hosted (Free)","pricingUri":"https://typesense.org/downloads"}],"displayName":"Search Firestore with Typesense"},"state":"PUBLISHED","hash":"1cb59dd064078252bbb6627bdfd82fba7bba7a8ed39e3a29cf9c415205bb6e72","createTime":"2022-07-06T23:55:11.437854Z","releaseNotes":"- Sync ref.path to Typesense\n- Ability to backfill specific collections to Typesense, when multiple instances of the extension are installed.\n"},{"name":"publishers/typesense/extensions/firestore-typesense-search/versions/0.4.1","ref":"typesense/firestore-typesense-search@0.4.1","spec":{"specVersion":"v1beta","name":"firestore-typesense-search","version":"0.4.1","description":"Indexes data from Firestore into Typesense for full-text search","roles":[{"role":"datastore.user","reason":"Required to backfill data from your Firestore collection into Typesense"}],"resources":[{"name":"indexToTypesenseOnFirestoreWrite","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:FIRESTORE_COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 120s\n","description":"A function that indexes data into Typesense when it's triggered by Firestore changes","deletionPolicy":"DELETE"},{"name":"backfillToTypesenseFromFirestore","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 2048\neventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/typesense_sync/backfill\nlocation: ${LOCATION}\nmaxInstances: 1\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 540s\n","description":"A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Typesense","url":"https://typesense.org"},"license":"Apache-2.0","releaseNotesUrl":"https://github.com/typesense/firestore-typesense-search/releases","sourceUrl":"https://github.com/typesense/firebase-typesense-search-extension/tree/master","params":[{"param":"FIRESTORE_COLLECTION_PATH","label":"Firestore Collection Path","type":"STRING","description":"The Firestore collection that needs to be indexed into Typesense.","required":true,"default":"path/to/firestore_collection","example":"path/to/firestore_collection","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/firestore_collection\".","immutable":true},{"param":"FIRESTORE_COLLECTION_FIELDS","label":"Firestore Collection Fields","type":"STRING","description":"A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.","example":"field1,field2,field3"},{"param":"TYPESENSE_HOSTS","label":"Typesense Hosts","type":"STRING","description":"A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames.","required":true,"example":"xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net"},{"param":"TYPESENSE_API_KEY","label":"Typesense API Key","type":"SECRET","description":"An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud","required":true},{"param":"TYPESENSE_COLLECTION_NAME","label":"Typesense Collection Name","type":"STRING","description":"Typesense collection name to index data into","required":true,"default":"companies"},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true}],"preinstallContent":"Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or a Self-Hosted server).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n#### Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n","postinstallContent":"### Post-installation Notes\n\nNow that you've installed the extension, changes from `${param:FIRESTORE_COLLECTION_PATH}`\nin your Firestore Database will be synced to the Typesense Collection `${param:TYPESENSE_COLLECTION_NAME}`\non `${param:TYPESENSE_HOSTS}`.\n\n### Pre-requisites\n\nAs a reminder in case you haven't already done this, make sure that you have setup a Typesense Collection in one of the following ways:\n\n- Through the Typesense Cloud Dashboard or\n- Through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension expects a Typesense Cloud collection to already be created and does not create it for you.\n\n### Backfilling Data\n\nThis extension only syncs data that was created or changed after it was installed.\nIn order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n1. Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n2. Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n### See the Extension in Action\n\nTry adding or updating a Firestore document in `${param:FIRESTORE_COLLECTION_PATH}` through the Firestore UI.\nYou should see the change reflected in your Typesense collection.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Firestore / Firebase Typesense Search Extension ⚡ 🔍 \n\n[![CircleCI](https://circleci.com/gh/typesense/firestore-typesense-search.svg?style=shield)](https://circleci.com/gh/typesense/firestore-typesense-search)\n\nA Firebase extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), \nto be able to do full-text fuzzy search on your Firestore data, with typo tolerance, faceting, filtering, sorting, curation, synonyms, geosearch and more.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n**What is Typesense?**\n\nIf you're new to [Typesense](https://typesense.org), it is an open source search engine that is simple to use, run and scale, with clean APIs and documentation. Think of it as an open source alternative to Algolia and an easier-to-use, batteries-included alternative to ElasticSearch. Get a quick overview from [this guide](https://typesense.org/docs/guide).\n\n\n## ⚙️ Usage\n\n### Step 1️⃣ : Setup Prerequisites\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Set up](https://typesense.org/docs/guide/install-typesense.html) a Typesense cluster on [Typesense Cloud](https://cloud.typesense.org) or [Self-Hosted](https://typesense.org/docs/guide/install-typesense.html#option-2-local-machine-self-hosting) (free).\n3. Set up a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/latest/api/collections.html#create-a-collection).\n  \n⚠️ ☝️ #3 above is a commonly missed step. This extension **does not create the Typesense Collection for you**. Instead it syncs data to a Typesense collection you've already created. If you see an HTTP 404 in the extension logs, it's most likely because of missing this step. \n\n### Step 2️⃣ : Install the Extension \n\nYou can install this extension either through the Firebase Web console or through the Firebase CLI.\n\n##### Firebase Console\n\n[![Install this extension in your Firebase project](https://www.gstatic.com/mobilesdk/210513_mobilesdk/install-extension.png \"Install this extension in your Firebase project\")][install-link]\n\n[install-link]: https://console.firebase.google.com/project/_/extensions/install?ref=typesense/firestore-typesense-search\n\n##### Firebase CLI\n\n```bash\nfirebase ext:install typesense/firestore-typesense-search --project=[your-project-id]\n```\n\nLearn more about installing extensions in the Firebase Extensions documentation:\n\n- [Console](https://firebase.google.com/docs/extensions/install-extensions?platform=console)\n- [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n\n##### Syncing Multiple Firestore collections\n\nYou can install this extension multiple times in your Firebase project by clicking on the installation link above multiple times, and use a different Firestore collection path in each installation instance. [Here](https://github.com/typesense/firestore-typesense-search/issues/9#issuecomment-885940705) is a screenshot of how this looks.\n\n### Step 3️⃣ : [Optional] Backfill existing data\n\nThis extension only syncs data that was created or changed in Firestore, after it was installed. In order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n- Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n- Create a new document with the ID `backfill` and contents of `{trigger: true}`\n- [Optional] If you have [multiple instances](#syncing-multiple-firestore-collections) of the extension installed to sync multiple collections, you can specify which particular collections are backfilled by setting the contents of the `backfill` document in the previous step to `{trigger: true, firestore_collections: [\"path/to/firestore_collection_1\", \"path/to/firestore_collection_2\"] }`\n\nThis will trigger the backfill background Cloud function, which will read data from your Firestore collection(s) and create equivalent documents in your Typesense collection.\n\n## 🧾 Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing).\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n\n\n## 🎛️ Configuration Parameters\n\nWhen you install this extension, you'll be able to configure the following parameters:\n\n| Parameter | Description |\n|-----------|-------------|\n| Firestore Collection Path | The Firestore collection that needs to be indexed into Typesense. |\n| Firestore Collection Fields | A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields. |\n| Typesense Hosts | A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames. | \n| Typesense API Key | An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud. |\n| Typesense Collection Name | Typesense collection name to index data into. |\n| Cloud Functions location | Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations). |\n\n\n\n## ☁️ Cloud Functions\n\n* **indexToTypesenseOnFirestoreWrite:** A function that indexes data into Typesense when it's triggered by Firestore changes.\n\n* **backfillToTypesenseFromFirestore:** A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.\n\n\n## 🔑 Access Required\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Required to backfill data from your Firestore collection into Typesense)\n\n## Development Workflow\n\n#### Run Emulator\n\n```shell\nnpm run emulator\nnpm run typesenseServer\n```\n\n- Emulator UI will be accessible at http://localhost:4000.\n- Local Typesense server will be accessible at http://localhost:8108\n\nAdd records in the Firestore UI and they should be created in Typesense.\n\n#### Run Integration Tests\n\n```shell\nnpm run test\n```\n\n#### Generate README\n\nThe Firebase CLI provides the following convenience command to auto-generate a README file containing content\npulled from extension.yaml file and PREINSTALL.md file:\n\n```shell\nfirebase ext:info ./ --markdown > README.md\n```\n\n#### Publish Extension\n\n- Update version number in extension.yaml\n- Add entry to CHANGELOG.md\n- \n    ```shell\n    firebase ext:dev:publish typesense/firestore-typesense-search\n    ```\n- Create release in Github\n\n## ℹ️ Support\n\nPlease open a Github issue or join our [Slack community](https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg).\n","externalServices":[{"name":"Typesense Cloud","pricingUri":"https://cloud.typesense.org/pricing"},{"name":"Typesense Self Hosted (Free)","pricingUri":"https://typesense.org/downloads"}],"displayName":"Search Firestore with Typesense"},"state":"PUBLISHED","hash":"ff8eef9efd38bc06fa467d6d19c3a95d37d7835b35a2aad99b5a461e1a9bc4f7","createTime":"2022-09-12T19:28:53.092455Z","releaseNotes":"- Use `for...of` instead of `forEach` in backfill function. #37\n"}]}
[debug] [2022-09-29T10:29:15.196Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/publishers/typesense/extensions/firestore-typesense-search/versions/0.4.1 [none]
[debug] [2022-09-29T10:29:17.080Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/publishers/typesense/extensions/firestore-typesense-search/versions/0.4.1 200
[debug] [2022-09-29T10:29:17.080Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/publishers/typesense/extensions/firestore-typesense-search/versions/0.4.1 {"name":"publishers/typesense/extensions/firestore-typesense-search/versions/0.4.1","ref":"typesense/firestore-typesense-search@0.4.1","spec":{"specVersion":"v1beta","name":"firestore-typesense-search","version":"0.4.1","description":"Indexes data from Firestore into Typesense for full-text search","roles":[{"role":"datastore.user","reason":"Required to backfill data from your Firestore collection into Typesense"}],"resources":[{"name":"indexToTypesenseOnFirestoreWrite","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:FIRESTORE_COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 120s\n","description":"A function that indexes data into Typesense when it's triggered by Firestore changes","deletionPolicy":"DELETE"},{"name":"backfillToTypesenseFromFirestore","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 2048\neventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/typesense_sync/backfill\nlocation: ${LOCATION}\nmaxInstances: 1\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 540s\n","description":"A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Typesense","url":"https://typesense.org"},"license":"Apache-2.0","releaseNotesUrl":"https://github.com/typesense/firestore-typesense-search/releases","sourceUrl":"https://github.com/typesense/firebase-typesense-search-extension/tree/master","params":[{"param":"FIRESTORE_COLLECTION_PATH","label":"Firestore Collection Path","type":"STRING","description":"The Firestore collection that needs to be indexed into Typesense.","required":true,"default":"path/to/firestore_collection","example":"path/to/firestore_collection","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/firestore_collection\".","immutable":true},{"param":"FIRESTORE_COLLECTION_FIELDS","label":"Firestore Collection Fields","type":"STRING","description":"A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.","example":"field1,field2,field3"},{"param":"TYPESENSE_HOSTS","label":"Typesense Hosts","type":"STRING","description":"A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames.","required":true,"example":"xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net"},{"param":"TYPESENSE_API_KEY","label":"Typesense API Key","type":"SECRET","description":"An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud","required":true},{"param":"TYPESENSE_COLLECTION_NAME","label":"Typesense Collection Name","type":"STRING","description":"Typesense collection name to index data into","required":true,"default":"companies"},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true}],"preinstallContent":"Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or a Self-Hosted server).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n#### Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n","postinstallContent":"### Post-installation Notes\n\nNow that you've installed the extension, changes from `${param:FIRESTORE_COLLECTION_PATH}`\nin your Firestore Database will be synced to the Typesense Collection `${param:TYPESENSE_COLLECTION_NAME}`\non `${param:TYPESENSE_HOSTS}`.\n\n### Pre-requisites\n\nAs a reminder in case you haven't already done this, make sure that you have setup a Typesense Collection in one of the following ways:\n\n- Through the Typesense Cloud Dashboard or\n- Through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension expects a Typesense Cloud collection to already be created and does not create it for you.\n\n### Backfilling Data\n\nThis extension only syncs data that was created or changed after it was installed.\nIn order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n1. Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n2. Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n### See the Extension in Action\n\nTry adding or updating a Firestore document in `${param:FIRESTORE_COLLECTION_PATH}` through the Firestore UI.\nYou should see the change reflected in your Typesense collection.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Firestore / Firebase Typesense Search Extension ⚡ 🔍 \n\n[![CircleCI](https://circleci.com/gh/typesense/firestore-typesense-search.svg?style=shield)](https://circleci.com/gh/typesense/firestore-typesense-search)\n\nA Firebase extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), \nto be able to do full-text fuzzy search on your Firestore data, with typo tolerance, faceting, filtering, sorting, curation, synonyms, geosearch and more.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n**What is Typesense?**\n\nIf you're new to [Typesense](https://typesense.org), it is an open source search engine that is simple to use, run and scale, with clean APIs and documentation. Think of it as an open source alternative to Algolia and an easier-to-use, batteries-included alternative to ElasticSearch. Get a quick overview from [this guide](https://typesense.org/docs/guide).\n\n\n## ⚙️ Usage\n\n### Step 1️⃣ : Setup Prerequisites\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Set up](https://typesense.org/docs/guide/install-typesense.html) a Typesense cluster on [Typesense Cloud](https://cloud.typesense.org) or [Self-Hosted](https://typesense.org/docs/guide/install-typesense.html#option-2-local-machine-self-hosting) (free).\n3. Set up a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/latest/api/collections.html#create-a-collection).\n  \n⚠️ ☝️ #3 above is a commonly missed step. This extension **does not create the Typesense Collection for you**. Instead it syncs data to a Typesense collection you've already created. If you see an HTTP 404 in the extension logs, it's most likely because of missing this step. \n\n### Step 2️⃣ : Install the Extension \n\nYou can install this extension either through the Firebase Web console or through the Firebase CLI.\n\n##### Firebase Console\n\n[![Install this extension in your Firebase project](https://www.gstatic.com/mobilesdk/210513_mobilesdk/install-extension.png \"Install this extension in your Firebase project\")][install-link]\n\n[install-link]: https://console.firebase.google.com/project/_/extensions/install?ref=typesense/firestore-typesense-search\n\n##### Firebase CLI\n\n```bash\nfirebase ext:install typesense/firestore-typesense-search --project=[your-project-id]\n```\n\nLearn more about installing extensions in the Firebase Extensions documentation:\n\n- [Console](https://firebase.google.com/docs/extensions/install-extensions?platform=console)\n- [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n\n##### Syncing Multiple Firestore collections\n\nYou can install this extension multiple times in your Firebase project by clicking on the installation link above multiple times, and use a different Firestore collection path in each installation instance. [Here](https://github.com/typesense/firestore-typesense-search/issues/9#issuecomment-885940705) is a screenshot of how this looks.\n\n### Step 3️⃣ : [Optional] Backfill existing data\n\nThis extension only syncs data that was created or changed in Firestore, after it was installed. In order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n- Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n- Create a new document with the ID `backfill` and contents of `{trigger: true}`\n- [Optional] If you have [multiple instances](#syncing-multiple-firestore-collections) of the extension installed to sync multiple collections, you can specify which particular collections are backfilled by setting the contents of the `backfill` document in the previous step to `{trigger: true, firestore_collections: [\"path/to/firestore_collection_1\", \"path/to/firestore_collection_2\"] }`\n\nThis will trigger the backfill background Cloud function, which will read data from your Firestore collection(s) and create equivalent documents in your Typesense collection.\n\n## 🧾 Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing).\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n\n\n## 🎛️ Configuration Parameters\n\nWhen you install this extension, you'll be able to configure the following parameters:\n\n| Parameter | Description |\n|-----------|-------------|\n| Firestore Collection Path | The Firestore collection that needs to be indexed into Typesense. |\n| Firestore Collection Fields | A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields. |\n| Typesense Hosts | A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames. | \n| Typesense API Key | An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud. |\n| Typesense Collection Name | Typesense collection name to index data into. |\n| Cloud Functions location | Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations). |\n\n\n\n## ☁️ Cloud Functions\n\n* **indexToTypesenseOnFirestoreWrite:** A function that indexes data into Typesense when it's triggered by Firestore changes.\n\n* **backfillToTypesenseFromFirestore:** A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.\n\n\n## 🔑 Access Required\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Required to backfill data from your Firestore collection into Typesense)\n\n## Development Workflow\n\n#### Run Emulator\n\n```shell\nnpm run emulator\nnpm run typesenseServer\n```\n\n- Emulator UI will be accessible at http://localhost:4000.\n- Local Typesense server will be accessible at http://localhost:8108\n\nAdd records in the Firestore UI and they should be created in Typesense.\n\n#### Run Integration Tests\n\n```shell\nnpm run test\n```\n\n#### Generate README\n\nThe Firebase CLI provides the following convenience command to auto-generate a README file containing content\npulled from extension.yaml file and PREINSTALL.md file:\n\n```shell\nfirebase ext:info ./ --markdown > README.md\n```\n\n#### Publish Extension\n\n- Update version number in extension.yaml\n- Add entry to CHANGELOG.md\n- \n    ```shell\n    firebase ext:dev:publish typesense/firestore-typesense-search\n    ```\n- Create release in Github\n\n## ℹ️ Support\n\nPlease open a Github issue or join our [Slack community](https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg).\n","externalServices":[{"name":"Typesense Cloud","pricingUri":"https://cloud.typesense.org/pricing"},{"name":"Typesense Self Hosted (Free)","pricingUri":"https://typesense.org/downloads"}],"displayName":"Search Firestore with Typesense"},"state":"PUBLISHED","hash":"ff8eef9efd38bc06fa467d6d19c3a95d37d7835b35a2aad99b5a461e1a9bc4f7","createTime":"2022-09-12T19:28:53.092455Z","sourceDownloadUri":"https://storage.googleapis.com/firebase-mod-sources-prod/ff8eef9efd38bc06fa467d6d19c3a95d37d7835b35a2aad99b5a461e1a9bc4f7","releaseNotes":"- Use `for...of` instead of `forEach` in backfill function. #37\n"}
[debug] [2022-09-29T10:29:17.088Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/publishers/typesense/extensions/firestore-typesense-search [none]
[debug] [2022-09-29T10:29:18.927Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/publishers/typesense/extensions/firestore-typesense-search 200
[debug] [2022-09-29T10:29:18.928Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/publishers/typesense/extensions/firestore-typesense-search {"name":"publishers/typesense/extensions/firestore-typesense-search","ref":"typesense/firestore-typesense-search","latestVersion":"0.4.1","latestVersionCreateTime":"2022-09-12T19:28:53.092455Z","state":"PUBLISHED","createTime":"2021-06-12T19:07:14.537434Z","visibility":"PUBLIC","registryLaunchStage":"BETA","iconUri":"https://www.gstatic.com/mobilesdk/211005_mobilesdk/typesense-search-with-typesense.svg","publisher":{"displayName":"Typesense","iconUri":"https://www.gstatic.com/mobilesdk/211005_mobilesdk/typesense-logo.svg"}}
[debug] [2022-09-29T10:29:18.929Z] >>> [apiv2][query] GET https://iam.googleapis.com/v1/roles/datastore.user [none]
[debug] [2022-09-29T10:29:21.445Z] <<< [apiv2][status] GET https://iam.googleapis.com/v1/roles/datastore.user 200
[debug] [2022-09-29T10:29:21.445Z] <<< [apiv2][body] GET https://iam.googleapis.com/v1/roles/datastore.user {"name":"roles/datastore.user","title":"Cloud Datastore User","description":"Provides read/write access to data in a Cloud Datastore database. Intended for application developers and service accounts.","includedPermissions":["appengine.applications.get","datastore.databases.get","datastore.databases.getMetadata","datastore.entities.allocateIds","datastore.entities.create","datastore.entities.delete","datastore.entities.get","datastore.entities.list","datastore.entities.update","datastore.indexes.list","datastore.namespaces.get","datastore.namespaces.list","datastore.statistics.get","datastore.statistics.list","resourcemanager.projects.get","resourcemanager.projects.list"],"stage":"GA","etag":"AA=="}
[info] i  extensions: information about 'typesense/firestore-typesense-search@0.4.1': 
[info] Name: Search Firestore with Typesense
Publisher: typesense
Description: Indexes data from Firestore into Typesense for full-text search
License: Apache-2.0
Source code: https://github.com/typesense/firebase-typesense-search-extension/tree/master
Roles granted to this Extension:
  Cloud Datastore User (Provides read/write access to data in a Cloud Datastore database. Intended for application developers and service accounts.)

[debug] [2022-09-29T10:29:21.484Z] >>> [apiv2][query] GET https://extensions-registry.firebaseapp.com/extensions.json [none]
[debug] [2022-09-29T10:29:21.744Z] <<< [apiv2][status] GET https://extensions-registry.firebaseapp.com/extensions.json 200
[debug] [2022-09-29T10:29:21.745Z] <<< [apiv2][body] GET https://extensions-registry.firebaseapp.com/extensions.json {"mods":{"auth-mailchimp-sync":{"publisher":"firebase"},"delete-user-data":{"publisher":"firebase"},"firestore-algolia-search":{"publisher":"algolia"},"firestore-auth-claims":{"publisher":"firebase"},"firestore-bigquery-export":{"publisher":"firebase"},"firestore-bundle-server":{"publisher":"firebase"},"firestore-counter":{"publisher":"firebase"},"firestore-detect-presence":{"publisher":"firebase"},"firestore-messagebird-send-msg":{"publisher":"messagebird"},"firestore-perspective-toxicity":{"publisher":"jigsaw"},"firestore-schedule-writes":{"publisher":"firebase"},"firestore-send-email":{"publisher":"firebase"},"firestore-sentiment-analysis":{"publisher":"firebase"},"firestore-shorten-urls-bitly":{"publisher":"firebase"},"firestore-shorten-urls-dynamic-links":{"publisher":"firebase"},"firestore-stripe-invoices":{"publisher":"stripe"},"firestore-stripe-subscriptions":{"publisher":"stripe"},"firestore-translate-text":{"publisher":"firebase"},"mailchimp-firebase-sync":{"publisher":"mailchimp"},"pubsub-stream-bigquery":{"publisher":"firebase"},"rtdb-limit-child-nodes":{"publisher":"firebase"},"storage-extract-image-text":{"publisher":"firebase"},"storage-image-labeling":{"publisher":"firebase"},"storage-mirror-firestore":{"publisher":"firebase"},"storage-resize-images":{"publisher":"firebase"},"firestore-elastic-app-search":{"publisher":"elastic"},"track-labels":{"publisher":"shipengine"},"calculate-rates":{"publisher":"shipengine"},"purchase-labels":{"publisher":"shipengine"},"validate-addresses":{"publisher":"shipengine"},"abandoned-cart-emails":{"publisher":"twilio"},"send-message":{"publisher":"twilio"},"sendgrid-sync-contacts":{"publisher":"twilio"},"make-payment":{"publisher":"google-pay"},"firestore-stripe-payments":{"publisher":"stripe"},"firestore-typesense-search":{"publisher":"typesense"},"auth-activity-feeds":{"publisher":"stream"},"auth-chat":{"publisher":"stream"},"firestore-activity-feeds":{"publisher":"stream"},"snapchat-login":{"publisher":"snap"},"snapchat-sticker-generator":{"publisher":"snap"},"firestore-revenuecat-purchases":{"publisher":"revenuecat"}},"featured":{"discover":["firestore-bigquery-export","firestore-algolia-search","firestore-send-email","firestore-stripe-payments","firestore-typesense-search","auth-chat","snapchat-login","storage-resize-images","firestore-revenuecat-purchases","delete-user-data","send-message","mailchimp-firebase-sync","auth-activity-feeds","snapchat-sticker-generator","firestore-elastic-app-search","firestore-activity-feeds","make-payment","firestore-perspective-toxicity","track-labels","validate-addresses","sendgrid-sync-contacts","firestore-translate-text","firestore-messagebird-send-msg","firestore-counter","firestore-stripe-invoices","firestore-shorten-urls-bitly","rtdb-limit-child-nodes","abandoned-cart-emails","calculate-rates","purchase-labels"],"closed-alpha":[]}}
[debug] [2022-09-29T10:29:30.764Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/myuniwork-b6880/adminSdkConfig [none]
[debug] [2022-09-29T10:29:31.491Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/myuniwork-b6880/adminSdkConfig 200
[debug] [2022-09-29T10:29:31.491Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/myuniwork-b6880/adminSdkConfig {"projectId":"myuniwork-b6880","storageBucket":"myuniwork-b6880.appspot.com","locationId":"us-central"}
[debug] [2022-09-29T10:29:31.492Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/myuniwork-b6880 [none]
[debug] [2022-09-29T10:29:32.174Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/myuniwork-b6880 200
[debug] [2022-09-29T10:29:32.175Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/myuniwork-b6880 {"projectId":"myuniwork-b6880","projectNumber":"77703230322","displayName":"MyUniWork","name":"projects/myuniwork-b6880","resources":{"hostingSite":"myuniwork-b6880","storageBucket":"myuniwork-b6880.appspot.com","locationId":"us-central"},"state":"ACTIVE","etag":"1_6c4a7727-6c34-4b63-8e34-f26df67f4039"}
[info] i  extensions: answer the questions below to configure your extension: 
[info] 
Firestore Collection Path: The Firestore collection that needs to be indexed into Typesense.
[warn] !  Firestore collection paths must be an odd number of segments separated by slashes, e.g. "path/to/firestore_collection". 
[warn] !  Firestore collection paths must be an odd number of segments separated by slashes, e.g. "path/to/firestore_collection". 
[debug] [2022-09-29T10:33:50.975Z] ----------------------------------------------------------------------
[debug] [2022-09-29T10:33:50.978Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\user\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js ext:install typesense/firestore-typesense-search --local --project=myuniwork-b6880
[debug] [2022-09-29T10:33:50.979Z] CLI Version:   11.11.0
[debug] [2022-09-29T10:33:50.980Z] Platform:      win32
[debug] [2022-09-29T10:33:50.980Z] Node Version:  v16.17.0
[debug] [2022-09-29T10:33:50.982Z] Time:          Thu Sep 29 2022 12:33:50 GMT+0200 (South Africa Standard Time)
[debug] [2022-09-29T10:33:50.982Z] ----------------------------------------------------------------------
[debug] 
[debug] [2022-09-29T10:33:51.124Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2022-09-29T10:33:51.125Z] > authorizing via signed-in user (myuniwork22@gmail.com)
[debug] [2022-09-29T10:33:51.126Z] [iam] checking project myuniwork-b6880 for permissions ["firebase.projects.get","firebaseextensions.instances.create"]
[debug] [2022-09-29T10:33:51.130Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/myuniwork-b6880:testIamPermissions [none]
[debug] [2022-09-29T10:33:51.131Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/myuniwork-b6880:testIamPermissions x-goog-quota-user=projects/myuniwork-b6880
[debug] [2022-09-29T10:33:51.131Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/myuniwork-b6880:testIamPermissions {"permissions":["firebase.projects.get","firebaseextensions.instances.create"]}
[debug] [2022-09-29T10:33:53.119Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/myuniwork-b6880:testIamPermissions 200
[debug] [2022-09-29T10:33:53.119Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/myuniwork-b6880:testIamPermissions {"permissions":["firebase.projects.get","firebaseextensions.instances.create"]}
[info] i  extensions: ensuring required API firebaseextensions.googleapis.com is enabled... 
[debug] [2022-09-29T10:33:53.123Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/myuniwork-b6880/services/firebaseextensions.googleapis.com [none]
[debug] [2022-09-29T10:33:53.123Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/myuniwork-b6880/services/firebaseextensions.googleapis.com x-goog-quota-user=projects/myuniwork-b6880
[debug] [2022-09-29T10:33:55.190Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/myuniwork-b6880/services/firebaseextensions.googleapis.com 200
[debug] [2022-09-29T10:33:55.190Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/myuniwork-b6880/services/firebaseextensions.googleapis.com [omitted]
[info] +  extensions: required API firebaseextensions.googleapis.com is enabled 
[debug] [2022-09-29T10:33:55.195Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/myuniwork-b6880 [none]
[debug] [2022-09-29T10:33:56.137Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/myuniwork-b6880 200
[debug] [2022-09-29T10:33:56.137Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/myuniwork-b6880 {"projectId":"myuniwork-b6880","projectNumber":"77703230322","displayName":"MyUniWork","name":"projects/myuniwork-b6880","resources":{"hostingSite":"myuniwork-b6880","storageBucket":"myuniwork-b6880.appspot.com","locationId":"us-central"},"state":"ACTIVE","etag":"1_42202fca-e333-4970-9a96-5befae60eb8a"}
[info] i  extensions: Checking project IAM policy... 
[debug] [2022-09-29T10:33:56.141Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/projects/myuniwork-b6880/instances pageSize=100&pageToken=
[debug] [2022-09-29T10:33:57.981Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/projects/myuniwork-b6880/instances 200
[debug] [2022-09-29T10:33:57.982Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/projects/myuniwork-b6880/instances {"instances":[{"name":"projects/myuniwork-b6880/instances/firestore-algolia-search","createTime":"2022-08-19T17:44:32.866596Z","updateTime":"2022-08-24T18:29:42.680162Z","state":"ACTIVE","config":{"name":"projects/myuniwork-b6880/instances/firestore-algolia-search/configurations/beb95d9d-99aa-4a93-b883-2f4b9f106c42","createTime":"2022-08-24T18:26:18.114395Z","source":{"name":"projects/algolia-b2ebc/sources/6994866c-9d5c-450a-bb72-2370cd58f10e","packageUri":"https://storage.googleapis.com/firebase-ext-eap-uploads/firebase-archive-90617dWM1BptELLwn.zip?alt=media","hash":"d6aefc6700830d397ec5475dc4d33103e7713784c4885739919b1e796bf3ac32","extensionRoot":"/","spec":{"specVersion":"v1beta","name":"firestore-algolia-search","version":"0.5.13","description":"Enables full text search of your Cloud Firestore data with Algolia.","roles":[{"role":"datastore.user","reason":"Allows this extension to access Cloud Firestore to read."}],"resources":[{"name":"executeIndexOperation","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${PROJECT_ID}/databases/(default)/documents/${COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs10\n","description":"Firestore document-triggered function that creates, updates, or deletes data in Algolia.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Algolia","url":"https://algolia.com"},"contributors":[{"authorName":"Sajid Momin","email":"sajid.momin@algolia.com","url":"https://github.com/smomin"}],"license":"Apache-2.0","sourceUrl":"https://github.com/algolia/firestore-algolia-search/tree/main","params":[{"param":"COLLECTION_PATH","label":"Collection Path","type":"STRING","description":"What is the path to the Cloud Firestore collection where the extension should monitor for changes?\n","required":true,"example":"store","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/collection\".","immutable":true},{"param":"FIELDS","label":"Indexable Fields","type":"STRING","description":"This can be a comma separated list or left blank to index all fields. For performance reasons, [record size is limited](https://www.algolia.com/doc/guides/sending-and-managing-data/prepare-your-data/in-depth/index-and-records-size-and-usage-limitations/#record-size-limits). If you're receiving errors that your records are too large, refer to the [reducing record size documentation](https://www.algolia.com/doc/guides/sending-and-managing-data/prepare-your-data/how-to/reducing-object-size/).\n","example":"name,category,price,sales"},{"param":"FORCE_DATA_SYNC","label":"Force Data Sync","type":"SELECT","description":"The extension uses approaches to mitigate race conditions but it might not be a 100% fool proof.  This setting will make sure the function is using the latest data from Firestore by making another read call before processing and sending to Algolia.  note: This will be a add to your usage of Firestore.","options":[{"value":"no","label":"No"},{"value":"yes","label":"Yes"}],"default":"no"},{"param":"ALGOLIA_INDEX_NAME","label":"Algolia Index Name","type":"STRING","description":"This is the name of the [Algolia index](https://www.algolia.com/doc/faq/basics/what-is-an-index/) where the records will be persisted. Refer to [naming your index](https://www.algolia.com/doc/guides/sending-and-managing-data/send-and-update-your-data/#naming-your-index) for more information.","required":true},{"param":"ALGOLIA_APP_ID","label":"Algolia Application Id","type":"STRING","description":"This is the Algolia application you want to index your data to. You can find your credentials including application ID on your Algolia dashboard, under the [API keys tab](https://www.algolia.com/api-keys).","required":true},{"param":"ALGOLIA_API_KEY","label":"Algolia API Key","type":"SECRET","description":"We recommend [creating a new API key](https://www.algolia.com/doc/guides/security/api-keys/#creating-and-managing-api-keys) with \"addObject\", \"deleteObject\", \"listIndexes\", \"deleteIndex\", \"editSettings\", and \"settings\" permissions. **Do not use the Admin API key**.","required":true},{"param":"TRANSFORM_FUNCTION","label":"Transform Function Name (Experimental)","type":"STRING","description":"Specify a Firebase Cloud Function for any data transformation before saving into Algolia. Refer to [Call functions for your app](https://firebase.google.com/docs/functions/callable)."},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"immutable":true}],"preinstallContent":"Use this extension to index your Cloud Firestore data to Algolia and keep it synced.  The extension is applied and configured on a Firestore [collection](https://firebase.google.com/docs/firestore/data-model#collections).\n\nThis extension listens for changes on the specified collection. If you add a [document](https://firebase.google.com/docs/firestore/data-model#documents), the extension indexes it as a [record in Algolia](https://www.algolia.com/doc/faq/basics/what-is-a-record/). The extension only indexes the fields defined in the extension configuration and uses the [document Id](https://firebase.google.com/docs/firestore/manage-data/add-data#add_a_document) as the Algolia [object Id](https://www.algolia.com/doc/guides/sending-and-managing-data/send-and-update-your-data/#using-unique-object-identifiers).\n\nAnytime you update a document, the extension propagates the update to the corresponding Algolia record. If you delete a document, the extension removes the corresponding Algolia record.\n\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've\n[set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart)\nin your Firebase project.\n\nYou must also have an Algolia account set up before installing this\nextension. You can do so on the [Algolia](https://www.algolia.com/) site.\n\n#### Billing\n\nThis extension uses the following Firebase services which may have associated charges:\n\n- Cloud Firestore\n- Cloud Functions\n\nThis extension also uses the following third-party services:\n\n- Algolia ([pricing information](https://www.algolia.com/pricing))\n\nYou are responsible for any costs associated with your use of these services.\n\n#### Note from Firebase\n\nTo install this extension, your Firebase project must be on the Blaze (pay-as-you-go) plan. You will only be charged for the resources you use. Most Firebase services offer a free tier for low-volume use. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\nYou will be billed a small amount (typically less than $0.10) when you install or reconfigure this extension. See Cloud Functions under [Firebase Pricing](https://firebase.google.com/pricing) for a detailed explanation.\n","postinstallContent":"### See it in action\n\nYou can test out this extension right away:\n\n1.  Go to the [Cloud Firestore tab](https://console.firebase.google.com/project/${param:PROJECT_ID}/database/firestore/data).\n\n1.  If it doesn't exist already, create a collection called `${param:COLLECTION_PATH}`.\n\n1.  Create, update, or delete a document in the `${param:COLLECTION_PATH}` collection.  Go to Algolia's dashboard and verify in Algolia that a record is created, updated, or deleted in the `${param:ALGOLIA_INDEX_NAME}` index for application id `${param:ALGOLIA_APP_ID}`.\n\n### Using the extension\n\nThis extension listens to the Cloud Firestore collection `${param:COLLECTION_PATH}`. If you create, update, or delete a document within that collection, this extension will:\n\n- Indexes the document and send all the fields or configured fields defined in the extension.\n- or, removes the record from Algolia index if the document is deleted.\n\n### _(Optional)_ Import existing documents or Reindex after configuration changes\nThis extension starts monitoring the `${param:COLLECTION_PATH}` collection after a successful installation. Any existing documents created before the extension installation can be back-filled into your Algolia `${param:ALGOLIA_INDEX_NAME}` Index using the import script.  Also, you will need to run the import script if you change the Indexable Fields, Index Name, Application Id, and/or API Key configuration.\n\nThe import script will read all existing documents in the `${param:COLLECTION_PATH}` collection and insert them into the Algolia `${param:ALGOLIA_INDEX_NAME}` index.\n\n##### Important notes\n\n- You must run the import script over the entire collection **_after_** installing the Search with Algolia extension; otherwise you will have missing records in your Algolia `${param:ALGOLIA_INDEX_NAME}` index.\n- `lastmodified` attributed is added to all Algolia records to eliminate race condition issues related from the Cloud Function cold start.\n\n#### Run the script\n\nThe script will use the extension configuration before the import process starts.\n\nRun the import process using `npx`.\n\n1.  Make sure that you've installed the required tools to run the import script:\n    - To access the `npx` command tools, you need to install [Node.js](https://www.nodejs.org/).\n    - If you use `npm` v5.1 or earlier, you need to explicitly install `npx`. Run `npm install --global npx`.\n\n1.  The import script uses Application Default Credentials to communicate with Firebase.\n    Please follow the instructions to [generate a key for your service account](https://firebase.google.com/docs/admin/setup#initialize-sdk).\n\n1.  Execute the below command:\n    - Update the path to the Google Application credentials.\n    - Clear out the `FIELDS` or/and `TRANSFORM_FUNCTION` params if it contains `{ unspecified parameter }` in the command below since it's an invalid value.\n      ```\n      npx firestore-algolia-search\n      ```\n      Below are the questions that will be asked:\n      ```\n      What is the Region? ${param:LOCATION}\n      What is the Project Id? ${param:PROJECT_ID}\n      What is the Algolia App Id? ${param:ALGOLIA_APP_ID}\n      What is the Algolia Api Key? ${param:ALGOLIA_API_KEY}\n      What is the Algolia Index Name? ${param:ALGOLIA_INDEX_NAME}\n      What is the Collection Path? ${param:COLLECTION_PATH}\n      What are the Fields to extract? ${param:FIELDS}\n      What is the Transform Function? ${param:TRANSFORM_FUNCTION}\n      What is the path to the Google Application Credential File? </path/to/service/account/key>\n      ```\n      **NOTE**: Make sure that there is no space inbetween the specified `FIELDS`. E.g. `name,category,views` ✅ | `name, category, views` ❌.\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Search with Algolia\n\n**Author**: Algolia (**[https://www.algolia.com](https://www.algolia.com)**)\n\n**Description**: Enable full text search of your Cloud Firestore data with Algolia.\n\n**Details**: Use this extension to index your Cloud Firestore data to [Algolia](https://www.algolia.com/doc/) and keep it synced.\n\nYou can then [configure your relevance](/doc/guides/getting-started/how-algolia-works/in-depth/implementation-process/#configuring-relevance) using the [Algolia dashboard](https://www.algolia.com/dashboard) or [API clients](/doc/api-client/getting-started/install/javascript/). From there, you can use Algolia's [front-end libraries](/doc/guides/building-search-ui/what-is-instantsearch/js/) to incorporate search components into your Firebase app's UI.\n\n---\n\nWe welcome [bug reports and feature requests](https://github.com/algolia/firestore-algolia-search/issues/new) as well as pull requests in this GitHub repository.\n\n### Firebase CLI\n\n```bash\nfirebase ext:install algolia/firestore-algolia-search --project=<your-project-id>\n```\n\n> Learn more about installing extensions in the Firebase Extensions documentation: [console](https://firebase.google.com/docs/extensions/install-extensions?platform=console), [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n\n---\n\n#### Details\n\nUse this extension to index your Cloud Firestore data to Algolia and keep it synced.  The extension is applied and configured on a Firestore [collection](https://firebase.google.com/docs/firestore/data-model#collections) or [subcollection](https://firebase.google.com/docs/firestore/data-model#subcollections).\n\nThis extension listens for changes on the specified collection. If you add a [document](https://firebase.google.com/docs/firestore/data-model#documents), the extension indexes it as a [record in Algolia](https://www.algolia.com/doc/faq/basics/what-is-a-record/). The extension only indexes the fields defined in the extension configuration and uses the [document Id](https://firebase.google.com/docs/firestore/manage-data/add-data#add_a_document) as the Algolia [object Id](https://www.algolia.com/doc/guides/sending-and-managing-data/send-and-update-your-data/#using-unique-object-identifiers).\n\nAnytime you update a document, the extension propagates the update to the corresponding Algolia record. If you delete a document, the extension removes the corresponding Algolia record.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you've set up:\n- [Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n- [Algolia](https://www.algolia.com/) account.\n\n\n#### Billing\n\nThis extension uses the following Firebase services which may have associated charges:\n\n- Cloud Firestore\n- Cloud Functions\n\nThis extension also uses the following third-party services:\n\n- Algolia ([pricing information](https://www.algolia.com/pricing))\n\nYou are responsible for any costs associated with your use of these services.\n\n#### Note from Firebase\n\nTo install this extension, your Firebase project must be on the Blaze (pay-as-you-go) plan. You will only be charged for the resources you use. Most Firebase services offer a free tier for low-volume use. [Learn more about Firebase billing.](https://firebase.google.com/pricing)\n\nYou will be billed a small amount (typically less than $0.10) when you install or reconfigure this extension. See Cloud Functions under [Firebase Pricing](https://firebase.google.com/pricing) for a detailed explanation.\n\n#### Configuration Parameters\n\nCloud Functions Location: Where do you want to deploy the functions created for this extension?\n  You usually want a location close to your database.\n  For help selecting a location, refer to the\n  [location selection guide](https://firebase.google.com/docs/functions/locations).\n\n- Collection Path: What is the path to the Cloud Firestore collection where the extension should monitor for changes?\n  For subcollection, the syntax is `parent_collection/{parentId}/target_collection`. (please note, there is not depublication process on subcollections).\n\n- Fields: What document fields should be indexed to provide the best search experience? For more information on which fields to index to Algolia, see the [Algolia documentation on records](https://www.algolia.com/doc/guides/sending-and-managing-data/prepare-your-data/#algolia-records).\n  This can be a comma separated list or left blank to index all fields.\n  For performance reasons, [record size is limited](https://www.algolia.com/doc/guides/sending-and-managing-data/prepare-your-data/in-depth/index-and-records-size-and-usage-limitations/#record-size-limits).\n  If you're receiving errors that your records are too large, refer to the [reducing record size documentation](https://www.algolia.com/doc/guides/sending-and-managing-data/prepare-your-data/how-to/reducing-object-size/).\n\n- Force Data Sync: Are you facing data inconsistent issues possibly due to race conditions?\n  This setting will make sure the function is using the latest data from Firestore by making another read call before processing and sending to Algolia.\n\n- Algolia Application ID: What is the Algolia Application Id?\n  This is the Algolia application you want to index your data to.\n  You can find your credentials including application ID on your Algolia dashboard,\n  under the [API keys tab](https://www.algolia.com/api-keys).\n\n- Algolia API Key: What is your Algolia API key?\n  We recommend [creating a new API key](https://www.algolia.com/doc/guides/security/api-keys/#creating-and-managing-api-keys)\n  with \"addObject\", \"deleteObject\", \"listIndexes\", \"deleteIndex\", \"editSettings\", and \"settings\" permissions.\n  **Do not use the Admin API key**.\n\n- Algolia Index Name: What is the Algolia index name?\n  This is the name of the [Algolia index](https://www.algolia.com/doc/faq/basics/what-is-an-index/)\n  where the records will be persisted.\n  Refer to [naming your index](https://www.algolia.com/doc/guides/sending-and-managing-data/send-and-update-your-data/#naming-your-index) for more information.\n\n- Transform Function Name (experimental): What is the Firebase Cloud Function Name?\n  This is the name of the Firestore Cloud Function for transforming the data before transmitting to Algolia for indexing.\n  This function should be deployed to the same Firebase Project and Location as the Firestore/Algolia extension.\n  Refer to [Call functions for your app](https://firebase.google.com/docs/functions/callable).\n  Below is an example of a Transform function used for my testing:\n  ```javascript\n    import * as functions from \"firebase-functions\";\n\n    const doStuffToData = (payload: any) => {\n      return {\n      ...payload,\n      \"hello\": \"world\",\n      };\n    };\n\n    export const helloWorld = functions.https.onCall((payload) => {\n      const transformedData = doStuffToData(payload);\n      return transformedData;\n    });\n  ```\n  **Note**: The Transform Firebase Function should be set up to unauthenticated users at this time.\n\n#### Cloud Functions\n\n- **executeIndexOperation:** Firestore document-triggered function that creates, updates, or deletes data in Algolia.\n","externalServices":[{"name":"Algolia","pricingUri":"https://algolia.com/pricing"}],"displayName":"Search with Algolia"},"fetchTime":"2022-06-20T04:34:46.159260Z","lastOperationName":"projects/algolia-b2ebc/operations/414405a4-fe9c-4651-ac13-54aef50b8d1c","state":"ACTIVE"},"params":{"FIELDS":"moduleName, moduleCode, description, lecturer, semester,prerequisites,credits,compulsory,","FORCE_DATA_SYNC":"no","ALGOLIA_INDEX_NAME":"modules","ALGOLIA_APP_ID":"F1IS3BSDLF","ALGOLIA_API_KEY":"projects/77703230322/secrets/firestore-algolia-search-ALGOLIA_API_KEY-nqx5/versions/1","LOCATION":"us-central1","COLLECTION_PATH":"modules"},"populatedPostinstallContent":"### See it in action\n\nYou can test out this extension right away:\n\n1.  Go to the [Cloud Firestore tab](https://console.firebase.google.com/project/myuniwork-b6880/database/firestore/data).\n\n1.  If it doesn't exist already, create a collection called `modules`.\n\n1.  Create, update, or delete a document in the `modules` collection.  Go to Algolia's dashboard and verify in Algolia that a record is created, updated, or deleted in the `modules` index for application id `F1IS3BSDLF`.\n\n### Using the extension\n\nThis extension listens to the Cloud Firestore collection `modules`. If you create, update, or delete a document within that collection, this extension will:\n\n- Indexes the document and send all the fields or configured fields defined in the extension.\n- or, removes the record from Algolia index if the document is deleted.\n\n### _(Optional)_ Import existing documents or Reindex after configuration changes\nThis extension starts monitoring the `modules` collection after a successful installation. Any existing documents created before the extension installation can be back-filled into your Algolia `modules` Index using the import script.  Also, you will need to run the import script if you change the Indexable Fields, Index Name, Application Id, and/or API Key configuration.\n\nThe import script will read all existing documents in the `modules` collection and insert them into the Algolia `modules` index.\n\n##### Important notes\n\n- You must run the import script over the entire collection **_after_** installing the Search with Algolia extension; otherwise you will have missing records in your Algolia `modules` index.\n- `lastmodified` attributed is added to all Algolia records to eliminate race condition issues related from the Cloud Function cold start.\n\n#### Run the script\n\nThe script will use the extension configuration before the import process starts.\n\nRun the import process using `npx`.\n\n1.  Make sure that you've installed the required tools to run the import script:\n    - To access the `npx` command tools, you need to install [Node.js](https://www.nodejs.org/).\n    - If you use `npm` v5.1 or earlier, you need to explicitly install `npx`. Run `npm install --global npx`.\n\n1.  The import script uses Application Default Credentials to communicate with Firebase.\n    Please follow the instructions to [generate a key for your service account](https://firebase.google.com/docs/admin/setup#initialize-sdk).\n\n1.  Execute the below command:\n    - Update the path to the Google Application credentials.\n    - Clear out the `FIELDS` or/and `TRANSFORM_FUNCTION` params if it contains `{ unspecified parameter }` in the command below since it's an invalid value.\n      ```\n      npx firestore-algolia-search\n      ```\n      Below are the questions that will be asked:\n      ```\n      What is the Region? us-central1\n      What is the Project Id? myuniwork-b6880\n      What is the Algolia App Id? F1IS3BSDLF\n      What is the Algolia Api Key? { unspecified parameter }\n      What is the Algolia Index Name? modules\n      What is the Collection Path? modules\n      What are the Fields to extract? moduleName, moduleCode, description, lecturer, semester,prerequisites,credits,compulsory,\n      What is the Transform Function? { unspecified parameter }\n      What is the path to the Google Application Credential File? </path/to/service/account/key>\n      ```\n      **NOTE**: Make sure that there is no space inbetween the specified `FIELDS`. E.g. `name,category,views` ✅ | `name, category, views` ❌.\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","extensionRef":"algolia/firestore-algolia-search","extensionVersion":"0.5.13"},"lastOperationName":"projects/myuniwork-b6880/operations/791c39ea-2b2f-44af-96f5-018f03d7b7b5","serviceAccountEmail":"ext-firestore-algolia-search@myuniwork-b6880.iam.gserviceaccount.com","lastOperationType":"CONFIGURE","etag":"660b301b0edb074d975fc7a7344c9ac5ef7d45b2e982464572f9575a13a0f59f"}]}
[debug] [2022-09-29T10:33:57.984Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/myuniwork-b6880:getIamPolicy [none]
[debug] [2022-09-29T10:33:59.993Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/myuniwork-b6880:getIamPolicy 200
[debug] [2022-09-29T10:33:59.993Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/myuniwork-b6880:getIamPolicy {"version":1,"etag":"BwXprh3KPpY=","bindings":[{"role":"roles/appengine.serviceAgent","members":["serviceAccount:service-77703230322@gcp-gae-service.iam.gserviceaccount.com"]},{"role":"roles/artifactregistry.serviceAgent","members":["serviceAccount:service-77703230322@gcp-sa-artifactregistry.iam.gserviceaccount.com"]},{"role":"roles/cloudbuild.builds.builder","members":["serviceAccount:77703230322@cloudbuild.gserviceaccount.com"]},{"role":"roles/cloudbuild.serviceAgent","members":["serviceAccount:service-77703230322@gcp-sa-cloudbuild.iam.gserviceaccount.com"]},{"role":"roles/cloudfunctions.admin","members":["serviceAccount:firebase-adminsdk-flg4s@myuniwork-b6880.iam.gserviceaccount.com"]},{"role":"roles/cloudfunctions.serviceAgent","members":["serviceAccount:service-77703230322@gcf-admin-robot.iam.gserviceaccount.com"]},{"role":"roles/containerregistry.ServiceAgent","members":["serviceAccount:service-77703230322@containerregistry.iam.gserviceaccount.com"]},{"role":"roles/datastore.user","members":["serviceAccount:ext-firestore-algolia-search@myuniwork-b6880.iam.gserviceaccount.com"]},{"role":"roles/editor","members":["serviceAccount:77703230322@cloudservices.gserviceaccount.com","serviceAccount:myuniwork-b6880@appspot.gserviceaccount.com"]},{"role":"roles/firebase.managementServiceAgent","members":["serviceAccount:firebase-service-account@firebase-sa-management.iam.gserviceaccount.com"]},{"role":"roles/firebase.sdkAdminServiceAgent","members":["serviceAccount:firebase-adminsdk-flg4s@myuniwork-b6880.iam.gserviceaccount.com"]},{"role":"roles/firebaseauth.admin","members":["serviceAccount:firebase-adminsdk-flg4s@myuniwork-b6880.iam.gserviceaccount.com"]},{"role":"roles/firebasemods.serviceAgent","members":["serviceAccount:service-77703230322@gcp-sa-firebasemods.iam.gserviceaccount.com"]},{"role":"roles/firebaserules.system","members":["serviceAccount:service-77703230322@firebase-rules.iam.gserviceaccount.com"]},{"role":"roles/firebasestorage.serviceAgent","members":["serviceAccount:service-77703230322@gcp-sa-firebasestorage.iam.gserviceaccount.com"]},{"role":"roles/firestore.serviceAgent","members":["serviceAccount:service-77703230322@gcp-sa-firestore.iam.gserviceaccount.com"]},{"role":"roles/iam.serviceAccountTokenCreator","members":["serviceAccount:firebase-adminsdk-flg4s@myuniwork-b6880.iam.gserviceaccount.com"]},{"role":"roles/owner","members":["user:myuniwork22@gmail.com"]},{"role":"roles/pubsub.serviceAgent","members":["serviceAccount:service-77703230322@gcp-sa-pubsub.iam.gserviceaccount.com"]},{"role":"roles/storage.admin","members":["serviceAccount:firebase-adminsdk-flg4s@myuniwork-b6880.iam.gserviceaccount.com"]}]}
[debug] {"version":1,"etag":"BwXprh3KPpY=","bindings":[{"role":"roles/appengine.serviceAgent","members":["serviceAccount:service-77703230322@gcp-gae-service.iam.gserviceaccount.com"]},{"role":"roles/artifactregistry.serviceAgent","members":["serviceAccount:service-77703230322@gcp-sa-artifactregistry.iam.gserviceaccount.com"]},{"role":"roles/cloudbuild.builds.builder","members":["serviceAccount:77703230322@cloudbuild.gserviceaccount.com"]},{"role":"roles/cloudbuild.serviceAgent","members":["serviceAccount:service-77703230322@gcp-sa-cloudbuild.iam.gserviceaccount.com"]},{"role":"roles/cloudfunctions.admin","members":["serviceAccount:firebase-adminsdk-flg4s@myuniwork-b6880.iam.gserviceaccount.com"]},{"role":"roles/cloudfunctions.serviceAgent","members":["serviceAccount:service-77703230322@gcf-admin-robot.iam.gserviceaccount.com"]},{"role":"roles/containerregistry.ServiceAgent","members":["serviceAccount:service-77703230322@containerregistry.iam.gserviceaccount.com"]},{"role":"roles/datastore.user","members":["serviceAccount:ext-firestore-algolia-search@myuniwork-b6880.iam.gserviceaccount.com"]},{"role":"roles/editor","members":["serviceAccount:77703230322@cloudservices.gserviceaccount.com","serviceAccount:myuniwork-b6880@appspot.gserviceaccount.com"]},{"role":"roles/firebase.managementServiceAgent","members":["serviceAccount:firebase-service-account@firebase-sa-management.iam.gserviceaccount.com"]},{"role":"roles/firebase.sdkAdminServiceAgent","members":["serviceAccount:firebase-adminsdk-flg4s@myuniwork-b6880.iam.gserviceaccount.com"]},{"role":"roles/firebaseauth.admin","members":["serviceAccount:firebase-adminsdk-flg4s@myuniwork-b6880.iam.gserviceaccount.com"]},{"role":"roles/firebasemods.serviceAgent","members":["serviceAccount:service-77703230322@gcp-sa-firebasemods.iam.gserviceaccount.com"]},{"role":"roles/firebaserules.system","members":["serviceAccount:service-77703230322@firebase-rules.iam.gserviceaccount.com"]},{"role":"roles/firebasestorage.serviceAgent","members":["serviceAccount:service-77703230322@gcp-sa-firebasestorage.iam.gserviceaccount.com"]},{"role":"roles/firestore.serviceAgent","members":["serviceAccount:service-77703230322@gcp-sa-firestore.iam.gserviceaccount.com"]},{"role":"roles/iam.serviceAccountTokenCreator","members":["serviceAccount:firebase-adminsdk-flg4s@myuniwork-b6880.iam.gserviceaccount.com"]},{"role":"roles/owner","members":["user:myuniwork22@gmail.com"]},{"role":"roles/pubsub.serviceAgent","members":["serviceAccount:service-77703230322@gcp-sa-pubsub.iam.gserviceaccount.com"]},{"role":"roles/storage.admin","members":["serviceAccount:firebase-adminsdk-flg4s@myuniwork-b6880.iam.gserviceaccount.com"]}]}
[info] +  extensions: Project IAM policy OK 
[warn] !  extensions: As of firebase-tools@11.0.0, the `--local` flag is no longer required, as it is the default behavior. 
[debug] [2022-09-29T10:34:00.005Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/publishers/typesense/extensions/firestore-typesense-search/versions filter=&showPrereleases=false&pageSize=100&pageToken=
[debug] [2022-09-29T10:34:01.808Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/publishers/typesense/extensions/firestore-typesense-search/versions 200
[debug] [2022-09-29T10:34:01.811Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/publishers/typesense/extensions/firestore-typesense-search/versions {"extensionVersions":[{"name":"publishers/typesense/extensions/firestore-typesense-search/versions/0.2.0","ref":"typesense/firestore-typesense-search@0.2.0","spec":{"specVersion":"v1beta","name":"firestore-typesense-search","version":"0.2.0","description":"Indexes data from Firestore into Typesense for full-text search","roles":[{"role":"datastore.user","reason":"Required to backfill data from your Firestore collection into Typesense"}],"resources":[{"name":"indexToTypesenseOnFirestoreWrite","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:FIRESTORE_COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 120s\n","description":"A function that indexes data into Typesense when it's triggered by Firestore changes","deletionPolicy":"DELETE"},{"name":"backfillToTypesenseFromFirestore","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/typesense_sync/backfill\nlocation: ${LOCATION}\nmaxInstances: 1\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 540s\n","description":"A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`. The `backfill` key is deleted by the function, once the backfill is complete.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Typesense","url":"https://typesense.org"},"license":"Apache-2.0","sourceUrl":"https://github.com/typesense/firebase-typesense-search-extension","params":[{"param":"FIRESTORE_COLLECTION_PATH","label":"Firestore Collection Path","type":"STRING","description":"The Firestore collection that needs to be indexed into Typesense.","required":true,"example":"path/to/firestore_collection","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/firestore_collection\".","immutable":true},{"param":"FIRESTORE_COLLECTION_FIELDS","label":"Firestore Collection Fields","type":"STRING","description":"A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.","example":"field1,field2,field3"},{"param":"TYPESENSE_HOSTS","label":"Typesense Hosts","type":"STRING","description":"A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames.","required":true,"example":"xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net"},{"param":"TYPESENSE_API_KEY","label":"Typesense API Key","type":"STRING","description":"An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud","required":true},{"param":"TYPESENSE_COLLECTION_NAME","label":"Typesense Collection Name","type":"STRING","description":"Typesense collection name to index data into","required":true},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"}],"default":"us-central1","immutable":true}],"preinstallContent":"Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or a Self-Hosted server).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n#### Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n","postinstallContent":"### Post-installation Notes\n\nNow that you've installed the extension, changes from `${param:FIRESTORE_COLLECTION_PATH}` \nin your Firestore Database will be synced to the Typesense Collection `${param:TYPESENSE_COLLECTION_NAME}`\non `${param:TYPESENSE_HOSTS}`.\n\n### Pre-requisites\n\nAs a reminder in case you haven't already done this, make sure that you have setup a Typesense Collection in one of the\nfollowing ways:\n\n- Through the Typesense Cloud Dashboard or \n- Through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension expects a Typesense Cloud collection to already be created and does not create it for you.\n\n###  Backfilling Data\n\nThis extension only syncs data that was created or changed after it was installed.\nIn order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n1. Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n2. Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background function, which will read data from your Firestore collection and\ncreate equivalent documents in your Typesense collection. \n\n### See the Extension in Action\n\nTry adding or updating a Firestore document in `${param:FIRESTORE_COLLECTION_PATH}` through the Firestore UI.\nYou should see the change reflected in your Typesense collection.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Firestore / Firebase Typesense Search Extension ⚡ 🔍 \n\n[![CircleCI](https://circleci.com/gh/typesense/firestore-typesense-search.svg?style=shield)](https://circleci.com/gh/typesense/firestore-typesense-search)\n\n**Author**: Typesense (**[https://typesense.org](https://typesense.org)**)\n\n**Description**: Indexes data from Firestore into Typesense for full-text search.\n\n**Details**: Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data, with typo tolerance, faceting and more.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n\n## ⚙️ Required Setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or Self-Hosted).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n\n## 🧾 Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing).\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n\n\n## 🎛️ Configuration Parameters\n\nWhen you install this extension, you'll be able to configure the following parameters:\n\n| Parameter | Description |\n|-----------|-------------|\n| Firestore Collection Path | The Firestore collection that needs to be indexed into Typesense. |\n| Firestore Collection Fields | A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields. |\n| Typesense Hosts | A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames. | \n| Typesense API Key | An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud. |\n| Typesense Collection Name | Typesense collection name to index data into. |\n| Cloud Functions location | Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations). |\n\n\n\n## ☁️ Cloud Functions\n\n* **indexToTypesenseOnFirestoreWrite:** A function that indexes data into Typesense when it's triggered by Firestore changes\n\n* **backfillToTypesenseFromFirestore:** A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`. The `backfill` key is deleted by the function, once the backfill is complete.\n\n\n## 🔑 Access Required\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Required to backfill data from your Firestore collection into Typesense)\n\n\n## 🎬 Install this Extension \n\nYou can install this extension either through the Firebase Web console or through the Firebase CLI.\n\n#### Firebase Console\n\n[![Install this extension in your Firebase project](https://www.gstatic.com/mobilesdk/210513_mobilesdk/install-extension.png \"Install this extension in your Firebase project\")][install-link]\n\n[install-link]: https://console.firebase.google.com/project/_/extensions/install?ref=typesense/firestore-typesense-search\n\n#### Firebase CLI\n\n```bash\nfirebase ext:install typesense/firestore-typesense-search --project=[your-project-id]\n```\n\nLearn more about installing extensions in the Firebase Extensions documentation:\n\n- [Console](https://firebase.google.com/docs/extensions/install-extensions?platform=console)\n- [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n","displayName":"Search Firestore with Typesense"},"state":"PUBLISHED","hash":"3ad5a164f5a748221627d700eb2ad7ebd6f40b73e3fff3fd13d0a1879cfbeb57","createTime":"2021-06-12T19:07:14.537434Z"},{"name":"publishers/typesense/extensions/firestore-typesense-search/versions/0.2.1","ref":"typesense/firestore-typesense-search@0.2.1","spec":{"specVersion":"v1beta","name":"firestore-typesense-search","version":"0.2.1","description":"Indexes data from Firestore into Typesense for full-text search","roles":[{"role":"datastore.user","reason":"Required to backfill data from your Firestore collection into Typesense"}],"resources":[{"name":"indexToTypesenseOnFirestoreWrite","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:FIRESTORE_COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 120s\n","description":"A function that indexes data into Typesense when it's triggered by Firestore changes","deletionPolicy":"DELETE"},{"name":"backfillToTypesenseFromFirestore","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/typesense_sync/backfill\nlocation: ${LOCATION}\nmaxInstances: 1\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 540s\n","description":"A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`. The `backfill` key is deleted by the function, once the backfill is complete.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Typesense","url":"https://typesense.org"},"license":"Apache-2.0","sourceUrl":"https://github.com/typesense/firebase-typesense-search-extension","params":[{"param":"FIRESTORE_COLLECTION_PATH","label":"Firestore Collection Path","type":"STRING","description":"The Firestore collection that needs to be indexed into Typesense.","required":true,"example":"path/to/firestore_collection","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/firestore_collection\".","immutable":true},{"param":"FIRESTORE_COLLECTION_FIELDS","label":"Firestore Collection Fields","type":"STRING","description":"A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.","example":"field1,field2,field3"},{"param":"TYPESENSE_HOSTS","label":"Typesense Hosts","type":"STRING","description":"A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames.","required":true,"example":"xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net"},{"param":"TYPESENSE_API_KEY","label":"Typesense API Key","type":"STRING","description":"An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud","required":true},{"param":"TYPESENSE_COLLECTION_NAME","label":"Typesense Collection Name","type":"STRING","description":"Typesense collection name to index data into","required":true},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true}],"preinstallContent":"Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or a Self-Hosted server).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n#### Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n","postinstallContent":"### Post-installation Notes\n\nNow that you've installed the extension, changes from `${param:FIRESTORE_COLLECTION_PATH}` \nin your Firestore Database will be synced to the Typesense Collection `${param:TYPESENSE_COLLECTION_NAME}`\non `${param:TYPESENSE_HOSTS}`.\n\n### Pre-requisites\n\nAs a reminder in case you haven't already done this, make sure that you have setup a Typesense Collection in one of the\nfollowing ways:\n\n- Through the Typesense Cloud Dashboard or \n- Through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension expects a Typesense Cloud collection to already be created and does not create it for you.\n\n###  Backfilling Data\n\nThis extension only syncs data that was created or changed after it was installed.\nIn order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n1. Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n2. Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background function, which will read data from your Firestore collection and\ncreate equivalent documents in your Typesense collection. \n\n### See the Extension in Action\n\nTry adding or updating a Firestore document in `${param:FIRESTORE_COLLECTION_PATH}` through the Firestore UI.\nYou should see the change reflected in your Typesense collection.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Firestore / Firebase Typesense Search Extension ⚡ 🔍 \n\n[![CircleCI](https://circleci.com/gh/typesense/firestore-typesense-search.svg?style=shield)](https://circleci.com/gh/typesense/firestore-typesense-search)\n\n**Author**: Typesense (**[https://typesense.org](https://typesense.org)**)\n\n**Description**: Indexes data from Firestore into Typesense for full-text search.\n\n**Details**: Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data, with typo tolerance, faceting and more.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n## ⚙️ Usage\n\n### 1. Setup Prerequisites\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or Self-Hosted).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\n### 2. Install the Extension \n\nYou can install this extension either through the Firebase Web console or through the Firebase CLI.\n\n##### Firebase Console\n\n[![Install this extension in your Firebase project](https://www.gstatic.com/mobilesdk/210513_mobilesdk/install-extension.png \"Install this extension in your Firebase project\")][install-link]\n\n[install-link]: https://console.firebase.google.com/project/_/extensions/install?ref=typesense/firestore-typesense-search\n\n##### Firebase CLI\n\n```bash\nfirebase ext:install typesense/firestore-typesense-search --project=[your-project-id]\n```\n\nLearn more about installing extensions in the Firebase Extensions documentation:\n\n- [Console](https://firebase.google.com/docs/extensions/install-extensions?platform=console)\n- [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n\n### 3. Backfilling data (optional)\n\nThis extension only syncs data that was created or changed in Firestore, after it was installed. In order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n- Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n- Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background Cloud function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n## 🧾 Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing).\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n\n\n## 🎛️ Configuration Parameters\n\nWhen you install this extension, you'll be able to configure the following parameters:\n\n| Parameter | Description |\n|-----------|-------------|\n| Firestore Collection Path | The Firestore collection that needs to be indexed into Typesense. |\n| Firestore Collection Fields | A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields. |\n| Typesense Hosts | A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames. | \n| Typesense API Key | An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud. |\n| Typesense Collection Name | Typesense collection name to index data into. |\n| Cloud Functions location | Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations). |\n\n\n\n## ☁️ Cloud Functions\n\n* **indexToTypesenseOnFirestoreWrite:** A function that indexes data into Typesense when it's triggered by Firestore changes\n\n* **backfillToTypesenseFromFirestore:** A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`. The `backfill` key is deleted by the function, once the backfill is complete.\n\n\n## 🔑 Access Required\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Required to backfill data from your Firestore collection into Typesense)\n\n## Development Workflow\n\n#### Run Emulator\n\n```shell\nnpm run emulator\nnpm run typesenseServer\n```\n\n- Emulator UI will be accessible at http://localhost:4000.\n- Local Typesense server will be accessible at http://localhost:8108\n\nAdd records in the Firestore UI and they should be created in Typesense.\n\n#### Run Integration Tests\n\n```shell\nnpm run test\n```\n\n#### Generate README\n\nThe Firebase CLI provides the following convenience command to auto-generate a README file containing content\npulled from extension.yaml file and PREINSTALL.md file:\n\n```shell\nfirebase ext:info ./ --markdown > README.md\n```\n\n#### Publish Extension\n\n- Update version number in extension.yaml\n- \n    ```shell\n    firebase ext:dev:publish typesense/firestore-typesense-search\n    ```\n- Create release in Github\n\n## ℹ️ Support\n\nPlease open a Github issue or join our [Slack community](https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg).\n","displayName":"Search Firestore with Typesense"},"state":"PUBLISHED","hash":"59de0cc678c084a394039266a48d1ed18df03e93fac1a21f0258b37920fd1a49","createTime":"2021-06-16T00:41:30.488260Z"},{"name":"publishers/typesense/extensions/firestore-typesense-search/versions/0.2.2","ref":"typesense/firestore-typesense-search@0.2.2","spec":{"specVersion":"v1beta","name":"firestore-typesense-search","version":"0.2.2","description":"Indexes data from Firestore into Typesense for full-text search","roles":[{"role":"datastore.user","reason":"Required to backfill data from your Firestore collection into Typesense"}],"resources":[{"name":"indexToTypesenseOnFirestoreWrite","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:FIRESTORE_COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 120s\n","description":"A function that indexes data into Typesense when it's triggered by Firestore changes","deletionPolicy":"DELETE"},{"name":"backfillToTypesenseFromFirestore","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/typesense_sync/backfill\nlocation: ${LOCATION}\nmaxInstances: 1\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 540s\n","description":"A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`. The `backfill` key is deleted by the function, once the backfill is complete.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Typesense","url":"https://typesense.org"},"license":"Apache-2.0","releaseNotesUrl":"https://github.com/typesense/firestore-typesense-search/releases","sourceUrl":"https://github.com/typesense/firebase-typesense-search-extension","params":[{"param":"FIRESTORE_COLLECTION_PATH","label":"Firestore Collection Path","type":"STRING","description":"The Firestore collection that needs to be indexed into Typesense.","required":true,"example":"path/to/firestore_collection","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/firestore_collection\".","immutable":true},{"param":"FIRESTORE_COLLECTION_FIELDS","label":"Firestore Collection Fields","type":"STRING","description":"A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.","example":"field1,field2,field3"},{"param":"TYPESENSE_HOSTS","label":"Typesense Hosts","type":"STRING","description":"A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames.","required":true,"example":"xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net"},{"param":"TYPESENSE_API_KEY","label":"Typesense API Key","type":"STRING","description":"An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud","required":true},{"param":"TYPESENSE_COLLECTION_NAME","label":"Typesense Collection Name","type":"STRING","description":"Typesense collection name to index data into","required":true},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true}],"preinstallContent":"Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or a Self-Hosted server).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n#### Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n","postinstallContent":"### Post-installation Notes\n\nNow that you've installed the extension, changes from `${param:FIRESTORE_COLLECTION_PATH}` \nin your Firestore Database will be synced to the Typesense Collection `${param:TYPESENSE_COLLECTION_NAME}`\non `${param:TYPESENSE_HOSTS}`.\n\n### Pre-requisites\n\nAs a reminder in case you haven't already done this, make sure that you have setup a Typesense Collection in one of the\nfollowing ways:\n\n- Through the Typesense Cloud Dashboard or \n- Through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension expects a Typesense Cloud collection to already be created and does not create it for you.\n\n###  Backfilling Data\n\nThis extension only syncs data that was created or changed after it was installed.\nIn order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n1. Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n2. Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background function, which will read data from your Firestore collection and\ncreate equivalent documents in your Typesense collection. \n\n### See the Extension in Action\n\nTry adding or updating a Firestore document in `${param:FIRESTORE_COLLECTION_PATH}` through the Firestore UI.\nYou should see the change reflected in your Typesense collection.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Firestore / Firebase Typesense Search Extension ⚡ 🔍 \n\n[![CircleCI](https://circleci.com/gh/typesense/firestore-typesense-search.svg?style=shield)](https://circleci.com/gh/typesense/firestore-typesense-search)\n\nA Firebase extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), \nto be able to do full-text fuzzy search on your Firestore data, with typo tolerance, faceting, filtering, sorting, curation, synonyms, geosearch and more.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n**What is Typesense?**\n\nIf you're new to [Typesense](https://typesense.org), it is an open source search engine that is simple to use, run and scale, with clean APIs and documentation. Think of it as an open source alternative to Algolia and an easier-to-use, batteries-included alternative to ElasticSearch. Get a quick overview from [this guide](https://typesense.org/docs/guide).\n\n\n## ⚙️ Usage\n\n### 1. Setup Prerequisites\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or Self-Hosted).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\n### 2. Install the Extension \n\nYou can install this extension either through the Firebase Web console or through the Firebase CLI.\n\n##### Firebase Console\n\n[![Install this extension in your Firebase project](https://www.gstatic.com/mobilesdk/210513_mobilesdk/install-extension.png \"Install this extension in your Firebase project\")][install-link]\n\n[install-link]: https://console.firebase.google.com/project/_/extensions/install?ref=typesense/firestore-typesense-search\n\n##### Firebase CLI\n\n```bash\nfirebase ext:install typesense/firestore-typesense-search --project=[your-project-id]\n```\n\nLearn more about installing extensions in the Firebase Extensions documentation:\n\n- [Console](https://firebase.google.com/docs/extensions/install-extensions?platform=console)\n- [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n\n### 3. Backfilling data (optional)\n\nThis extension only syncs data that was created or changed in Firestore, after it was installed. In order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n- Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n- Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background Cloud function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n## 🧾 Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing).\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n\n\n## 🎛️ Configuration Parameters\n\nWhen you install this extension, you'll be able to configure the following parameters:\n\n| Parameter | Description |\n|-----------|-------------|\n| Firestore Collection Path | The Firestore collection that needs to be indexed into Typesense. |\n| Firestore Collection Fields | A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields. |\n| Typesense Hosts | A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames. | \n| Typesense API Key | An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud. |\n| Typesense Collection Name | Typesense collection name to index data into. |\n| Cloud Functions location | Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations). |\n\n\n\n## ☁️ Cloud Functions\n\n* **indexToTypesenseOnFirestoreWrite:** A function that indexes data into Typesense when it's triggered by Firestore changes\n\n* **backfillToTypesenseFromFirestore:** A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`. The `backfill` key is deleted by the function, once the backfill is complete.\n\n\n## 🔑 Access Required\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Required to backfill data from your Firestore collection into Typesense)\n\n## Development Workflow\n\n#### Run Emulator\n\n```shell\nnpm run emulator\nnpm run typesenseServer\n```\n\n- Emulator UI will be accessible at http://localhost:4000.\n- Local Typesense server will be accessible at http://localhost:8108\n\nAdd records in the Firestore UI and they should be created in Typesense.\n\n#### Run Integration Tests\n\n```shell\nnpm run test\n```\n\n#### Generate README\n\nThe Firebase CLI provides the following convenience command to auto-generate a README file containing content\npulled from extension.yaml file and PREINSTALL.md file:\n\n```shell\nfirebase ext:info ./ --markdown > README.md\n```\n\n#### Publish Extension\n\n- Update version number in extension.yaml\n- \n    ```shell\n    firebase ext:dev:publish typesense/firestore-typesense-search\n    ```\n- Create release in Github\n\n## ℹ️ Support\n\nPlease open a Github issue or join our [Slack community](https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg).\n","displayName":"Search Firestore with Typesense"},"state":"PUBLISHED","hash":"a1a22eb0ca21d861c6a4d6703561448d9fddcbeb1be34ecd2995c3fed845546d","createTime":"2021-06-30T01:43:25.635372Z"},{"name":"publishers/typesense/extensions/firestore-typesense-search/versions/0.2.3","ref":"typesense/firestore-typesense-search@0.2.3","spec":{"specVersion":"v1beta","name":"firestore-typesense-search","version":"0.2.3","description":"Indexes data from Firestore into Typesense for full-text search","roles":[{"role":"datastore.user","reason":"Required to backfill data from your Firestore collection into Typesense"}],"resources":[{"name":"indexToTypesenseOnFirestoreWrite","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:FIRESTORE_COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 120s\n","description":"A function that indexes data into Typesense when it's triggered by Firestore changes","deletionPolicy":"DELETE"},{"name":"backfillToTypesenseFromFirestore","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/typesense_sync/backfill\nlocation: ${LOCATION}\nmaxInstances: 1\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 540s\n","description":"A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Typesense","url":"https://typesense.org"},"license":"Apache-2.0","releaseNotesUrl":"https://github.com/typesense/firestore-typesense-search/releases","sourceUrl":"https://github.com/typesense/firebase-typesense-search-extension/tree/master","params":[{"param":"FIRESTORE_COLLECTION_PATH","label":"Firestore Collection Path","type":"STRING","description":"The Firestore collection that needs to be indexed into Typesense.","required":true,"example":"path/to/firestore_collection","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/firestore_collection\".","immutable":true},{"param":"FIRESTORE_COLLECTION_FIELDS","label":"Firestore Collection Fields","type":"STRING","description":"A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.","example":"field1,field2,field3"},{"param":"TYPESENSE_HOSTS","label":"Typesense Hosts","type":"STRING","description":"A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames.","required":true,"example":"xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net"},{"param":"TYPESENSE_API_KEY","label":"Typesense API Key","type":"STRING","description":"An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud","required":true},{"param":"TYPESENSE_COLLECTION_NAME","label":"Typesense Collection Name","type":"STRING","description":"Typesense collection name to index data into","required":true},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true}],"preinstallContent":"Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or a Self-Hosted server).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n#### Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n","postinstallContent":"### Post-installation Notes\n\nNow that you've installed the extension, changes from `${param:FIRESTORE_COLLECTION_PATH}` \nin your Firestore Database will be synced to the Typesense Collection `${param:TYPESENSE_COLLECTION_NAME}`\non `${param:TYPESENSE_HOSTS}`.\n\n### Pre-requisites\n\nAs a reminder in case you haven't already done this, make sure that you have setup a Typesense Collection in one of the\nfollowing ways:\n\n- Through the Typesense Cloud Dashboard or \n- Through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension expects a Typesense Cloud collection to already be created and does not create it for you.\n\n###  Backfilling Data\n\nThis extension only syncs data that was created or changed after it was installed.\nIn order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n1. Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n2. Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background function, which will read data from your Firestore collection and\ncreate equivalent documents in your Typesense collection. \n\n### See the Extension in Action\n\nTry adding or updating a Firestore document in `${param:FIRESTORE_COLLECTION_PATH}` through the Firestore UI.\nYou should see the change reflected in your Typesense collection.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Firestore / Firebase Typesense Search Extension ⚡ 🔍 \n\n[![CircleCI](https://circleci.com/gh/typesense/firestore-typesense-search.svg?style=shield)](https://circleci.com/gh/typesense/firestore-typesense-search)\n\nA Firebase extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), \nto be able to do full-text fuzzy search on your Firestore data, with typo tolerance, faceting, filtering, sorting, curation, synonyms, geosearch and more.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n**What is Typesense?**\n\nIf you're new to [Typesense](https://typesense.org), it is an open source search engine that is simple to use, run and scale, with clean APIs and documentation. Think of it as an open source alternative to Algolia and an easier-to-use, batteries-included alternative to ElasticSearch. Get a quick overview from [this guide](https://typesense.org/docs/guide).\n\n\n## ⚙️ Usage\n\n### 1. Setup Prerequisites\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or Self-Hosted).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\n### 2. Install the Extension \n\nYou can install this extension either through the Firebase Web console or through the Firebase CLI.\n\n##### Firebase Console\n\n[![Install this extension in your Firebase project](https://www.gstatic.com/mobilesdk/210513_mobilesdk/install-extension.png \"Install this extension in your Firebase project\")][install-link]\n\n[install-link]: https://console.firebase.google.com/project/_/extensions/install?ref=typesense/firestore-typesense-search\n\n##### Firebase CLI\n\n```bash\nfirebase ext:install typesense/firestore-typesense-search --project=[your-project-id]\n```\n\nLearn more about installing extensions in the Firebase Extensions documentation:\n\n- [Console](https://firebase.google.com/docs/extensions/install-extensions?platform=console)\n- [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n\n### 3. Backfilling data (optional)\n\nThis extension only syncs data that was created or changed in Firestore, after it was installed. In order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n- Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n- Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background Cloud function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n## 🧾 Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing).\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n\n\n## 🎛️ Configuration Parameters\n\nWhen you install this extension, you'll be able to configure the following parameters:\n\n| Parameter | Description |\n|-----------|-------------|\n| Firestore Collection Path | The Firestore collection that needs to be indexed into Typesense. |\n| Firestore Collection Fields | A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields. |\n| Typesense Hosts | A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames. | \n| Typesense API Key | An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud. |\n| Typesense Collection Name | Typesense collection name to index data into. |\n| Cloud Functions location | Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations). |\n\n\n\n## ☁️ Cloud Functions\n\n* **indexToTypesenseOnFirestoreWrite:** A function that indexes data into Typesense when it's triggered by Firestore changes.\n\n* **backfillToTypesenseFromFirestore:** A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.\n\n\n## 🔑 Access Required\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Required to backfill data from your Firestore collection into Typesense)\n\n## Development Workflow\n\n#### Run Emulator\n\n```shell\nnpm run emulator\nnpm run typesenseServer\n```\n\n- Emulator UI will be accessible at http://localhost:4000.\n- Local Typesense server will be accessible at http://localhost:8108\n\nAdd records in the Firestore UI and they should be created in Typesense.\n\n#### Run Integration Tests\n\n```shell\nnpm run test\n```\n\n#### Generate README\n\nThe Firebase CLI provides the following convenience command to auto-generate a README file containing content\npulled from extension.yaml file and PREINSTALL.md file:\n\n```shell\nfirebase ext:info ./ --markdown > README.md\n```\n\n#### Publish Extension\n\n- Update version number in extension.yaml\n- \n    ```shell\n    firebase ext:dev:publish typesense/firestore-typesense-search\n    ```\n- Create release in Github\n\n## ℹ️ Support\n\nPlease open a Github issue or join our [Slack community](https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg).\n","displayName":"Search Firestore with Typesense"},"state":"PUBLISHED","hash":"cd6645cd9298ad49aa005e3b0e982b97500e7bd40a30687952df1b0d3af621d8","createTime":"2021-06-30T02:06:41.661294Z"},{"name":"publishers/typesense/extensions/firestore-typesense-search/versions/0.2.4","ref":"typesense/firestore-typesense-search@0.2.4","spec":{"specVersion":"v1beta","name":"firestore-typesense-search","version":"0.2.4","description":"Indexes data from Firestore into Typesense for full-text search","roles":[{"role":"datastore.user","reason":"Required to backfill data from your Firestore collection into Typesense"}],"resources":[{"name":"indexToTypesenseOnFirestoreWrite","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:FIRESTORE_COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 120s\n","description":"A function that indexes data into Typesense when it's triggered by Firestore changes","deletionPolicy":"DELETE"},{"name":"backfillToTypesenseFromFirestore","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/typesense_sync/backfill\nlocation: ${LOCATION}\nmaxInstances: 1\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 540s\n","description":"A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Typesense","url":"https://typesense.org"},"license":"Apache-2.0","releaseNotesUrl":"https://github.com/typesense/firestore-typesense-search/releases","sourceUrl":"https://github.com/typesense/firebase-typesense-search-extension/tree/master","params":[{"param":"FIRESTORE_COLLECTION_PATH","label":"Firestore Collection Path","type":"STRING","description":"The Firestore collection that needs to be indexed into Typesense.","required":true,"example":"path/to/firestore_collection","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/firestore_collection\".","immutable":true},{"param":"FIRESTORE_COLLECTION_FIELDS","label":"Firestore Collection Fields","type":"STRING","description":"A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.","example":"field1,field2,field3"},{"param":"TYPESENSE_HOSTS","label":"Typesense Hosts","type":"STRING","description":"A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames.","required":true,"example":"xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net"},{"param":"TYPESENSE_API_KEY","label":"Typesense API Key","type":"STRING","description":"An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud","required":true},{"param":"TYPESENSE_COLLECTION_NAME","label":"Typesense Collection Name","type":"STRING","description":"Typesense collection name to index data into","required":true},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true}],"preinstallContent":"Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or a Self-Hosted server).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n#### Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n","postinstallContent":"### Post-installation Notes\n\nNow that you've installed the extension, changes from `${param:FIRESTORE_COLLECTION_PATH}` \nin your Firestore Database will be synced to the Typesense Collection `${param:TYPESENSE_COLLECTION_NAME}`\non `${param:TYPESENSE_HOSTS}`.\n\n### Pre-requisites\n\nAs a reminder in case you haven't already done this, make sure that you have setup a Typesense Collection in one of the\nfollowing ways:\n\n- Through the Typesense Cloud Dashboard or \n- Through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension expects a Typesense Cloud collection to already be created and does not create it for you.\n\n###  Backfilling Data\n\nThis extension only syncs data that was created or changed after it was installed.\nIn order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n1. Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n2. Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background function, which will read data from your Firestore collection and\ncreate equivalent documents in your Typesense collection. \n\n### See the Extension in Action\n\nTry adding or updating a Firestore document in `${param:FIRESTORE_COLLECTION_PATH}` through the Firestore UI.\nYou should see the change reflected in your Typesense collection.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Firestore / Firebase Typesense Search Extension ⚡ 🔍 \n\n[![CircleCI](https://circleci.com/gh/typesense/firestore-typesense-search.svg?style=shield)](https://circleci.com/gh/typesense/firestore-typesense-search)\n\nA Firebase extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), \nto be able to do full-text fuzzy search on your Firestore data, with typo tolerance, faceting, filtering, sorting, curation, synonyms, geosearch and more.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n**What is Typesense?**\n\nIf you're new to [Typesense](https://typesense.org), it is an open source search engine that is simple to use, run and scale, with clean APIs and documentation. Think of it as an open source alternative to Algolia and an easier-to-use, batteries-included alternative to ElasticSearch. Get a quick overview from [this guide](https://typesense.org/docs/guide).\n\n\n## ⚙️ Usage\n\n### 1. Setup Prerequisites\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or Self-Hosted).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\n### 2. Install the Extension \n\nYou can install this extension either through the Firebase Web console or through the Firebase CLI.\n\n##### Firebase Console\n\n[![Install this extension in your Firebase project](https://www.gstatic.com/mobilesdk/210513_mobilesdk/install-extension.png \"Install this extension in your Firebase project\")][install-link]\n\n[install-link]: https://console.firebase.google.com/project/_/extensions/install?ref=typesense/firestore-typesense-search\n\n##### Firebase CLI\n\n```bash\nfirebase ext:install typesense/firestore-typesense-search --project=[your-project-id]\n```\n\nLearn more about installing extensions in the Firebase Extensions documentation:\n\n- [Console](https://firebase.google.com/docs/extensions/install-extensions?platform=console)\n- [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n\n### 3. Backfilling data (optional)\n\nThis extension only syncs data that was created or changed in Firestore, after it was installed. In order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n- Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n- Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background Cloud function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n## 🧾 Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing).\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n\n\n## 🎛️ Configuration Parameters\n\nWhen you install this extension, you'll be able to configure the following parameters:\n\n| Parameter | Description |\n|-----------|-------------|\n| Firestore Collection Path | The Firestore collection that needs to be indexed into Typesense. |\n| Firestore Collection Fields | A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields. |\n| Typesense Hosts | A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames. | \n| Typesense API Key | An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud. |\n| Typesense Collection Name | Typesense collection name to index data into. |\n| Cloud Functions location | Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations). |\n\n\n\n## ☁️ Cloud Functions\n\n* **indexToTypesenseOnFirestoreWrite:** A function that indexes data into Typesense when it's triggered by Firestore changes.\n\n* **backfillToTypesenseFromFirestore:** A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.\n\n\n## 🔑 Access Required\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Required to backfill data from your Firestore collection into Typesense)\n\n## Development Workflow\n\n#### Run Emulator\n\n```shell\nnpm run emulator\nnpm run typesenseServer\n```\n\n- Emulator UI will be accessible at http://localhost:4000.\n- Local Typesense server will be accessible at http://localhost:8108\n\nAdd records in the Firestore UI and they should be created in Typesense.\n\n#### Run Integration Tests\n\n```shell\nnpm run test\n```\n\n#### Generate README\n\nThe Firebase CLI provides the following convenience command to auto-generate a README file containing content\npulled from extension.yaml file and PREINSTALL.md file:\n\n```shell\nfirebase ext:info ./ --markdown > README.md\n```\n\n#### Publish Extension\n\n- Update version number in extension.yaml\n- \n    ```shell\n    firebase ext:dev:publish typesense/firestore-typesense-search\n    ```\n- Create release in Github\n\n## ℹ️ Support\n\nPlease open a Github issue or join our [Slack community](https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg).\n","displayName":"Search Firestore with Typesense"},"state":"PUBLISHED","hash":"adf68c83bed0dabd0b8e0c77f37d18dcf3b066829dc05406521114d881cb7a50","createTime":"2021-07-23T04:51:30.789565Z"},{"name":"publishers/typesense/extensions/firestore-typesense-search/versions/0.2.5","ref":"typesense/firestore-typesense-search@0.2.5","spec":{"specVersion":"v1beta","name":"firestore-typesense-search","version":"0.2.5","description":"Indexes data from Firestore into Typesense for full-text search","roles":[{"role":"datastore.user","reason":"Required to backfill data from your Firestore collection into Typesense"}],"resources":[{"name":"indexToTypesenseOnFirestoreWrite","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:FIRESTORE_COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 120s\n","description":"A function that indexes data into Typesense when it's triggered by Firestore changes","deletionPolicy":"DELETE"},{"name":"backfillToTypesenseFromFirestore","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 2048\neventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/typesense_sync/backfill\nlocation: ${LOCATION}\nmaxInstances: 1\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 540s\n","description":"A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Typesense","url":"https://typesense.org"},"license":"Apache-2.0","releaseNotesUrl":"https://github.com/typesense/firestore-typesense-search/releases","sourceUrl":"https://github.com/typesense/firebase-typesense-search-extension/tree/master","params":[{"param":"FIRESTORE_COLLECTION_PATH","label":"Firestore Collection Path","type":"STRING","description":"The Firestore collection that needs to be indexed into Typesense.","required":true,"example":"path/to/firestore_collection","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/firestore_collection\".","immutable":true},{"param":"FIRESTORE_COLLECTION_FIELDS","label":"Firestore Collection Fields","type":"STRING","description":"A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.","example":"field1,field2,field3"},{"param":"TYPESENSE_HOSTS","label":"Typesense Hosts","type":"STRING","description":"A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames.","required":true,"example":"xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net"},{"param":"TYPESENSE_API_KEY","label":"Typesense API Key","type":"STRING","description":"An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud","required":true},{"param":"TYPESENSE_COLLECTION_NAME","label":"Typesense Collection Name","type":"STRING","description":"Typesense collection name to index data into","required":true},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true}],"preinstallContent":"Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or a Self-Hosted server).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n#### Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n","postinstallContent":"### Post-installation Notes\n\nNow that you've installed the extension, changes from `${param:FIRESTORE_COLLECTION_PATH}` \nin your Firestore Database will be synced to the Typesense Collection `${param:TYPESENSE_COLLECTION_NAME}`\non `${param:TYPESENSE_HOSTS}`.\n\n### Pre-requisites\n\nAs a reminder in case you haven't already done this, make sure that you have setup a Typesense Collection in one of the\nfollowing ways:\n\n- Through the Typesense Cloud Dashboard or \n- Through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension expects a Typesense Cloud collection to already be created and does not create it for you.\n\n###  Backfilling Data\n\nThis extension only syncs data that was created or changed after it was installed.\nIn order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n1. Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n2. Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background function, which will read data from your Firestore collection and\ncreate equivalent documents in your Typesense collection. \n\n### See the Extension in Action\n\nTry adding or updating a Firestore document in `${param:FIRESTORE_COLLECTION_PATH}` through the Firestore UI.\nYou should see the change reflected in your Typesense collection.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Firestore / Firebase Typesense Search Extension ⚡ 🔍 \n\n[![CircleCI](https://circleci.com/gh/typesense/firestore-typesense-search.svg?style=shield)](https://circleci.com/gh/typesense/firestore-typesense-search)\n\nA Firebase extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), \nto be able to do full-text fuzzy search on your Firestore data, with typo tolerance, faceting, filtering, sorting, curation, synonyms, geosearch and more.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n**What is Typesense?**\n\nIf you're new to [Typesense](https://typesense.org), it is an open source search engine that is simple to use, run and scale, with clean APIs and documentation. Think of it as an open source alternative to Algolia and an easier-to-use, batteries-included alternative to ElasticSearch. Get a quick overview from [this guide](https://typesense.org/docs/guide).\n\n\n## ⚙️ Usage\n\n### 1. Setup Prerequisites\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or Self-Hosted).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\n### 2. Install the Extension \n\nYou can install this extension either through the Firebase Web console or through the Firebase CLI.\n\n##### Firebase Console\n\n[![Install this extension in your Firebase project](https://www.gstatic.com/mobilesdk/210513_mobilesdk/install-extension.png \"Install this extension in your Firebase project\")][install-link]\n\n[install-link]: https://console.firebase.google.com/project/_/extensions/install?ref=typesense/firestore-typesense-search\n\n##### Firebase CLI\n\n```bash\nfirebase ext:install typesense/firestore-typesense-search --project=[your-project-id]\n```\n\nLearn more about installing extensions in the Firebase Extensions documentation:\n\n- [Console](https://firebase.google.com/docs/extensions/install-extensions?platform=console)\n- [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n\n### 3. Backfilling data (optional)\n\nThis extension only syncs data that was created or changed in Firestore, after it was installed. In order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n- Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n- Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background Cloud function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n## 🧾 Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing).\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n\n\n## 🎛️ Configuration Parameters\n\nWhen you install this extension, you'll be able to configure the following parameters:\n\n| Parameter | Description |\n|-----------|-------------|\n| Firestore Collection Path | The Firestore collection that needs to be indexed into Typesense. |\n| Firestore Collection Fields | A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields. |\n| Typesense Hosts | A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames. | \n| Typesense API Key | An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud. |\n| Typesense Collection Name | Typesense collection name to index data into. |\n| Cloud Functions location | Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations). |\n\n\n\n## ☁️ Cloud Functions\n\n* **indexToTypesenseOnFirestoreWrite:** A function that indexes data into Typesense when it's triggered by Firestore changes.\n\n* **backfillToTypesenseFromFirestore:** A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.\n\n\n## 🔑 Access Required\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Required to backfill data from your Firestore collection into Typesense)\n\n## Development Workflow\n\n#### Run Emulator\n\n```shell\nnpm run emulator\nnpm run typesenseServer\n```\n\n- Emulator UI will be accessible at http://localhost:4000.\n- Local Typesense server will be accessible at http://localhost:8108\n\nAdd records in the Firestore UI and they should be created in Typesense.\n\n#### Run Integration Tests\n\n```shell\nnpm run test\n```\n\n#### Generate README\n\nThe Firebase CLI provides the following convenience command to auto-generate a README file containing content\npulled from extension.yaml file and PREINSTALL.md file:\n\n```shell\nfirebase ext:info ./ --markdown > README.md\n```\n\n#### Publish Extension\n\n- Update version number in extension.yaml\n- \n    ```shell\n    firebase ext:dev:publish typesense/firestore-typesense-search\n    ```\n- Create release in Github\n\n## ℹ️ Support\n\nPlease open a Github issue or join our [Slack community](https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg).\n","displayName":"Search Firestore with Typesense"},"state":"PUBLISHED","hash":"0461c1547c384aa5d5556062300a166575d21e7836e3d4f2db92db768638c2c1","createTime":"2021-08-03T22:35:08.556490Z"},{"name":"publishers/typesense/extensions/firestore-typesense-search/versions/0.2.6","ref":"typesense/firestore-typesense-search@0.2.6","spec":{"specVersion":"v1beta","name":"firestore-typesense-search","version":"0.2.6","description":"Indexes data from Firestore into Typesense for full-text search","roles":[{"role":"datastore.user","reason":"Required to backfill data from your Firestore collection into Typesense"}],"resources":[{"name":"indexToTypesenseOnFirestoreWrite","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:FIRESTORE_COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 120s\n","description":"A function that indexes data into Typesense when it's triggered by Firestore changes","deletionPolicy":"DELETE"},{"name":"backfillToTypesenseFromFirestore","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 2048\neventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/typesense_sync/backfill\nlocation: ${LOCATION}\nmaxInstances: 1\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 540s\n","description":"A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Typesense","url":"https://typesense.org"},"license":"Apache-2.0","releaseNotesUrl":"https://github.com/typesense/firestore-typesense-search/releases","sourceUrl":"https://github.com/typesense/firebase-typesense-search-extension/tree/master","params":[{"param":"FIRESTORE_COLLECTION_PATH","label":"Firestore Collection Path","type":"STRING","description":"The Firestore collection that needs to be indexed into Typesense.","required":true,"example":"path/to/firestore_collection","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/firestore_collection\".","immutable":true},{"param":"FIRESTORE_COLLECTION_FIELDS","label":"Firestore Collection Fields","type":"STRING","description":"A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.","example":"field1,field2,field3"},{"param":"TYPESENSE_HOSTS","label":"Typesense Hosts","type":"STRING","description":"A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames.","required":true,"example":"xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net"},{"param":"TYPESENSE_API_KEY","label":"Typesense API Key","type":"STRING","description":"An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud","required":true},{"param":"TYPESENSE_COLLECTION_NAME","label":"Typesense Collection Name","type":"STRING","description":"Typesense collection name to index data into","required":true},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true}],"preinstallContent":"Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or a Self-Hosted server).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n#### Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n","postinstallContent":"### Post-installation Notes\n\nNow that you've installed the extension, changes from `${param:FIRESTORE_COLLECTION_PATH}` \nin your Firestore Database will be synced to the Typesense Collection `${param:TYPESENSE_COLLECTION_NAME}`\non `${param:TYPESENSE_HOSTS}`.\n\n### Pre-requisites\n\nAs a reminder in case you haven't already done this, make sure that you have setup a Typesense Collection in one of the\nfollowing ways:\n\n- Through the Typesense Cloud Dashboard or \n- Through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension expects a Typesense Cloud collection to already be created and does not create it for you.\n\n###  Backfilling Data\n\nThis extension only syncs data that was created or changed after it was installed.\nIn order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n1. Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n2. Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background function, which will read data from your Firestore collection and\ncreate equivalent documents in your Typesense collection. \n\n### See the Extension in Action\n\nTry adding or updating a Firestore document in `${param:FIRESTORE_COLLECTION_PATH}` through the Firestore UI.\nYou should see the change reflected in your Typesense collection.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Firestore / Firebase Typesense Search Extension ⚡ 🔍 \n\n[![CircleCI](https://circleci.com/gh/typesense/firestore-typesense-search.svg?style=shield)](https://circleci.com/gh/typesense/firestore-typesense-search)\n\nA Firebase extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), \nto be able to do full-text fuzzy search on your Firestore data, with typo tolerance, faceting, filtering, sorting, curation, synonyms, geosearch and more.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n**What is Typesense?**\n\nIf you're new to [Typesense](https://typesense.org), it is an open source search engine that is simple to use, run and scale, with clean APIs and documentation. Think of it as an open source alternative to Algolia and an easier-to-use, batteries-included alternative to ElasticSearch. Get a quick overview from [this guide](https://typesense.org/docs/guide).\n\n\n## ⚙️ Usage\n\n### 1. Setup Prerequisites\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or Self-Hosted).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\n### 2. Install the Extension \n\nYou can install this extension either through the Firebase Web console or through the Firebase CLI.\n\n##### Firebase Console\n\n[![Install this extension in your Firebase project](https://www.gstatic.com/mobilesdk/210513_mobilesdk/install-extension.png \"Install this extension in your Firebase project\")][install-link]\n\n[install-link]: https://console.firebase.google.com/project/_/extensions/install?ref=typesense/firestore-typesense-search\n\n##### Firebase CLI\n\n```bash\nfirebase ext:install typesense/firestore-typesense-search --project=[your-project-id]\n```\n\nLearn more about installing extensions in the Firebase Extensions documentation:\n\n- [Console](https://firebase.google.com/docs/extensions/install-extensions?platform=console)\n- [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n\n### 3. Backfilling data (optional)\n\nThis extension only syncs data that was created or changed in Firestore, after it was installed. In order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n- Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n- Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background Cloud function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n## 🧾 Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing).\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n\n\n## 🎛️ Configuration Parameters\n\nWhen you install this extension, you'll be able to configure the following parameters:\n\n| Parameter | Description |\n|-----------|-------------|\n| Firestore Collection Path | The Firestore collection that needs to be indexed into Typesense. |\n| Firestore Collection Fields | A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields. |\n| Typesense Hosts | A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames. | \n| Typesense API Key | An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud. |\n| Typesense Collection Name | Typesense collection name to index data into. |\n| Cloud Functions location | Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations). |\n\n\n\n## ☁️ Cloud Functions\n\n* **indexToTypesenseOnFirestoreWrite:** A function that indexes data into Typesense when it's triggered by Firestore changes.\n\n* **backfillToTypesenseFromFirestore:** A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.\n\n\n## 🔑 Access Required\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Required to backfill data from your Firestore collection into Typesense)\n\n## Development Workflow\n\n#### Run Emulator\n\n```shell\nnpm run emulator\nnpm run typesenseServer\n```\n\n- Emulator UI will be accessible at http://localhost:4000.\n- Local Typesense server will be accessible at http://localhost:8108\n\nAdd records in the Firestore UI and they should be created in Typesense.\n\n#### Run Integration Tests\n\n```shell\nnpm run test\n```\n\n#### Generate README\n\nThe Firebase CLI provides the following convenience command to auto-generate a README file containing content\npulled from extension.yaml file and PREINSTALL.md file:\n\n```shell\nfirebase ext:info ./ --markdown > README.md\n```\n\n#### Publish Extension\n\n- Update version number in extension.yaml\n- \n    ```shell\n    firebase ext:dev:publish typesense/firestore-typesense-search\n    ```\n- Create release in Github\n\n## ℹ️ Support\n\nPlease open a Github issue or join our [Slack community](https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg).\n","displayName":"Search Firestore with Typesense"},"state":"PUBLISHED","hash":"03c48299e5310185888c6ac6af854a062041f1b4391cd7bc63821da8929df903","createTime":"2021-12-22T20:19:30.768482Z"},{"name":"publishers/typesense/extensions/firestore-typesense-search/versions/0.2.7","ref":"typesense/firestore-typesense-search@0.2.7","spec":{"specVersion":"v1beta","name":"firestore-typesense-search","version":"0.2.7","description":"Indexes data from Firestore into Typesense for full-text search","roles":[{"role":"datastore.user","reason":"Required to backfill data from your Firestore collection into Typesense"}],"resources":[{"name":"indexToTypesenseOnFirestoreWrite","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:FIRESTORE_COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 120s\n","description":"A function that indexes data into Typesense when it's triggered by Firestore changes","deletionPolicy":"DELETE"},{"name":"backfillToTypesenseFromFirestore","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 2048\neventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/typesense_sync/backfill\nlocation: ${LOCATION}\nmaxInstances: 1\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 540s\n","description":"A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Typesense","url":"https://typesense.org"},"license":"Apache-2.0","releaseNotesUrl":"https://github.com/typesense/firestore-typesense-search/releases","sourceUrl":"https://github.com/typesense/firebase-typesense-search-extension/tree/master","params":[{"param":"FIRESTORE_COLLECTION_PATH","label":"Firestore Collection Path","type":"STRING","description":"The Firestore collection that needs to be indexed into Typesense.","required":true,"example":"path/to/firestore_collection","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/firestore_collection\".","immutable":true},{"param":"FIRESTORE_COLLECTION_FIELDS","label":"Firestore Collection Fields","type":"STRING","description":"A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.","example":"field1,field2,field3"},{"param":"TYPESENSE_HOSTS","label":"Typesense Hosts","type":"STRING","description":"A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames.","required":true,"example":"xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net"},{"param":"TYPESENSE_API_KEY","label":"Typesense API Key","type":"STRING","description":"An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud","required":true},{"param":"TYPESENSE_COLLECTION_NAME","label":"Typesense Collection Name","type":"STRING","description":"Typesense collection name to index data into","required":true},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true}],"preinstallContent":"Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or a Self-Hosted server).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n#### Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n","postinstallContent":"### Post-installation Notes\n\nNow that you've installed the extension, changes from `${param:FIRESTORE_COLLECTION_PATH}` \nin your Firestore Database will be synced to the Typesense Collection `${param:TYPESENSE_COLLECTION_NAME}`\non `${param:TYPESENSE_HOSTS}`.\n\n### Pre-requisites\n\nAs a reminder in case you haven't already done this, make sure that you have setup a Typesense Collection in one of the\nfollowing ways:\n\n- Through the Typesense Cloud Dashboard or \n- Through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension expects a Typesense Cloud collection to already be created and does not create it for you.\n\n###  Backfilling Data\n\nThis extension only syncs data that was created or changed after it was installed.\nIn order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n1. Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n2. Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background function, which will read data from your Firestore collection and\ncreate equivalent documents in your Typesense collection. \n\n### See the Extension in Action\n\nTry adding or updating a Firestore document in `${param:FIRESTORE_COLLECTION_PATH}` through the Firestore UI.\nYou should see the change reflected in your Typesense collection.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Firestore / Firebase Typesense Search Extension ⚡ 🔍 \n\n[![CircleCI](https://circleci.com/gh/typesense/firestore-typesense-search.svg?style=shield)](https://circleci.com/gh/typesense/firestore-typesense-search)\n\nA Firebase extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), \nto be able to do full-text fuzzy search on your Firestore data, with typo tolerance, faceting, filtering, sorting, curation, synonyms, geosearch and more.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n**What is Typesense?**\n\nIf you're new to [Typesense](https://typesense.org), it is an open source search engine that is simple to use, run and scale, with clean APIs and documentation. Think of it as an open source alternative to Algolia and an easier-to-use, batteries-included alternative to ElasticSearch. Get a quick overview from [this guide](https://typesense.org/docs/guide).\n\n\n## ⚙️ Usage\n\n### 1. Setup Prerequisites\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or Self-Hosted).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\n### 2. Install the Extension \n\nYou can install this extension either through the Firebase Web console or through the Firebase CLI.\n\n##### Firebase Console\n\n[![Install this extension in your Firebase project](https://www.gstatic.com/mobilesdk/210513_mobilesdk/install-extension.png \"Install this extension in your Firebase project\")][install-link]\n\n[install-link]: https://console.firebase.google.com/project/_/extensions/install?ref=typesense/firestore-typesense-search\n\n##### Firebase CLI\n\n```bash\nfirebase ext:install typesense/firestore-typesense-search --project=[your-project-id]\n```\n\nLearn more about installing extensions in the Firebase Extensions documentation:\n\n- [Console](https://firebase.google.com/docs/extensions/install-extensions?platform=console)\n- [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n\n##### Syncing Multiple Firestore collections\n\nYou can install this extension multiple times in your Firebase project by clicking on the installation link above multiple times, and use a different Firestore collection path in each installation instance. [Here](https://github.com/typesense/firestore-typesense-search/issues/9#issuecomment-885940705) is a screenshot of how this looks.\n\n### 3. Backfilling data (optional)\n\nThis extension only syncs data that was created or changed in Firestore, after it was installed. In order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n- Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n- Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background Cloud function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n## 🧾 Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing).\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n\n\n## 🎛️ Configuration Parameters\n\nWhen you install this extension, you'll be able to configure the following parameters:\n\n| Parameter | Description |\n|-----------|-------------|\n| Firestore Collection Path | The Firestore collection that needs to be indexed into Typesense. |\n| Firestore Collection Fields | A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields. |\n| Typesense Hosts | A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames. | \n| Typesense API Key | An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud. |\n| Typesense Collection Name | Typesense collection name to index data into. |\n| Cloud Functions location | Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations). |\n\n\n\n## ☁️ Cloud Functions\n\n* **indexToTypesenseOnFirestoreWrite:** A function that indexes data into Typesense when it's triggered by Firestore changes.\n\n* **backfillToTypesenseFromFirestore:** A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.\n\n\n## 🔑 Access Required\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Required to backfill data from your Firestore collection into Typesense)\n\n## Development Workflow\n\n#### Run Emulator\n\n```shell\nnpm run emulator\nnpm run typesenseServer\n```\n\n- Emulator UI will be accessible at http://localhost:4000.\n- Local Typesense server will be accessible at http://localhost:8108\n\nAdd records in the Firestore UI and they should be created in Typesense.\n\n#### Run Integration Tests\n\n```shell\nnpm run test\n```\n\n#### Generate README\n\nThe Firebase CLI provides the following convenience command to auto-generate a README file containing content\npulled from extension.yaml file and PREINSTALL.md file:\n\n```shell\nfirebase ext:info ./ --markdown > README.md\n```\n\n#### Publish Extension\n\n- Update version number in extension.yaml\n- Add entry to CHANGELOG.md\n- \n    ```shell\n    firebase ext:dev:publish typesense/firestore-typesense-search\n    ```\n- Create release in Github\n\n## ℹ️ Support\n\nPlease open a Github issue or join our [Slack community](https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg).\n","displayName":"Search Firestore with Typesense"},"state":"PUBLISHED","hash":"4b63fd102eace63a3107b2399865a1d0f78bfd93747b2aa1d88908e3684ab388","createTime":"2022-02-25T19:47:38.737401Z","releaseNotes":"- Support for Typesense collection names with special characters like `/`\n"},{"name":"publishers/typesense/extensions/firestore-typesense-search/versions/0.2.8","ref":"typesense/firestore-typesense-search@0.2.8","spec":{"specVersion":"v1beta","name":"firestore-typesense-search","version":"0.2.8","description":"Indexes data from Firestore into Typesense for full-text search","roles":[{"role":"datastore.user","reason":"Required to backfill data from your Firestore collection into Typesense"}],"resources":[{"name":"indexToTypesenseOnFirestoreWrite","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:FIRESTORE_COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 120s\n","description":"A function that indexes data into Typesense when it's triggered by Firestore changes","deletionPolicy":"DELETE"},{"name":"backfillToTypesenseFromFirestore","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 2048\neventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/typesense_sync/backfill\nlocation: ${LOCATION}\nmaxInstances: 1\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 540s\n","description":"A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Typesense","url":"https://typesense.org"},"license":"Apache-2.0","releaseNotesUrl":"https://github.com/typesense/firestore-typesense-search/releases","sourceUrl":"https://github.com/typesense/firebase-typesense-search-extension/tree/master","params":[{"param":"FIRESTORE_COLLECTION_PATH","label":"Firestore Collection Path","type":"STRING","description":"The Firestore collection that needs to be indexed into Typesense.","required":true,"default":"typesense","example":"path/to/firestore_collection","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/firestore_collection\".","immutable":true},{"param":"FIRESTORE_COLLECTION_FIELDS","label":"Firestore Collection Fields","type":"STRING","description":"A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.","example":"field1,field2,field3"},{"param":"TYPESENSE_HOSTS","label":"Typesense Hosts","type":"STRING","description":"A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames.","required":true,"example":"xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net"},{"param":"TYPESENSE_API_KEY","label":"Typesense API Key","type":"SECRET","description":"An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud","required":true},{"param":"TYPESENSE_COLLECTION_NAME","label":"Typesense Collection Name","type":"STRING","description":"Typesense collection name to index data into","required":true,"default":"companies"},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true}],"preinstallContent":"Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or a Self-Hosted server).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n#### Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n","postinstallContent":"### Post-installation Notes\n\nNow that you've installed the extension, changes from `${param:FIRESTORE_COLLECTION_PATH}`\nin your Firestore Database will be synced to the Typesense Collection `${param:TYPESENSE_COLLECTION_NAME}`\non `${param:TYPESENSE_HOSTS}`.\n\n### Pre-requisites\n\nAs a reminder in case you haven't already done this, make sure that you have setup a Typesense Collection in one of the following ways:\n\n- Through the Typesense Cloud Dashboard or\n- Through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension expects a Typesense Cloud collection to already be created and does not create it for you.\n\n### Backfilling Data\n\nThis extension only syncs data that was created or changed after it was installed.\nIn order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n1. Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n2. Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n### See the Extension in Action\n\nTry adding or updating a Firestore document in `${param:FIRESTORE_COLLECTION_PATH}` through the Firestore UI.\nYou should see the change reflected in your Typesense collection.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Firestore / Firebase Typesense Search Extension ⚡ 🔍 \n\n[![CircleCI](https://circleci.com/gh/typesense/firestore-typesense-search.svg?style=shield)](https://circleci.com/gh/typesense/firestore-typesense-search)\n\nA Firebase extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), \nto be able to do full-text fuzzy search on your Firestore data, with typo tolerance, faceting, filtering, sorting, curation, synonyms, geosearch and more.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n**What is Typesense?**\n\nIf you're new to [Typesense](https://typesense.org), it is an open source search engine that is simple to use, run and scale, with clean APIs and documentation. Think of it as an open source alternative to Algolia and an easier-to-use, batteries-included alternative to ElasticSearch. Get a quick overview from [this guide](https://typesense.org/docs/guide).\n\n\n## ⚙️ Usage\n\n### 1. Setup Prerequisites\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Set up](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or Self-Hosted).\n3. Set up a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\n### 2. Install the Extension \n\nYou can install this extension either through the Firebase Web console or through the Firebase CLI.\n\n##### Firebase Console\n\n[![Install this extension in your Firebase project](https://www.gstatic.com/mobilesdk/210513_mobilesdk/install-extension.png \"Install this extension in your Firebase project\")][install-link]\n\n[install-link]: https://console.firebase.google.com/project/_/extensions/install?ref=typesense/firestore-typesense-search\n\n##### Firebase CLI\n\n```bash\nfirebase ext:install typesense/firestore-typesense-search --project=[your-project-id]\n```\n\nLearn more about installing extensions in the Firebase Extensions documentation:\n\n- [Console](https://firebase.google.com/docs/extensions/install-extensions?platform=console)\n- [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n\n##### Syncing Multiple Firestore collections\n\nYou can install this extension multiple times in your Firebase project by clicking on the installation link above multiple times, and use a different Firestore collection path in each installation instance. [Here](https://github.com/typesense/firestore-typesense-search/issues/9#issuecomment-885940705) is a screenshot of how this looks.\n\n### 3. Backfilling data (optional)\n\nThis extension only syncs data that was created or changed in Firestore, after it was installed. In order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n- Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n- Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background Cloud function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n## 🧾 Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing).\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n\n\n## 🎛️ Configuration Parameters\n\nWhen you install this extension, you'll be able to configure the following parameters:\n\n| Parameter | Description |\n|-----------|-------------|\n| Firestore Collection Path | The Firestore collection that needs to be indexed into Typesense. |\n| Firestore Collection Fields | A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields. |\n| Typesense Hosts | A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames. | \n| Typesense API Key | An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud. |\n| Typesense Collection Name | Typesense collection name to index data into. |\n| Cloud Functions location | Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations). |\n\n\n\n## ☁️ Cloud Functions\n\n* **indexToTypesenseOnFirestoreWrite:** A function that indexes data into Typesense when it's triggered by Firestore changes.\n\n* **backfillToTypesenseFromFirestore:** A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.\n\n\n## 🔑 Access Required\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Required to backfill data from your Firestore collection into Typesense)\n\n## Development Workflow\n\n#### Run Emulator\n\n```shell\nnpm run emulator\nnpm run typesenseServer\n```\n\n- Emulator UI will be accessible at http://localhost:4000.\n- Local Typesense server will be accessible at http://localhost:8108\n\nAdd records in the Firestore UI and they should be created in Typesense.\n\n#### Run Integration Tests\n\n```shell\nnpm run test\n```\n\n#### Generate README\n\nThe Firebase CLI provides the following convenience command to auto-generate a README file containing content\npulled from extension.yaml file and PREINSTALL.md file:\n\n```shell\nfirebase ext:info ./ --markdown > README.md\n```\n\n#### Publish Extension\n\n- Update version number in extension.yaml\n- Add entry to CHANGELOG.md\n- \n    ```shell\n    firebase ext:dev:publish typesense/firestore-typesense-search\n    ```\n- Create release in Github\n\n## ℹ️ Support\n\nPlease open a Github issue or join our [Slack community](https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg).\n","externalServices":[{"name":"Typesense Cloud","pricingUri":"https://cloud.typesense.org/pricing"},{"name":"Typesense Self Hosted (Free)","pricingUri":"https://typesense.org/downloads"}],"displayName":"Search Firestore with Typesense"},"state":"PUBLISHED","hash":"a8ccc68575ba7005977665b9bdb68e0e012aadceb2579ef589f8f154d1181bb9","createTime":"2022-03-31T19:04:43.712550Z","releaseNotes":"- Add default values to params, add links to external services needed for plugin\n"},{"name":"publishers/typesense/extensions/firestore-typesense-search/versions/0.3.0","ref":"typesense/firestore-typesense-search@0.3.0","spec":{"specVersion":"v1beta","name":"firestore-typesense-search","version":"0.3.0","description":"Indexes data from Firestore into Typesense for full-text search","roles":[{"role":"datastore.user","reason":"Required to backfill data from your Firestore collection into Typesense"}],"resources":[{"name":"indexToTypesenseOnFirestoreWrite","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:FIRESTORE_COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 120s\n","description":"A function that indexes data into Typesense when it's triggered by Firestore changes","deletionPolicy":"DELETE"},{"name":"backfillToTypesenseFromFirestore","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 2048\neventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/typesense_sync/backfill\nlocation: ${LOCATION}\nmaxInstances: 1\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 540s\n","description":"A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Typesense","url":"https://typesense.org"},"license":"Apache-2.0","releaseNotesUrl":"https://github.com/typesense/firestore-typesense-search/releases","sourceUrl":"https://github.com/typesense/firebase-typesense-search-extension/tree/master","params":[{"param":"FIRESTORE_COLLECTION_PATH","label":"Firestore Collection Path","type":"STRING","description":"The Firestore collection that needs to be indexed into Typesense.","required":true,"default":"typesense","example":"path/to/firestore_collection","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/firestore_collection\".","immutable":true},{"param":"FIRESTORE_COLLECTION_FIELDS","label":"Firestore Collection Fields","type":"STRING","description":"A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.","example":"field1,field2,field3"},{"param":"TYPESENSE_HOSTS","label":"Typesense Hosts","type":"STRING","description":"A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames.","required":true,"example":"xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net"},{"param":"TYPESENSE_API_KEY","label":"Typesense API Key","type":"SECRET","description":"An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud","required":true},{"param":"TYPESENSE_COLLECTION_NAME","label":"Typesense Collection Name","type":"STRING","description":"Typesense collection name to index data into","required":true,"default":"companies"},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true}],"preinstallContent":"Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or a Self-Hosted server).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n#### Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n","postinstallContent":"### Post-installation Notes\n\nNow that you've installed the extension, changes from `${param:FIRESTORE_COLLECTION_PATH}`\nin your Firestore Database will be synced to the Typesense Collection `${param:TYPESENSE_COLLECTION_NAME}`\non `${param:TYPESENSE_HOSTS}`.\n\n### Pre-requisites\n\nAs a reminder in case you haven't already done this, make sure that you have setup a Typesense Collection in one of the following ways:\n\n- Through the Typesense Cloud Dashboard or\n- Through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension expects a Typesense Cloud collection to already be created and does not create it for you.\n\n### Backfilling Data\n\nThis extension only syncs data that was created or changed after it was installed.\nIn order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n1. Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n2. Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n### See the Extension in Action\n\nTry adding or updating a Firestore document in `${param:FIRESTORE_COLLECTION_PATH}` through the Firestore UI.\nYou should see the change reflected in your Typesense collection.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Firestore / Firebase Typesense Search Extension ⚡ 🔍 \n\n[![CircleCI](https://circleci.com/gh/typesense/firestore-typesense-search.svg?style=shield)](https://circleci.com/gh/typesense/firestore-typesense-search)\n\nA Firebase extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), \nto be able to do full-text fuzzy search on your Firestore data, with typo tolerance, faceting, filtering, sorting, curation, synonyms, geosearch and more.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n**What is Typesense?**\n\nIf you're new to [Typesense](https://typesense.org), it is an open source search engine that is simple to use, run and scale, with clean APIs and documentation. Think of it as an open source alternative to Algolia and an easier-to-use, batteries-included alternative to ElasticSearch. Get a quick overview from [this guide](https://typesense.org/docs/guide).\n\n\n## ⚙️ Usage\n\n### 1. Setup Prerequisites\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Set up](https://typesense.org/docs/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or Self-Hosted).\n3. Set up a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/latest/api/collections.html#create-a-collection).\n\n### 2. Install the Extension \n\nYou can install this extension either through the Firebase Web console or through the Firebase CLI.\n\n##### Firebase Console\n\n[![Install this extension in your Firebase project](https://www.gstatic.com/mobilesdk/210513_mobilesdk/install-extension.png \"Install this extension in your Firebase project\")][install-link]\n\n[install-link]: https://console.firebase.google.com/project/_/extensions/install?ref=typesense/firestore-typesense-search\n\n##### Firebase CLI\n\n```bash\nfirebase ext:install typesense/firestore-typesense-search@0.2.7 --project=[your-project-id]\n```\n\nLearn more about installing extensions in the Firebase Extensions documentation:\n\n- [Console](https://firebase.google.com/docs/extensions/install-extensions?platform=console)\n- [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n\n##### Syncing Multiple Firestore collections\n\nYou can install this extension multiple times in your Firebase project by clicking on the installation link above multiple times, and use a different Firestore collection path in each installation instance. [Here](https://github.com/typesense/firestore-typesense-search/issues/9#issuecomment-885940705) is a screenshot of how this looks.\n\n### 3. Backfilling data (optional)\n\nThis extension only syncs data that was created or changed in Firestore, after it was installed. In order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n- Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n- Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background Cloud function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n## 🧾 Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing).\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n\n\n## 🎛️ Configuration Parameters\n\nWhen you install this extension, you'll be able to configure the following parameters:\n\n| Parameter | Description |\n|-----------|-------------|\n| Firestore Collection Path | The Firestore collection that needs to be indexed into Typesense. |\n| Firestore Collection Fields | A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields. |\n| Typesense Hosts | A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames. | \n| Typesense API Key | An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud. |\n| Typesense Collection Name | Typesense collection name to index data into. |\n| Cloud Functions location | Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations). |\n\n\n\n## ☁️ Cloud Functions\n\n* **indexToTypesenseOnFirestoreWrite:** A function that indexes data into Typesense when it's triggered by Firestore changes.\n\n* **backfillToTypesenseFromFirestore:** A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.\n\n\n## 🔑 Access Required\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Required to backfill data from your Firestore collection into Typesense)\n\n## Development Workflow\n\n#### Run Emulator\n\n```shell\nnpm run emulator\nnpm run typesenseServer\n```\n\n- Emulator UI will be accessible at http://localhost:4000.\n- Local Typesense server will be accessible at http://localhost:8108\n\nAdd records in the Firestore UI and they should be created in Typesense.\n\n#### Run Integration Tests\n\n```shell\nnpm run test\n```\n\n#### Generate README\n\nThe Firebase CLI provides the following convenience command to auto-generate a README file containing content\npulled from extension.yaml file and PREINSTALL.md file:\n\n```shell\nfirebase ext:info ./ --markdown > README.md\n```\n\n#### Publish Extension\n\n- Update version number in extension.yaml\n- Add entry to CHANGELOG.md\n- \n    ```shell\n    firebase ext:dev:publish typesense/firestore-typesense-search\n    ```\n- Create release in Github\n\n## ℹ️ Support\n\nPlease open a Github issue or join our [Slack community](https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg).\n","externalServices":[{"name":"Typesense Cloud","pricingUri":"https://cloud.typesense.org/pricing"},{"name":"Typesense Self Hosted (Free)","pricingUri":"https://typesense.org/downloads"}],"displayName":"Search Firestore with Typesense"},"state":"PUBLISHED","hash":"54830f068de0230b225c0ff9985311703a710dfd0cc16745c048307d10e44a85","createTime":"2022-04-18T20:57:05.129938Z","releaseNotes":"- Map Firestore Timestamps to int64 values in Typesense\n- Map Firestore GeoPoint values to Typesense geopoint format\n- Flatten nested field values to top-level keys in Typesense\n"},{"name":"publishers/typesense/extensions/firestore-typesense-search/versions/0.4.0","ref":"typesense/firestore-typesense-search@0.4.0","spec":{"specVersion":"v1beta","name":"firestore-typesense-search","version":"0.4.0","description":"Indexes data from Firestore into Typesense for full-text search","roles":[{"role":"datastore.user","reason":"Required to backfill data from your Firestore collection into Typesense"}],"resources":[{"name":"indexToTypesenseOnFirestoreWrite","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:FIRESTORE_COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 120s\n","description":"A function that indexes data into Typesense when it's triggered by Firestore changes","deletionPolicy":"DELETE"},{"name":"backfillToTypesenseFromFirestore","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 2048\neventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/typesense_sync/backfill\nlocation: ${LOCATION}\nmaxInstances: 1\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 540s\n","description":"A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Typesense","url":"https://typesense.org"},"license":"Apache-2.0","releaseNotesUrl":"https://github.com/typesense/firestore-typesense-search/releases","sourceUrl":"https://github.com/typesense/firebase-typesense-search-extension/tree/master","params":[{"param":"FIRESTORE_COLLECTION_PATH","label":"Firestore Collection Path","type":"STRING","description":"The Firestore collection that needs to be indexed into Typesense.","required":true,"default":"path/to/firestore_collection","example":"path/to/firestore_collection","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/firestore_collection\".","immutable":true},{"param":"FIRESTORE_COLLECTION_FIELDS","label":"Firestore Collection Fields","type":"STRING","description":"A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.","example":"field1,field2,field3"},{"param":"TYPESENSE_HOSTS","label":"Typesense Hosts","type":"STRING","description":"A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames.","required":true,"example":"xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net"},{"param":"TYPESENSE_API_KEY","label":"Typesense API Key","type":"SECRET","description":"An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud","required":true},{"param":"TYPESENSE_COLLECTION_NAME","label":"Typesense Collection Name","type":"STRING","description":"Typesense collection name to index data into","required":true,"default":"companies"},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true}],"preinstallContent":"Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or a Self-Hosted server).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n#### Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n","postinstallContent":"### Post-installation Notes\n\nNow that you've installed the extension, changes from `${param:FIRESTORE_COLLECTION_PATH}`\nin your Firestore Database will be synced to the Typesense Collection `${param:TYPESENSE_COLLECTION_NAME}`\non `${param:TYPESENSE_HOSTS}`.\n\n### Pre-requisites\n\nAs a reminder in case you haven't already done this, make sure that you have setup a Typesense Collection in one of the following ways:\n\n- Through the Typesense Cloud Dashboard or\n- Through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension expects a Typesense Cloud collection to already be created and does not create it for you.\n\n### Backfilling Data\n\nThis extension only syncs data that was created or changed after it was installed.\nIn order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n1. Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n2. Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n### See the Extension in Action\n\nTry adding or updating a Firestore document in `${param:FIRESTORE_COLLECTION_PATH}` through the Firestore UI.\nYou should see the change reflected in your Typesense collection.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Firestore / Firebase Typesense Search Extension ⚡ 🔍 \n\n[![CircleCI](https://circleci.com/gh/typesense/firestore-typesense-search.svg?style=shield)](https://circleci.com/gh/typesense/firestore-typesense-search)\n\nA Firebase extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), \nto be able to do full-text fuzzy search on your Firestore data, with typo tolerance, faceting, filtering, sorting, curation, synonyms, geosearch and more.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n**What is Typesense?**\n\nIf you're new to [Typesense](https://typesense.org), it is an open source search engine that is simple to use, run and scale, with clean APIs and documentation. Think of it as an open source alternative to Algolia and an easier-to-use, batteries-included alternative to ElasticSearch. Get a quick overview from [this guide](https://typesense.org/docs/guide).\n\n\n## ⚙️ Usage\n\n### Step 1️⃣ : Setup Prerequisites\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Set up](https://typesense.org/docs/guide/install-typesense.html) a Typesense cluster on [Typesense Cloud](https://cloud.typesense.org) or [Self-Hosted](https://typesense.org/docs/guide/install-typesense.html#option-2-local-machine-self-hosting) (free).\n3. Set up a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/latest/api/collections.html#create-a-collection).\n  \n⚠️ ☝️ #3 above is a commonly missed step. This extension **does not create the Typesense Collection for you**. Instead it syncs data to a Typesense collection you've already created. If you see an HTTP 404 in the extension logs, it's most likely because of missing this step. \n\n### Step 2️⃣ : Install the Extension \n\nYou can install this extension either through the Firebase Web console or through the Firebase CLI.\n\n##### Firebase Console\n\n[![Install this extension in your Firebase project](https://www.gstatic.com/mobilesdk/210513_mobilesdk/install-extension.png \"Install this extension in your Firebase project\")][install-link]\n\n[install-link]: https://console.firebase.google.com/project/_/extensions/install?ref=typesense/firestore-typesense-search\n\n##### Firebase CLI\n\n```bash\nfirebase ext:install typesense/firestore-typesense-search --project=[your-project-id]\n```\n\nLearn more about installing extensions in the Firebase Extensions documentation:\n\n- [Console](https://firebase.google.com/docs/extensions/install-extensions?platform=console)\n- [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n\n##### Syncing Multiple Firestore collections\n\nYou can install this extension multiple times in your Firebase project by clicking on the installation link above multiple times, and use a different Firestore collection path in each installation instance. [Here](https://github.com/typesense/firestore-typesense-search/issues/9#issuecomment-885940705) is a screenshot of how this looks.\n\n### Step 3️⃣ : [Optional] Backfill existing data\n\nThis extension only syncs data that was created or changed in Firestore, after it was installed. In order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n- Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n- Create a new document with the ID `backfill` and contents of `{trigger: true}`\n- [Optional] If you have [multiple instances](#syncing-multiple-firestore-collections) of the extension installed to sync multiple collections, you can specify which particular collections are backfilled by setting the contents of the `backfill` document in the previous step to `{trigger: true, firestore_collections: [\"path/to/firestore_collection_1\", \"path/to/firestore_collection_2\"] }`\n\nThis will trigger the backfill background Cloud function, which will read data from your Firestore collection(s) and create equivalent documents in your Typesense collection.\n\n## 🧾 Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing).\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n\n\n## 🎛️ Configuration Parameters\n\nWhen you install this extension, you'll be able to configure the following parameters:\n\n| Parameter | Description |\n|-----------|-------------|\n| Firestore Collection Path | The Firestore collection that needs to be indexed into Typesense. |\n| Firestore Collection Fields | A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields. |\n| Typesense Hosts | A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames. | \n| Typesense API Key | An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud. |\n| Typesense Collection Name | Typesense collection name to index data into. |\n| Cloud Functions location | Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations). |\n\n\n\n## ☁️ Cloud Functions\n\n* **indexToTypesenseOnFirestoreWrite:** A function that indexes data into Typesense when it's triggered by Firestore changes.\n\n* **backfillToTypesenseFromFirestore:** A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.\n\n\n## 🔑 Access Required\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Required to backfill data from your Firestore collection into Typesense)\n\n## Development Workflow\n\n#### Run Emulator\n\n```shell\nnpm run emulator\nnpm run typesenseServer\n```\n\n- Emulator UI will be accessible at http://localhost:4000.\n- Local Typesense server will be accessible at http://localhost:8108\n\nAdd records in the Firestore UI and they should be created in Typesense.\n\n#### Run Integration Tests\n\n```shell\nnpm run test\n```\n\n#### Generate README\n\nThe Firebase CLI provides the following convenience command to auto-generate a README file containing content\npulled from extension.yaml file and PREINSTALL.md file:\n\n```shell\nfirebase ext:info ./ --markdown > README.md\n```\n\n#### Publish Extension\n\n- Update version number in extension.yaml\n- Add entry to CHANGELOG.md\n- \n    ```shell\n    firebase ext:dev:publish typesense/firestore-typesense-search\n    ```\n- Create release in Github\n\n## ℹ️ Support\n\nPlease open a Github issue or join our [Slack community](https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg).\n","externalServices":[{"name":"Typesense Cloud","pricingUri":"https://cloud.typesense.org/pricing"},{"name":"Typesense Self Hosted (Free)","pricingUri":"https://typesense.org/downloads"}],"displayName":"Search Firestore with Typesense"},"state":"PUBLISHED","hash":"1cb59dd064078252bbb6627bdfd82fba7bba7a8ed39e3a29cf9c415205bb6e72","createTime":"2022-07-06T23:55:11.437854Z","releaseNotes":"- Sync ref.path to Typesense\n- Ability to backfill specific collections to Typesense, when multiple instances of the extension are installed.\n"},{"name":"publishers/typesense/extensions/firestore-typesense-search/versions/0.4.1","ref":"typesense/firestore-typesense-search@0.4.1","spec":{"specVersion":"v1beta","name":"firestore-typesense-search","version":"0.4.1","description":"Indexes data from Firestore into Typesense for full-text search","roles":[{"role":"datastore.user","reason":"Required to backfill data from your Firestore collection into Typesense"}],"resources":[{"name":"indexToTypesenseOnFirestoreWrite","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:FIRESTORE_COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 120s\n","description":"A function that indexes data into Typesense when it's triggered by Firestore changes","deletionPolicy":"DELETE"},{"name":"backfillToTypesenseFromFirestore","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 2048\neventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/typesense_sync/backfill\nlocation: ${LOCATION}\nmaxInstances: 1\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 540s\n","description":"A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Typesense","url":"https://typesense.org"},"license":"Apache-2.0","releaseNotesUrl":"https://github.com/typesense/firestore-typesense-search/releases","sourceUrl":"https://github.com/typesense/firebase-typesense-search-extension/tree/master","params":[{"param":"FIRESTORE_COLLECTION_PATH","label":"Firestore Collection Path","type":"STRING","description":"The Firestore collection that needs to be indexed into Typesense.","required":true,"default":"path/to/firestore_collection","example":"path/to/firestore_collection","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/firestore_collection\".","immutable":true},{"param":"FIRESTORE_COLLECTION_FIELDS","label":"Firestore Collection Fields","type":"STRING","description":"A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.","example":"field1,field2,field3"},{"param":"TYPESENSE_HOSTS","label":"Typesense Hosts","type":"STRING","description":"A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames.","required":true,"example":"xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net"},{"param":"TYPESENSE_API_KEY","label":"Typesense API Key","type":"SECRET","description":"An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud","required":true},{"param":"TYPESENSE_COLLECTION_NAME","label":"Typesense Collection Name","type":"STRING","description":"Typesense collection name to index data into","required":true,"default":"companies"},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true}],"preinstallContent":"Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or a Self-Hosted server).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n#### Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n","postinstallContent":"### Post-installation Notes\n\nNow that you've installed the extension, changes from `${param:FIRESTORE_COLLECTION_PATH}`\nin your Firestore Database will be synced to the Typesense Collection `${param:TYPESENSE_COLLECTION_NAME}`\non `${param:TYPESENSE_HOSTS}`.\n\n### Pre-requisites\n\nAs a reminder in case you haven't already done this, make sure that you have setup a Typesense Collection in one of the following ways:\n\n- Through the Typesense Cloud Dashboard or\n- Through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension expects a Typesense Cloud collection to already be created and does not create it for you.\n\n### Backfilling Data\n\nThis extension only syncs data that was created or changed after it was installed.\nIn order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n1. Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n2. Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n### See the Extension in Action\n\nTry adding or updating a Firestore document in `${param:FIRESTORE_COLLECTION_PATH}` through the Firestore UI.\nYou should see the change reflected in your Typesense collection.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Firestore / Firebase Typesense Search Extension ⚡ 🔍 \n\n[![CircleCI](https://circleci.com/gh/typesense/firestore-typesense-search.svg?style=shield)](https://circleci.com/gh/typesense/firestore-typesense-search)\n\nA Firebase extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), \nto be able to do full-text fuzzy search on your Firestore data, with typo tolerance, faceting, filtering, sorting, curation, synonyms, geosearch and more.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n**What is Typesense?**\n\nIf you're new to [Typesense](https://typesense.org), it is an open source search engine that is simple to use, run and scale, with clean APIs and documentation. Think of it as an open source alternative to Algolia and an easier-to-use, batteries-included alternative to ElasticSearch. Get a quick overview from [this guide](https://typesense.org/docs/guide).\n\n\n## ⚙️ Usage\n\n### Step 1️⃣ : Setup Prerequisites\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Set up](https://typesense.org/docs/guide/install-typesense.html) a Typesense cluster on [Typesense Cloud](https://cloud.typesense.org) or [Self-Hosted](https://typesense.org/docs/guide/install-typesense.html#option-2-local-machine-self-hosting) (free).\n3. Set up a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/latest/api/collections.html#create-a-collection).\n  \n⚠️ ☝️ #3 above is a commonly missed step. This extension **does not create the Typesense Collection for you**. Instead it syncs data to a Typesense collection you've already created. If you see an HTTP 404 in the extension logs, it's most likely because of missing this step. \n\n### Step 2️⃣ : Install the Extension \n\nYou can install this extension either through the Firebase Web console or through the Firebase CLI.\n\n##### Firebase Console\n\n[![Install this extension in your Firebase project](https://www.gstatic.com/mobilesdk/210513_mobilesdk/install-extension.png \"Install this extension in your Firebase project\")][install-link]\n\n[install-link]: https://console.firebase.google.com/project/_/extensions/install?ref=typesense/firestore-typesense-search\n\n##### Firebase CLI\n\n```bash\nfirebase ext:install typesense/firestore-typesense-search --project=[your-project-id]\n```\n\nLearn more about installing extensions in the Firebase Extensions documentation:\n\n- [Console](https://firebase.google.com/docs/extensions/install-extensions?platform=console)\n- [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n\n##### Syncing Multiple Firestore collections\n\nYou can install this extension multiple times in your Firebase project by clicking on the installation link above multiple times, and use a different Firestore collection path in each installation instance. [Here](https://github.com/typesense/firestore-typesense-search/issues/9#issuecomment-885940705) is a screenshot of how this looks.\n\n### Step 3️⃣ : [Optional] Backfill existing data\n\nThis extension only syncs data that was created or changed in Firestore, after it was installed. In order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n- Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n- Create a new document with the ID `backfill` and contents of `{trigger: true}`\n- [Optional] If you have [multiple instances](#syncing-multiple-firestore-collections) of the extension installed to sync multiple collections, you can specify which particular collections are backfilled by setting the contents of the `backfill` document in the previous step to `{trigger: true, firestore_collections: [\"path/to/firestore_collection_1\", \"path/to/firestore_collection_2\"] }`\n\nThis will trigger the backfill background Cloud function, which will read data from your Firestore collection(s) and create equivalent documents in your Typesense collection.\n\n## 🧾 Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing).\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n\n\n## 🎛️ Configuration Parameters\n\nWhen you install this extension, you'll be able to configure the following parameters:\n\n| Parameter | Description |\n|-----------|-------------|\n| Firestore Collection Path | The Firestore collection that needs to be indexed into Typesense. |\n| Firestore Collection Fields | A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields. |\n| Typesense Hosts | A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames. | \n| Typesense API Key | An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud. |\n| Typesense Collection Name | Typesense collection name to index data into. |\n| Cloud Functions location | Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations). |\n\n\n\n## ☁️ Cloud Functions\n\n* **indexToTypesenseOnFirestoreWrite:** A function that indexes data into Typesense when it's triggered by Firestore changes.\n\n* **backfillToTypesenseFromFirestore:** A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.\n\n\n## 🔑 Access Required\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Required to backfill data from your Firestore collection into Typesense)\n\n## Development Workflow\n\n#### Run Emulator\n\n```shell\nnpm run emulator\nnpm run typesenseServer\n```\n\n- Emulator UI will be accessible at http://localhost:4000.\n- Local Typesense server will be accessible at http://localhost:8108\n\nAdd records in the Firestore UI and they should be created in Typesense.\n\n#### Run Integration Tests\n\n```shell\nnpm run test\n```\n\n#### Generate README\n\nThe Firebase CLI provides the following convenience command to auto-generate a README file containing content\npulled from extension.yaml file and PREINSTALL.md file:\n\n```shell\nfirebase ext:info ./ --markdown > README.md\n```\n\n#### Publish Extension\n\n- Update version number in extension.yaml\n- Add entry to CHANGELOG.md\n- \n    ```shell\n    firebase ext:dev:publish typesense/firestore-typesense-search\n    ```\n- Create release in Github\n\n## ℹ️ Support\n\nPlease open a Github issue or join our [Slack community](https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg).\n","externalServices":[{"name":"Typesense Cloud","pricingUri":"https://cloud.typesense.org/pricing"},{"name":"Typesense Self Hosted (Free)","pricingUri":"https://typesense.org/downloads"}],"displayName":"Search Firestore with Typesense"},"state":"PUBLISHED","hash":"ff8eef9efd38bc06fa467d6d19c3a95d37d7835b35a2aad99b5a461e1a9bc4f7","createTime":"2022-09-12T19:28:53.092455Z","releaseNotes":"- Use `for...of` instead of `forEach` in backfill function. #37\n"}]}
[debug] [2022-09-29T10:34:01.818Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/publishers/typesense/extensions/firestore-typesense-search/versions/0.4.1 [none]
[debug] [2022-09-29T10:34:03.861Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/publishers/typesense/extensions/firestore-typesense-search/versions/0.4.1 200
[debug] [2022-09-29T10:34:03.862Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/publishers/typesense/extensions/firestore-typesense-search/versions/0.4.1 {"name":"publishers/typesense/extensions/firestore-typesense-search/versions/0.4.1","ref":"typesense/firestore-typesense-search@0.4.1","spec":{"specVersion":"v1beta","name":"firestore-typesense-search","version":"0.4.1","description":"Indexes data from Firestore into Typesense for full-text search","roles":[{"role":"datastore.user","reason":"Required to backfill data from your Firestore collection into Typesense"}],"resources":[{"name":"indexToTypesenseOnFirestoreWrite","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:FIRESTORE_COLLECTION_PATH}/{documentID}\nlocation: ${LOCATION}\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 120s\n","description":"A function that indexes data into Typesense when it's triggered by Firestore changes","deletionPolicy":"DELETE"},{"name":"backfillToTypesenseFromFirestore","type":"firebaseextensions.v1beta.function","propertiesYaml":"availableMemoryMb: 2048\neventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.write\n  resource: projects/${param:PROJECT_ID}/databases/(default)/documents/typesense_sync/backfill\nlocation: ${LOCATION}\nmaxInstances: 1\nruntime: nodejs14\nsourceDirectory: functions\ntimeout: 540s\n","description":"A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.","deletionPolicy":"DELETE"}],"billingRequired":true,"author":{"authorName":"Typesense","url":"https://typesense.org"},"license":"Apache-2.0","releaseNotesUrl":"https://github.com/typesense/firestore-typesense-search/releases","sourceUrl":"https://github.com/typesense/firebase-typesense-search-extension/tree/master","params":[{"param":"FIRESTORE_COLLECTION_PATH","label":"Firestore Collection Path","type":"STRING","description":"The Firestore collection that needs to be indexed into Typesense.","required":true,"default":"path/to/firestore_collection","example":"path/to/firestore_collection","validationRegex":"^[^/]+(/[^/]+/[^/]+)*$","validationErrorMessage":"Firestore collection paths must be an odd number of segments separated by slashes, e.g. \"path/to/firestore_collection\".","immutable":true},{"param":"FIRESTORE_COLLECTION_FIELDS","label":"Firestore Collection Fields","type":"STRING","description":"A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields.","example":"field1,field2,field3"},{"param":"TYPESENSE_HOSTS","label":"Typesense Hosts","type":"STRING","description":"A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames.","required":true,"example":"xyz-1.a1.typesense.net,xyz-2.a1.typesense.net,xyz-3.a1.typesense.net"},{"param":"TYPESENSE_API_KEY","label":"Typesense API Key","type":"SECRET","description":"An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud","required":true},{"param":"TYPESENSE_COLLECTION_NAME","label":"Typesense Collection Name","type":"STRING","description":"Typesense collection name to index data into","required":true,"default":"companies"},{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations).","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-central2","label":"Warsaw (europe-central2)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"europe-west6","label":"Zurich (europe-west6)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-northeast2","label":"Osaka (asia-northeast2)"},{"value":"asia-northeast3","label":"Seoul (asia-northeast3)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"asia-southeast2","label":"Jakarta (asia-southeast2)"},{"value":"northamerica-northeast1","label":"Montreal (northamerica-northeast1)"},{"value":"southamerica-east1","label":"Sao Paulo (southamerica-east1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true}],"preinstallContent":"Use this extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), to be able to \ndo full-text fuzzy search on your Firestore data.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n#### Additional setup\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Setup](https://typesense.org/docs/0.20.0/guide/install-typesense.html) a Typesense cluster \n  (on [Typesense Cloud](https://cloud.typesense.org) or a Self-Hosted server).\n3. Setup a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension will sync changes that happen _after_ you've installed the extension. You'll be able to run a function \nto backfill existing data in your Firestore collection. Detailed information for running this backfill function \nwill be provided after you install this extension.\n\n#### Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing)\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n","postinstallContent":"### Post-installation Notes\n\nNow that you've installed the extension, changes from `${param:FIRESTORE_COLLECTION_PATH}`\nin your Firestore Database will be synced to the Typesense Collection `${param:TYPESENSE_COLLECTION_NAME}`\non `${param:TYPESENSE_HOSTS}`.\n\n### Pre-requisites\n\nAs a reminder in case you haven't already done this, make sure that you have setup a Typesense Collection in one of the following ways:\n\n- Through the Typesense Cloud Dashboard or\n- Through the [API](https://typesense.org/docs/0.20.0/api/collections.html#create-a-collection).\n\nThis extension expects a Typesense Cloud collection to already be created and does not create it for you.\n\n### Backfilling Data\n\nThis extension only syncs data that was created or changed after it was installed.\nIn order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n1. Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n2. Create a new document with the ID `backfill` and contents of `{trigger: true}`\n\nThis will trigger the backfill background function, which will read data from your Firestore collection and create equivalent documents in your Typesense collection.\n\n### See the Extension in Action\n\nTry adding or updating a Firestore document in `${param:FIRESTORE_COLLECTION_PATH}` through the Firestore UI.\nYou should see the change reflected in your Typesense collection.\n\n### Monitoring\n\nAs a best practice, you can [monitor the activity](https://firebase.google.com/docs/extensions/manage-installed-extensions#monitor) of your installed extension, including checks on its health, usage, and logs.\n","readmeContent":"# Firestore / Firebase Typesense Search Extension ⚡ 🔍 \n\n[![CircleCI](https://circleci.com/gh/typesense/firestore-typesense-search.svg?style=shield)](https://circleci.com/gh/typesense/firestore-typesense-search)\n\nA Firebase extension to sync data from your Firestore collection to [Typesense](https://typesense.org/), \nto be able to do full-text fuzzy search on your Firestore data, with typo tolerance, faceting, filtering, sorting, curation, synonyms, geosearch and more.\n\nThis extension listens to your specified Firestore collection and syncs Firestore documents to Typesense \non creation, updates and deletes. It also provides a function to help you backfill data.\n\n**What is Typesense?**\n\nIf you're new to [Typesense](https://typesense.org), it is an open source search engine that is simple to use, run and scale, with clean APIs and documentation. Think of it as an open source alternative to Algolia and an easier-to-use, batteries-included alternative to ElasticSearch. Get a quick overview from [this guide](https://typesense.org/docs/guide).\n\n\n## ⚙️ Usage\n\n### Step 1️⃣ : Setup Prerequisites\n\nBefore installing this extension, make sure that you have:\n\n1. [Set up a Cloud Firestore database](https://firebase.google.com/docs/firestore/quickstart) in your Firebase project.\n2. [Set up](https://typesense.org/docs/guide/install-typesense.html) a Typesense cluster on [Typesense Cloud](https://cloud.typesense.org) or [Self-Hosted](https://typesense.org/docs/guide/install-typesense.html#option-2-local-machine-self-hosting) (free).\n3. Set up a Typesense Collection either through the Typesense Cloud dashboard or \n  through the [API](https://typesense.org/docs/latest/api/collections.html#create-a-collection).\n  \n⚠️ ☝️ #3 above is a commonly missed step. This extension **does not create the Typesense Collection for you**. Instead it syncs data to a Typesense collection you've already created. If you see an HTTP 404 in the extension logs, it's most likely because of missing this step. \n\n### Step 2️⃣ : Install the Extension \n\nYou can install this extension either through the Firebase Web console or through the Firebase CLI.\n\n##### Firebase Console\n\n[![Install this extension in your Firebase project](https://www.gstatic.com/mobilesdk/210513_mobilesdk/install-extension.png \"Install this extension in your Firebase project\")][install-link]\n\n[install-link]: https://console.firebase.google.com/project/_/extensions/install?ref=typesense/firestore-typesense-search\n\n##### Firebase CLI\n\n```bash\nfirebase ext:install typesense/firestore-typesense-search --project=[your-project-id]\n```\n\nLearn more about installing extensions in the Firebase Extensions documentation:\n\n- [Console](https://firebase.google.com/docs/extensions/install-extensions?platform=console)\n- [CLI](https://firebase.google.com/docs/extensions/install-extensions?platform=cli)\n\n##### Syncing Multiple Firestore collections\n\nYou can install this extension multiple times in your Firebase project by clicking on the installation link above multiple times, and use a different Firestore collection path in each installation instance. [Here](https://github.com/typesense/firestore-typesense-search/issues/9#issuecomment-885940705) is a screenshot of how this looks.\n\n### Step 3️⃣ : [Optional] Backfill existing data\n\nThis extension only syncs data that was created or changed in Firestore, after it was installed. In order to backfill data that already exists in your Firestore collection to your Typesense Collection:\n\n- Create a new Firestore collection called `typesense_sync` through the Firestore UI.\n- Create a new document with the ID `backfill` and contents of `{trigger: true}`\n- [Optional] If you have [multiple instances](#syncing-multiple-firestore-collections) of the extension installed to sync multiple collections, you can specify which particular collections are backfilled by setting the contents of the `backfill` document in the previous step to `{trigger: true, firestore_collections: [\"path/to/firestore_collection_1\", \"path/to/firestore_collection_2\"] }`\n\nThis will trigger the backfill background Cloud function, which will read data from your Firestore collection(s) and create equivalent documents in your Typesense collection.\n\n## 🧾 Billing\n\nTo install an extension, your project must be on the [Blaze (pay as you go) plan](https://firebase.google.com/pricing).\n\n- You will be charged a small amount (typically around $0.01/month) for the Firebase resources required by this extension (even if it is not used).\n- This extension uses other Firebase and Google Cloud Platform services, which have associated charges if you exceed the service’s free tier:\n    - Cloud Firestore\n    - Cloud Functions (Node.js 14+ runtime. [See FAQs](https://firebase.google.com/support/faq#expandable-24))\n- Usage of this extension also requires you to have a running Typesense cluster either on Typesense Cloud or some \n  self-hosted server. You are responsible for any associated costs with these services.\n\n\n## 🎛️ Configuration Parameters\n\nWhen you install this extension, you'll be able to configure the following parameters:\n\n| Parameter | Description |\n|-----------|-------------|\n| Firestore Collection Path | The Firestore collection that needs to be indexed into Typesense. |\n| Firestore Collection Fields | A comma separated list of fields that need to be indexed from each Firestore document. Leave blank to index all fields. |\n| Typesense Hosts | A comma-separated list of Typesense Hosts. For single node clusters, a single hostname is sufficient. For multi-node Highly Available or SDN Clusters, please be sure to mention all hostnames. | \n| Typesense API Key | An Typesense API key with admin permissions. Click on \"Generate API Key\" in cluster dashboard in Typesense Cloud. |\n| Typesense Collection Name | Typesense collection name to index data into. |\n| Cloud Functions location | Where do you want to deploy the functions created for this extension? You usually want a location close to your database. For help selecting a location, refer to the [location selection guide](https://firebase.google.com/docs/functions/locations). |\n\n\n\n## ☁️ Cloud Functions\n\n* **indexToTypesenseOnFirestoreWrite:** A function that indexes data into Typesense when it's triggered by Firestore changes.\n\n* **backfillToTypesenseFromFirestore:** A function that backfills data from a Firestore collection into Typesense, triggered when a Firestore document with the path `typesense_sync/trigger` has the contents of `backfill: true`.\n\n\n## 🔑 Access Required\n\nThis extension will operate with the following project IAM roles:\n\n* datastore.user (Reason: Required to backfill data from your Firestore collection into Typesense)\n\n## Development Workflow\n\n#### Run Emulator\n\n```shell\nnpm run emulator\nnpm run typesenseServer\n```\n\n- Emulator UI will be accessible at http://localhost:4000.\n- Local Typesense server will be accessible at http://localhost:8108\n\nAdd records in the Firestore UI and they should be created in Typesense.\n\n#### Run Integration Tests\n\n```shell\nnpm run test\n```\n\n#### Generate README\n\nThe Firebase CLI provides the following convenience command to auto-generate a README file containing content\npulled from extension.yaml file and PREINSTALL.md file:\n\n```shell\nfirebase ext:info ./ --markdown > README.md\n```\n\n#### Publish Extension\n\n- Update version number in extension.yaml\n- Add entry to CHANGELOG.md\n- \n    ```shell\n    firebase ext:dev:publish typesense/firestore-typesense-search\n    ```\n- Create release in Github\n\n## ℹ️ Support\n\nPlease open a Github issue or join our [Slack community](https://join.slack.com/t/typesense-community/shared_invite/zt-mx4nbsbn-AuOL89O7iBtvkz136egSJg).\n","externalServices":[{"name":"Typesense Cloud","pricingUri":"https://cloud.typesense.org/pricing"},{"name":"Typesense Self Hosted (Free)","pricingUri":"https://typesense.org/downloads"}],"displayName":"Search Firestore with Typesense"},"state":"PUBLISHED","hash":"ff8eef9efd38bc06fa467d6d19c3a95d37d7835b35a2aad99b5a461e1a9bc4f7","createTime":"2022-09-12T19:28:53.092455Z","sourceDownloadUri":"https://storage.googleapis.com/firebase-mod-sources-prod/ff8eef9efd38bc06fa467d6d19c3a95d37d7835b35a2aad99b5a461e1a9bc4f7","releaseNotes":"- Use `for...of` instead of `forEach` in backfill function. #37\n"}
[debug] [2022-09-29T10:34:03.875Z] >>> [apiv2][query] GET https://firebaseextensions.googleapis.com/v1beta/publishers/typesense/extensions/firestore-typesense-search [none]
[debug] [2022-09-29T10:34:05.627Z] <<< [apiv2][status] GET https://firebaseextensions.googleapis.com/v1beta/publishers/typesense/extensions/firestore-typesense-search 200
[debug] [2022-09-29T10:34:05.627Z] <<< [apiv2][body] GET https://firebaseextensions.googleapis.com/v1beta/publishers/typesense/extensions/firestore-typesense-search {"name":"publishers/typesense/extensions/firestore-typesense-search","ref":"typesense/firestore-typesense-search","latestVersion":"0.4.1","latestVersionCreateTime":"2022-09-12T19:28:53.092455Z","state":"PUBLISHED","createTime":"2021-06-12T19:07:14.537434Z","visibility":"PUBLIC","registryLaunchStage":"BETA","iconUri":"https://www.gstatic.com/mobilesdk/211005_mobilesdk/typesense-search-with-typesense.svg","publisher":{"displayName":"Typesense","iconUri":"https://www.gstatic.com/mobilesdk/211005_mobilesdk/typesense-logo.svg"}}
[debug] [2022-09-29T10:34:05.629Z] >>> [apiv2][query] GET https://iam.googleapis.com/v1/roles/datastore.user [none]
[debug] [2022-09-29T10:34:07.621Z] <<< [apiv2][status] GET https://iam.googleapis.com/v1/roles/datastore.user 200
[debug] [2022-09-29T10:34:07.622Z] <<< [apiv2][body] GET https://iam.googleapis.com/v1/roles/datastore.user {"name":"roles/datastore.user","title":"Cloud Datastore User","description":"Provides read/write access to data in a Cloud Datastore database. Intended for application developers and service accounts.","includedPermissions":["appengine.applications.get","datastore.databases.get","datastore.databases.getMetadata","datastore.entities.allocateIds","datastore.entities.create","datastore.entities.delete","datastore.entities.get","datastore.entities.list","datastore.entities.update","datastore.indexes.list","datastore.namespaces.get","datastore.namespaces.list","datastore.statistics.get","datastore.statistics.list","resourcemanager.projects.get","resourcemanager.projects.list"],"stage":"GA","etag":"AA=="}
[info] i  extensions: information about 'typesense/firestore-typesense-search@0.4.1': 
[info] Name: Search Firestore with Typesense
Publisher: typesense
Description: Indexes data from Firestore into Typesense for full-text search
License: Apache-2.0
Source code: https://github.com/typesense/firebase-typesense-search-extension/tree/master
Roles granted to this Extension:
  Cloud Datastore User (Provides read/write access to data in a Cloud Datastore database. Intended for application developers and service accounts.)

[debug] [2022-09-29T10:34:07.662Z] >>> [apiv2][query] GET https://extensions-registry.firebaseapp.com/extensions.json [none]
[debug] [2022-09-29T10:34:07.713Z] <<< [apiv2][status] GET https://extensions-registry.firebaseapp.com/extensions.json 200
[debug] [2022-09-29T10:34:07.713Z] <<< [apiv2][body] GET https://extensions-registry.firebaseapp.com/extensions.json {"mods":{"auth-mailchimp-sync":{"publisher":"firebase"},"delete-user-data":{"publisher":"firebase"},"firestore-algolia-search":{"publisher":"algolia"},"firestore-auth-claims":{"publisher":"firebase"},"firestore-bigquery-export":{"publisher":"firebase"},"firestore-bundle-server":{"publisher":"firebase"},"firestore-counter":{"publisher":"firebase"},"firestore-detect-presence":{"publisher":"firebase"},"firestore-messagebird-send-msg":{"publisher":"messagebird"},"firestore-perspective-toxicity":{"publisher":"jigsaw"},"firestore-schedule-writes":{"publisher":"firebase"},"firestore-send-email":{"publisher":"firebase"},"firestore-sentiment-analysis":{"publisher":"firebase"},"firestore-shorten-urls-bitly":{"publisher":"firebase"},"firestore-shorten-urls-dynamic-links":{"publisher":"firebase"},"firestore-stripe-invoices":{"publisher":"stripe"},"firestore-stripe-subscriptions":{"publisher":"stripe"},"firestore-translate-text":{"publisher":"firebase"},"mailchimp-firebase-sync":{"publisher":"mailchimp"},"pubsub-stream-bigquery":{"publisher":"firebase"},"rtdb-limit-child-nodes":{"publisher":"firebase"},"storage-extract-image-text":{"publisher":"firebase"},"storage-image-labeling":{"publisher":"firebase"},"storage-mirror-firestore":{"publisher":"firebase"},"storage-resize-images":{"publisher":"firebase"},"firestore-elastic-app-search":{"publisher":"elastic"},"track-labels":{"publisher":"shipengine"},"calculate-rates":{"publisher":"shipengine"},"purchase-labels":{"publisher":"shipengine"},"validate-addresses":{"publisher":"shipengine"},"abandoned-cart-emails":{"publisher":"twilio"},"send-message":{"publisher":"twilio"},"sendgrid-sync-contacts":{"publisher":"twilio"},"make-payment":{"publisher":"google-pay"},"firestore-stripe-payments":{"publisher":"stripe"},"firestore-typesense-search":{"publisher":"typesense"},"auth-activity-feeds":{"publisher":"stream"},"auth-chat":{"publisher":"stream"},"firestore-activity-feeds":{"publisher":"stream"},"snapchat-login":{"publisher":"snap"},"snapchat-sticker-generator":{"publisher":"snap"},"firestore-revenuecat-purchases":{"publisher":"revenuecat"}},"featured":{"discover":["firestore-bigquery-export","firestore-algolia-search","firestore-send-email","firestore-stripe-payments","firestore-typesense-search","auth-chat","snapchat-login","storage-resize-images","firestore-revenuecat-purchases","delete-user-data","send-message","mailchimp-firebase-sync","auth-activity-feeds","snapchat-sticker-generator","firestore-elastic-app-search","firestore-activity-feeds","make-payment","firestore-perspective-toxicity","track-labels","validate-addresses","sendgrid-sync-contacts","firestore-translate-text","firestore-messagebird-send-msg","firestore-counter","firestore-stripe-invoices","firestore-shorten-urls-bitly","rtdb-limit-child-nodes","abandoned-cart-emails","calculate-rates","purchase-labels"],"closed-alpha":[]}}
[debug] [2022-09-29T10:34:11.780Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/myuniwork-b6880/adminSdkConfig [none]
[debug] [2022-09-29T10:34:12.444Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/myuniwork-b6880/adminSdkConfig 200
[debug] [2022-09-29T10:34:12.444Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/myuniwork-b6880/adminSdkConfig {"projectId":"myuniwork-b6880","storageBucket":"myuniwork-b6880.appspot.com","locationId":"us-central"}
[debug] [2022-09-29T10:34:12.445Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/myuniwork-b6880 [none]
[debug] [2022-09-29T10:34:13.121Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/myuniwork-b6880 200
[debug] [2022-09-29T10:34:13.122Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/myuniwork-b6880 {"projectId":"myuniwork-b6880","projectNumber":"77703230322","displayName":"MyUniWork","name":"projects/myuniwork-b6880","resources":{"hostingSite":"myuniwork-b6880","storageBucket":"myuniwork-b6880.appspot.com","locationId":"us-central"},"state":"ACTIVE","etag":"1_42202fca-e333-4970-9a96-5befae60eb8a"}
[info] i  extensions: answer the questions below to configure your extension: 
[info] 
Firestore Collection Path: The Firestore collection that needs to be indexed into Typesense.
[warn] !  Firestore collection paths must be an odd number of segments separated by slashes, e.g. "path/to/firestore_collection". 
[warn] !  Firestore collection paths must be an odd number of segments separated by slashes, e.g. "path/to/firestore_collection". 
[warn] !  Firestore collection paths must be an odd number of segments separated by slashes, e.g. "path/to/firestore_collection". 
