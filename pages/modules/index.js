import Head from 'next/head'
import Image from 'next/image'
// import styles from '../../styles/Home.module.css'
import img from '../../../logosamples/1.JPG' 
import welcomeImg from "../../public/welcome.png";
import Navbar from '../../components/Navbar'
import Footer from '../../components/Footer'
import MenuIcon, { ChatIcon, SearchIcon } from '@heroicons/react/solid'
import readingImg from '../../public/reading.png'
import { BookOpenIcon } from '@heroicons/react/solid';
import Module from '../../components/Module';
import Link from 'next/link';
import { modalState, addModule } from '../../atoms/modalAtom';
import {useRecoilState} from 'recoil';
import Modal from '../../components/Modal';
import { useEffect, useState } from 'react';
import { db, storage } from "../../firebase";
import {
  addDoc,
  collection,
  doc,
  serverTimestamp,
  updateDoc,
  onSnapshot,
  query,
  where,
  orderBy,
  startAt,
  endAt,
} from "@firebase/firestore";
import { useUserAuth } from '../../context/UserAuthContext';

export default function Modules() {
  const [isOpen, setIsOpen] = useRecoilState(modalState);
  const [isAddModule, setIsAddModule] = useRecoilState(addModule);
  const [modules, setModules] = useState([]);
  const [searchInput, setSearchInput] = useState("");
  const {user, userInfo, setUserInfo} = useUserAuth();

  useEffect(
    () => 
    {
        if(user){
            onSnapshot(
                query(doc(db, "users", user?.uid)),
                (userSnapshot) => {
                setUserInfo(userSnapshot.data());    
                }
            ),
            [db]
        }
    }
)
   // get modules form firebase
   useEffect( 
    () =>
    onSnapshot(
      query(collection(db, 'modules')),
      (snapshot) => {
        setModules(snapshot.docs);
      }
    ),
    [db]
  );

  const doSearch = (e) => {
    e.preventDefault();
    if(!searchInput) return;
    // const ref = collection(db, 'modules'); 

    // const modCodeDoc = query(ref, orderBy("moduleCode"), startAt(searchInput), endAt(searchInput+'\uf8ff'));
    // const modNameDoc = query(ref, orderBy("moduleName"), startAt(searchInput), endAt(searchInput+'\uf8ff'));

    // console.log(modCodeDoc);

    // const mods = []; mods.push(modCodeDoc); mods.push(modNameDoc);
    // console.log(mods);
    // setModules(modules => [...modules, modCodeDoc, modNameDoc]);
    // onSnapshot(
    //   query(collection(db, 'modules'), where("moduleCode", "==", searchInput)),
    //   (snapshot) => {
    //     console.log("Done!");
    //     setModules(snapshot.docs);
    //     query(collection(db, 'modules'), where("moduleName", "==", searchInput))
    //   }
    // );

    // onSnapshot(
      
    // );

  }


  return (

    <div className="h-screen">
      <Head>
        <title>My Uni Work | Modules</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar />


      {/* Heading and filter options section */}
      <div className="mt-8 lg:px-24 px-2 flex flex-col lg:flex-row lg:items-center justify-between space-y-3">
          {/* Page heading */}
        <p className="text-lg lg:text-2xl font-semibold text-[#333]">
           Browse Honours Modules Offered.     
        </p>
        {/* Search modulese section */}
        <form className="p-0 m-0" onSubmit={doSearch}>
          <div className="max-w-xs border rounded-md">
              <div className="relative p-0 rounded-md w-full">
                  <div className="absolute inset-y-0 pl-3 flex items-center pointer-events-none">
                    <SearchIcon className="h-6 w-6 text-gray-500" />
                  </div>
                  
                  <input value={searchInput} onChange={(e) =>setSearchInput(e.target.value)} 
                    className="bg-[#F9FAFB] p-3 block w-full pl-10 sm:text-sm 
                        border-gray-300 focus:ring-black 
                        focus:border-black rounded-md shadow-sm" 
                        type="text"
                        placeholder="Search Module"/>
                </div>
          </div>
        </form>
       

         {/* Buttons */}
         <div className="flex items-center">
          <button className="bg-[#103A5C] text-white font-semibold p-3 rounded-md hover:opacity-90">
            <Link href="/modules/schedule" className="navLink">
                    Workload Schedule
            </Link>
               
            </button>
         </div>
         


          {userInfo?.isAdmin && (
            <div className="flex items-center">
              <button className="bg-[#103A5C] text-white font-semibold p-3 rounded-md hover:opacity-90
              " onClick={(e) =>{
                // alert("Hello!");
                console.log("wtf is wrong here???!");
                setIsOpen(true);
                setIsAddModule(true);
                console.log("2: wtf is wrong here???!");
              }} >
              Add Module
              </button>  
            </div>
          )}

                      
        

      </div>
      <div>
        {/* <Modal />  */}
      </div>

      {modules.length <= 0 && (
        <div className="text-center flex items-center justify-center mt-8">
          <p className="text-base font-semibold">No modules found...</p>
        </div>
      )}
      
      {/* Modules list */}
      <div className="flex flex-col lg:px-24 px-2 mt-4 space-y-2 mb-6">
        {modules.map(module =>(
          <Module key={module.id} module={module.data()}/>
        ))}
        


      </div>
      <br />
     
      {isOpen && <Modal/>}
       {/* <Footer /> */}
     </div>
  )
}
